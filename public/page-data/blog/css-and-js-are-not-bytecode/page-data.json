{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/css-and-js-are-not-bytecode","webpackCompilationHash":"7ae26e9fb252170a5f07","result":{"data":{"markdownRemark":{"html":"<p>The earliest computers were often programmed without the help of a programming language, by writing programs in absolute machine language. The programs, in decimal or binary form (mostly binary),were read in from punched cards or magnetic tape or toggled in on switches on the front panel of the computer. I guess they started creating programming languages in order to make it human readable. Then they developed  <a href=\"https://en.wikipedia.org/wiki/First-generation_programming_language\">First Gen</a>, <a href=\"https://en.wikipedia.org/wiki/First-generation_programming_language\">Assembly languages</a>(<em>Ah..my first project</em>) and created something called <a href=\"https://en.wikipedia.org/wiki/High-level_programming_language\"> high-level programming language</a>.</p>\n<p>But we didn't stop there, did we ? We had C,we got Python, a more readable yet slow language.People wrote languages like Basic, Scratch, Ruby to make things more simple and people loved it.Okay...We are there now. Everything was going alright..perfect..superb in the IT Programming industry until when some guys got really serious about JavaScript.I guess that's the reason I am writing this blog now.</p>\n<p>I was in college when I learned web developement. At that time Frontend developers are not actually called developers but designers. I often took my time off from those grumpy sorting algorithms and writing C and used to geek off with these top three.<strong>HTML</strong>, <strong>CSS</strong> and <strong>JavaScript</strong>.Well practically less JavaScript and more <strong>jQuery</strong>. They were so addictive for a curious guy like me who used to draw his imaginations on a 15.6 inch screen.Nobody really cared about JavaScript back then...everyone was so focused on backend like php,asp,django and hipster rails. </p>\n<p>The space was completely occupied by JQuery with more readable and easily writable syntax.Ajax implementation was easy, people don't have to remember those <code class=\"language-text\">getElementById(&#39;blah..blah&#39;)</code>  kinda functions.Coming to CSS, writing CSS was absolutely fun until smaller devices came. People needed better looking websites on their phone rather than squeezed down version of websites.Hence designers started writing media queries(<em>It took me a whole year to understand <code class=\"language-text\">@media queries</code></em>) and grids to make sites responsive.</p>\n<h3>Is there any twist in this story..coz I'm getting bored !</h3>\n<p>Then a guy in <a href=\"https://twitter.com\">Twitter</a> developed a front-end framework called Bootstrap and the whole world just started drooling over it. It was awesome to use..developers don't had to waste a day to design grids or write media queries.But the problem started when people considered this anything more than a framework. Videos got published, books got written to learn Bootstrap. Now a newbie has to learn HTML,CSS,and Bootstrap instead of just the former two.</p>\n<blockquote>\n<p>So Instead of learning how these grids and navbar works,they just started using it.</p>\n</blockquote>\n<p>Same thing also happened to JavaScript.People almost forgot that they can really write an web app by just using pure HTML, CSS and Javascript(<em>Now they are calling it Vanilla JavaScript</em>).There was JQuery for quite sometime till angular came.People started using JavaScript in backend,thanks to <em>node.js</em>. Then came <em>Vue.js</em>, <em>Ember.js</em>, <em>Meteor.js</em>, <em>React.js</em> and more. And surprisingly some of them don't even use JavaScript, instead they use languages that transpiles in JavaScript.</p>\n<p>It's completely understandable when a lazy programmer(<em>Well all are lazy</em>) creates one such language so that he and his company don't have to write lengthy JavaScript all the time, why others are jumping there ditching the core language?? In countries like India,China people are following the same pattern where connectivity is not at it's best yet.</p>\n<blockquote>\n<p>See what happened to <em>Angular</em>..!! They rewrote the whole framework and created <em>Angular 2</em>. React JS is unstable like an active Volcano.</p>\n</blockquote>\n<h3>What's your point man..Can't you be just happy</h3>\n<p>I am not completely against it. All that's happening is good, I surely have nothing against any X framework or Y library. Just teach the newbies the basic first. They need to know both the pro's and con's of any library or framework instead of the <em>\"This framework is so cool..!! coz that company backs it.\"</em> trend.</p>\n<h3>Adios</h3>\n<p>Writing the article sitting next to my manager.Gonna get bad appraisal this quarter.\nInspired from this <a href=\"https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f/\" title=\"How it feels to learn JavaScript in 2016\">article</a>.</p>","frontmatter":{"date":"March 21, 2017","path":"/blog/css-and-js-are-not-bytecode","title":"CSS and JavaScript aren't byte code !!"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}