{"data":{"markdownRemark":{"html":"<p>It's been 8 months since I have been using (neo)vim as my primary text editor.\nInitially it was incredibly tough to adopt and use it in work. Well that would\nbe another story to tell.</p>\n<p>Back then I was working mostly in backend using <a href=\"https://coffeescript.org/\">CoffeeScript</a>\n(I know ðŸ™ˆ). VS Code had a little support for CoffeeScript so I didn't had any\nproblems using vim full time.</p>\n<p>But things changed drastically when I moved into UI development this year. I had\nto spend hours reading blogs, threads on reddit to create at least a workable\nsetup for a hassle-less React enviornment. Here I am sharing my setup and stuffs\nthat still don't work.</p>\n<h3>Syntax Highlighting</h3>\n<p>Out of the box vim/nvim supports syntax highlighting for major programming\nlanguages.</p>\n<blockquote>\n<p>Image</p>\n</blockquote>\n<p>But It is yet to add <code class=\"language-text\">jsx</code> to its inventory. Also there are some javascript\nspecific plugins that makes syntax highlighting much better.</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token comment\">\" JSX</span>\nPlugin <span class=\"token string\">'mxw/vim-jsx'</span>\n<span class=\"token comment\">\" Better JS support</span>\nPlugin <span class=\"token string\">'pangloss/vim-javascript'</span></code></pre></div>","frontmatter":{"date":"May 03, 2019","path":"/blog/setting-up-vim-for-react","title":"Setting up vim for React development"}}},"pageContext":{}}