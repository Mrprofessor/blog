{"componentChunkName":"component---src-templates-blog-template-js","path":"/post/postgresql-and-json-a-love-story-i/","result":{"data":{"markdownRemark":{"id":"b216ccd3-b5e0-5ebf-971e-ce6cb9ce9d17","html":"<p>PostgreSQL provides a set of built-in <a href=\"https://www.postgresql.org/docs/current/functions-json.html#FUNCTIONS-JSON-CREATION-TABLE\" target=\"_blank\" rel=\"nofollow\">JSON creation functions</a> that can be used to build basic JSON structures. This increases the performance up to 10 times more than building it at the back-end layer.</p>\n<blockquote>\n<p>This post is about building different JSON structures using PostgreSQL built-in functions. It doesn't talk about storing and manipulating JSON in PostgreSQL.</p>\n</blockquote>\n<p>In order to proceed with some examples, first we need to setup a test database.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> jsonland</code></pre></div>\n<p>Let's create the following tables.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  email_address <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> team <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> team_user <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">SERIAL</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  team_id <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  user_id <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>team_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> <span class=\"token string\">\"team\"</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Let's Seed the tables with random data.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token string\">\"team\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'team1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'team2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token string\">\"user\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"email_address\"</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user1@mail.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'user2@mail.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token string\">\"team_user\"</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"team_id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We have created three tables i.e. <code class=\"language-text\">team</code>, <code class=\"language-text\">user</code> and <code class=\"language-text\">team_user</code>. <code class=\"language-text\">team_user</code> table maps one-to-may the relationship between users and teams.</p>\n<h3><strong>1. Get the table data as JSON objects</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> row_to_json<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------------------------------+</span>\n<span class=\"token operator\">|</span> row_to_json                                               <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-----------------------------------------------------------|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"id\"</span>:<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"email_address\"</span>:<span class=\"token string\">\"user1@gmail.com\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"id\"</span>:<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"email_address\"</span>:<span class=\"token string\">\"user2@gmail.com\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-----------------------------------------------------------+</span></code></pre></div>\n<p>The above mentioned query will return all the columns of each row as JSON objects.</p>\n<h3><strong>2. Get the table data with specific columns</strong></h3>\n<p>We can specify the particular columns we need rather than getting all at once.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> row_to_json<span class=\"token punctuation\">(</span><span class=\"token keyword\">row</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">+</span><span class=\"token comment\">-------------------------+</span>\n<span class=\"token operator\">|</span> row_to_json             <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-------------------------|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"f1\"</span>:<span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"f2\"</span>:<span class=\"token string\">\"name\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"f1\"</span>:<span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"f2\"</span>:<span class=\"token string\">\"name\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------------------------+</span></code></pre></div>\n<p>Now certainly the keys <code class=\"language-text\">f1</code> and <code class=\"language-text\">f2</code> in the objects are not very useful to us. We would rather want the column names instead of those keys.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> row_to_json<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">FROM</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> users<span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">+</span><span class=\"token comment\">-------------------------+</span>\n<span class=\"token operator\">|</span> row_to_json             <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">-------------------------|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"id\"</span>:<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user1\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> {<span class=\"token string\">\"id\"</span>:<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user2\"</span>} <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">-------------------------+</span></code></pre></div>\n<h3><strong>3. Get the table data as a single JSON object</strong></h3>\n<p>The above examples return us multiple JSON objects(one for each row). Ideally we would want a single array of these objects which won't need any further manipulation at back-end layer.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> array_to_json<span class=\"token punctuation\">(</span>array_agg<span class=\"token punctuation\">(</span>row_to_json<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">from</span> <span class=\"token string\">\"user\"</span>\n\t<span class=\"token punctuation\">)</span> users\n\n<span class=\"token comment\">-- OR</span>\n\n<span class=\"token keyword\">SELECT</span> json_agg<span class=\"token punctuation\">(</span>row_to_json<span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">SELECT</span> id<span class=\"token punctuation\">,</span> name <span class=\"token keyword\">from</span> <span class=\"token string\">\"user\"</span>\n\t<span class=\"token punctuation\">)</span> users\n\n<span class=\"token operator\">+</span><span class=\"token comment\">----------------------------------------------------+</span>\n<span class=\"token operator\">|</span> json_agg                                           <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span><span class=\"token comment\">----------------------------------------------------|</span>\n<span class=\"token operator\">|</span> <span class=\"token punctuation\">[</span>{<span class=\"token string\">\"id\"</span>:<span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user1\"</span>}<span class=\"token punctuation\">,</span> {<span class=\"token string\">\"id\"</span>:<span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"name\"</span>:<span class=\"token string\">\"user2\"</span>}<span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token comment\">----------------------------------------------------+</span></code></pre></div>\n<p>In the above query we are aggregating all the JSON objects and using <code class=\"language-text\">array_agg</code> and then converting them to JSON by applying <code class=\"language-text\">array_to_json</code> function.</p>\n<p>Also we could do the yield the same results by using <code class=\"language-text\">json_agg</code> function, which results into an object instead of JSON string.</p>\n<h3><strong>4. Build JSON object with multiple tables</strong></h3>\n<p>We can also build a new JSON object by using <code class=\"language-text\">json_build_object</code> and specify the keys and values. Let's create an object that will contain data from both team and user table.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> json_build_object<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> json_agg<span class=\"token punctuation\">(</span>row_to_json<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'teams'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> json_agg<span class=\"token punctuation\">(</span>row_to_json<span class=\"token punctuation\">(</span><span class=\"token string\">\"team\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"team\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This query generates a JSON structure that will have all the users and teams each as arrays of objects.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"users\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user1@mail.com\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2@mail.com\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"teams\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"team1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"team2\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><strong>5. Build JSON object by resolving foreign keys</strong></h3>\n<p>We can generate JSON structures by resolving foreign key references and joining multiple tables.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">select</span> json_agg<span class=\"token punctuation\">(</span>row_to_json<span class=\"token punctuation\">(</span>tu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span>\n\t\t<span class=\"token keyword\">select</span> id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token keyword\">select</span> row_to_json<span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> team <span class=\"token keyword\">where</span> team_user<span class=\"token punctuation\">.</span>team_id <span class=\"token operator\">=</span> team<span class=\"token punctuation\">.</span>id\n\t\t<span class=\"token punctuation\">)</span> team<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token keyword\">select</span> row_to_json<span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"user\"</span> <span class=\"token keyword\">where</span> team_user<span class=\"token punctuation\">.</span>user_id <span class=\"token operator\">=</span> <span class=\"token string\">\"user\"</span><span class=\"token punctuation\">.</span>id\n\t\t<span class=\"token punctuation\">)</span> <span class=\"token string\">\"user\"</span>\n\t<span class=\"token keyword\">from</span> team_user\n<span class=\"token punctuation\">)</span> tu</code></pre></div>\n<p>This query contains multiple sub-queries to generate a complex structure. It resolved the references of <code class=\"language-text\">team_id</code> and <code class=\"language-text\">user_id</code> into the corresponding row.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"team\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"team1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user1\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user1@mail.com\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"team\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"team1\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2@mail.com\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"team\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"team2\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"email_address\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"user2@mail.com\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h3><strong>Conclusion</strong></h3>\n<p>Even though PostgreSQL is almost always faster than the back-end language based JSON generation, the query can get complex really quickly as we have nested structures. As long as we understand the basic JSON functions and sub-queries we can build almost any kind of structure without stressing the back-end processes.</p>","frontmatter":{"date":"May 19, 2020","path":"/post/postgresql-and-json-a-love-story-i/","title":"PostgreSQL and JSON: A love story"}}},"pageContext":{}}}