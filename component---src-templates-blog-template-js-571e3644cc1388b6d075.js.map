{"version":3,"sources":["webpack:///./src/templates/BlogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/nav/Nav.js","webpack:///./src/components/layout/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_Layout__WEBPACK_IMPORTED_MODULE_1__","BlogTemplate","_ref","data","console","log","markdownRemark","frontmatter","html","a","createElement","className","title","date","dangerouslySetInnerHTML","__html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Nav","react_default","gatsby_browser_entry","to","Layout","site","siteMetadata","nav_Nav","_3978990474"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAsBaI,EAAS,aAaPK,UA/BM,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACtBC,QAAQC,IAAIF,GADqB,IAEzBG,EAAmBH,EAAnBG,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACEV,EAAAW,EAAAC,cAACV,EAAA,EAAD,KACEF,EAAAW,EAAAC,cAAA,OAAKC,UAAU,WACbb,EAAAW,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAYK,OACnCd,EAAAW,EAAAC,cAAA,WAAMH,EAAYM,MAClBf,EAAAW,EAAAC,cAAA,OACEC,UAAU,oBACVG,wBAAyB,CAAEC,OAAQP,0CCf7ChB,EAAAG,EAAAD,EAAA,sBAAAsB,IAAA,IAAAnB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAoB,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAAO,EAAAkB,GAAAE,EAAA3B,EAAA,IAAA4B,EAAA5B,EAAAO,EAAAoB,GAAA3B,EAAAG,EAAAD,EAAA,sBAAA0B,EAAAX,IAAAjB,EAAA,SAYM6B,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvB1B,EAAAW,EAAAC,cAACW,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMrB,MACLuB,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOxB,MAEtDqB,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMrB,KAAOqB,EAAMrB,KAAKA,KAAOuB,EAAgBF,EAAMG,OAAOxB,MAGvDL,EAAAW,EAAAC,cAAA,uCA4BfM,EAAYc,UAAY,CACtB3B,KAAM4B,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kOCMzCK,EAAmB,SAAAvC,GAAkB,IAAfwC,EAAexC,EAAfwC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOxB,IAAMZ,cAAcqC,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,oFCAAW,EAlBH,WACV,OACEC,EAAA5C,EAAAC,cAAA,WACE2C,EAAA5C,EAAAC,cAAA,UACE2C,EAAA5C,EAAAC,cAAA,UACE2C,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEFF,EAAA5C,EAAAC,cAAA,UACE2C,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,GAAG,cAAT,cAEFF,EAAA5C,EAAAC,cAAA,UACE2C,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,GAAG,WAAT,cCuBKC,IAtBA,SAAAhC,GAAK,OAClB6B,EAAA5C,EAAAC,cAAC4C,EAAA,EAAD,CACE3B,MAAK,aAULC,OAAQ,SAAAzB,GAAI,OACVkD,EAAA5C,EAAAC,cAAA,OAAKC,UAAU,UACb0C,EAAA5C,EAAAC,cAAA,MAAIC,UAAU,SAASR,EAAKsD,KAAKC,aAAa9C,OAC9CyC,EAAA5C,EAAAC,cAACiD,EAAD,MACCnC,EAAMK,WAfb1B,KAAAyD","file":"component---src-templates-blog-template-js-571e3644cc1388b6d075.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"./../components/layout/Layout\";\n\nconst BlogTemplate = ({ data }) => {\n  console.log(data);\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n      <div className=\"content\">\n        <h1 className=\"title\">{frontmatter.title}</h1>\n        <sub>{frontmatter.date}</sub>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`;\n\nexport default BlogTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/blog/\">/blog</Link>\n        </li>\n        <li>\n          <Link to=\"/projects/\">/projects</Link>\n        </li>\n        <li>\n          <Link to=\"/about/\">/about</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Nav from \"../nav/Nav\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\n//export const siteQuery = graphql`\n//query {\n//site {\n//siteMetadata {\n//title\n//description\n//}\n//}\n//}\n//`;\n\nconst Layout = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className=\"layout\">\n        <h2 className=\"title\">{data.site.siteMetadata.title}</h2>\n        <Nav />\n        {props.children}\n      </div>\n    )}\n  />\n);\n\nexport default Layout;\n"],"sourceRoot":""}