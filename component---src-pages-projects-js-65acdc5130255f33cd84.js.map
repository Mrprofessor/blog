{"version":3,"sources":["webpack:///./src/shared/customCard/CustomCard.js","webpack:///./src/shared/projectBoard/ProjectBoard.js","webpack:///./src/shared/customButton/CustomButton.js","webpack:///./src/pages/projects.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/common/utils.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/ruler.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/helpers/parse_link_label.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/state_inline.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/common/entities.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/helpers/parse_link_destination.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/helpers/normalize_link.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/helpers/parse_link_title.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/helpers/normalize_reference.js","webpack:///./node_modules/react-remarkable/dist/index.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/index.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/index.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/renderer.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/parser_core.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/block.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/abbr.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/references.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/inline.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/footnote_tail.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/abbr2.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/replacements.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/smartquotes.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_core/linkify.js","webpack:///./node_modules/react-remarkable/node_modules/autolinker/dist/Autolinker.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/parser_block.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/state_block.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/code.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/fences.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/blockquote.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/hr.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/list.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/footnote.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/heading.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/lheading.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/htmlblock.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/common/html_blocks.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/table.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/deflist.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_block/paragraph.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/parser_inline.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/text.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/newline.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/escape.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/backticks.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/del.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/ins.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/mark.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/emphasis.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/sub.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/sup.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/links.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/footnote_inline.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/footnote_ref.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/autolink.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/common/url_schemas.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/htmltag.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/common/html_re.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/rules_inline/entity.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/configs/default.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/configs/full.js","webpack:///./node_modules/react-remarkable/node_modules/remarkable/lib/configs/commonmark.js"],"names":["CustomCard","header","description","footer","className","ProjectBoard","children","CustomButton","text","link","isDisabled","class_name","onClick","window","open","disabled","Projects","console","log","featuredProjects","Layout","Meta","map","project","source","class","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","value","arguments","that","this","valueOf","call","key","keys","split","j","constructor","hasOwn","Object","hasOwnProperty","object","UNESCAPE_MD_RE","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","fromCharCode","NAMED_ENTITY_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","test","toLowerCase","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","exports","assign","obj","forEach","TypeError","isString","toString","typeOf","unescapeMd","str","indexOf","replace","replaceEntities","escapeHtml","createHTML","url","$export","defined","quot","string","tag","attribute","S","p1","module","NAME","exec","O","P","F","Ruler","__rules__","__cache__","__find__","len","__compile__","self","chains","rule","enabled","alt","altName","push","chain","fn","at","options","idx","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","strict","Array","isArray","disable","getRules","chainName","state","start","level","found","marker","labelEnd","max","posMax","oldPos","pos","oldFlag","isInLabel","labelUnmatchedScopes","src","parser","skipToken","StateInline","parserInline","env","outTokens","tokens","pending","pendingLevel","cache","linkLevel","linkContent","pushPending","type","content","token","cacheSet","val","cacheGet","normalizeLink","validateLink","normalized","decodeURI","err","encodeURI","toUpperCase","defineProperty","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x","_x2","_x3","_again","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_interopRequireDefault","__esModule","_react2","_remarkable2","Remarkable","_React$Component","instance","_classCallCheck","apply","subClass","superClass","create","setPrototypeOf","__proto__","_inherits","Container","container","createElement","nextProps","nextState","md","_this","dangerouslySetInnerHTML","__html","renderMarkdown","Children","child","render","Component","defaultProps","Renderer","ParserCore","ParserBlock","ParserInline","config","StateCore","inlineMode","inline","block","renderer","typographer","preset","core","ruler","configure","set","presets","components","rules","use","plugin","parse","process","parseInline","renderInline","utils","getBreak","_rules","result","blockquote_open","blockquote_close","fence","fences","fenceName","langClass","langPrefix","params","join","fence_custom","highlight","concat","heading_open","hLevel","heading_close","hr","xhtmlOut","bullet_list_open","bullet_list_close","list_item_open","list_item_close","ordered_list_open","order","ordered_list_close","paragraph_open","tight","paragraph_close","addBreak","link_open","title","linkTarget","href","link_close","image","table_open","table_close","thead_open","thead_close","tbody_open","tbody_close","tr_open","tr_close","th_open","align","th_close","td_open","td_close","strong_open","strong_close","em_open","em_close","del_open","del_close","ins_open","ins_close","mark_open","mark_close","sub","sup","hardbreak","softbreak","breaks","htmlblock","htmltag","abbr_open","abbr_close","footnote_ref","n","Number","id","subId","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","dl_open","dt_open","dd_open","dl_close","dt_close","dd_close","nextToken","Core","lines","parseLinkLabel","parseAbbr","label","abbreviations","parseLinkDestination","parseLinkTitle","normalizeReference","parseReference","references","tok","t","lastParagraph","current","currentLabel","insideRef","refTokens","footnotes","filter","pop","count","regEscape","s","nodes","reg","m","regText","blockTokens","abbrRegExp","x","substr","sort","a","b","RegExp","lastIndex","index","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","inlineTokens","blkIdx","QUOTE_TEST_RE","QUOTE_RE","PUNCT_RE","isLetter","replaceAt","thisLevel","lastSpace","nextSpace","item","canOpen","canClose","isSingle","stack","OUTER","single","quotes","Autolinker","LINK_SCAN_RE","isLinkClose","createLinkifier","links","autolinker","stripPrefix","email","twitter","replaceFn","linker","getType","matchedText","getUrl","getEmail","ln","htmlLinkLevel","linkifier","linkify","alphaNumericChars","emailRegex","domainNameRegex","tldRegex","attrValueRegex","nameEqualsValueRegex","alphaNumericCharsStr","cfg","version","urls","normalizeUrlsCfg","phone","hashtag","newWindow","truncate","normalizeTruncateCfg","htmlParser","matchers","tagBuilder","textOrHtml","schemeMatches","wwwMatches","tldMatches","location","Util","defaults","POSITIVE_INFINITY","htmlNodes","getHtmlParser","anchorTagStackCount","matches","node","nodeType","getTagName","isClosing","Math","textNodeMatches","parseText","getText","getOffset","compactMatches","removeUnwantedMatches","endIdx","getMatchedText","remove","getUrlMatchType","offset","getMatchers","numMatchers","textMatches","parseMatches","numTextMatches","setOffset","newHtml","substring","createMatchReturnVal","replaceFnResult","HtmlTag","toAnchorString","buildTag","HtmlParser","matchersNs","matcher","getTagBuilder","Hashtag","serviceName","Email","Phone","Twitter","Url","AnchorTagBuilder","abstractMethod","trimRegex","dest","prop","extend","superclass","subclass","superclassProto","subclassProto","ellipsis","truncateLen","ellipsisChars","arr","element","splitAndCapture","splitRegex","lastIdx","whitespaceRegex","innerHtml","innerHTML","setTagName","tagName","setAttr","attrName","attrValue","getAttrs","getAttr","setAttrs","attrs","tagAttrs","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","newClasses","shift","removeClass","removeClasses","hasClass","setInnerHtml","html","getInnerHtml","attrsStr","buildAttrsStr","attrsArr","RegexLib","alphaCharsStr","build","createAttrs","getAnchorHref","processAnchorText","getAnchorText","matchType","anchorHref","createCssClass","anchorText","doTruncate","truncateLength","truncateLocation","TruncateSmart","TruncateMiddle","TruncateEnd","htmlRegex","htmlCharacterEntitiesRegex","currentResult","textAndEntityNodes","tagText","commentText","isClosingTag","inBetweenTagsText","parseTextAndEntityNodes","createCommentNode","createElementNode","textAndEntityTokens","textToken","entityToken","createTextNode","createEntityNode","CommentNode","comment","ElementNode","closing","EntityNode","TextNode","HtmlNode","getComment","Match","getServiceName","getHashtag","number","plusSign","getNumber","twitterHandle","getTwitterHandle","urlMatchType","protocolUrlMatch","protocolRelativeMatch","urlPrefixRegex","protocolRelativeRegex","protocolPrepended","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","charAt","Matcher","matcherRegex","nonWordCharRegex","prevChar","cleanNumber","urlSuffixRegex","wordCharRegExp","openParensRe","closeParensRe","matchStr","schemeUrlMatch","wwwUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","UrlMatchValidator","isValid","matchHasUnbalancedClosingParen","matchHasInvalidCharAfterTld","openParensMatch","closeParensMatch","urlMatch","res","hasFullProtocolRegex","uriSchemeRegex","hasWordCharAfterProtocolRegex","ipRegex","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isValidIpAddress","uriSchemeMatch","newRegex","uriScheme","availableLength","end","floor","ceil","buildUrl","urlObj","scheme","host","path","query","fragment","buildSegment","segment","remainingAvailableLength","remainingAvailableLengthHalf","startOffset","endOffset","urlSub","parse_url","matchQuery","pathAndQuery","StateBlock","tokenize","startLine","endLine","line","hasEmptyLines","skipEmptyLines","tShift","blkIndent","isEmpty","parentType","TABS_SCAN_RE","NEWLINES_RE","SPACES_RE","lineStart","lastTabPos","lineMax","indent","indent_found","bMarks","eMarks","ddIndent","from","skipSpaces","skipChars","skipCharsBack","min","getLines","begin","keepLastLF","last","queue","nextLine","silent","mem","haveEndMarker","lastLineEmpty","oldTShift","oldBMarks","oldIndent","oldParentType","terminatorRules","terminate","maxNesting","cnt","skipBulletListMarker","skipOrderedListMarker","oldTight","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","markTightParagraphs","oldBMark","refs","tmp","next","block_names","HTML_TAG_OPEN_RE","HTML_TAG_CLOSE_RE","lc","html_blocks","getLine","lineText","rows","cell","aligns","tableLines","tbodyLines","skipMarker","ddLine","dtLine","oldDDIndent","cached_pos","ok","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","lastChar","nextChar","isAlphaNum","scanDelims","can_open","can_close","delims","startCount","oldCount","newCount","UNESCAPE_RE","labelStart","ref","isImage","footnoteId","oldLength","footnoteSubId","url_schemas","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","HTML_TAG_RE","regex","attr_value","open_tag","DIGITAL_RE","NAMED_RE"],"mappings":"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","file":"component---src-pages-projects-js-65acdc5130255f33cd84.js","sourcesContent":["import React from \"react\";\n\n// TODO\n// Add proptypes check\n// description is a node\nconst CustomCard = ({ header, description, footer }) => {\n  return (\n    <div className=\"card\">\n      <article>\n        <h4>{header}</h4>\n        {description}\n        {footer}\n      </article>\n    </div>\n  );\n};\n\nexport default CustomCard;\n","import React from \"react\";\n\nconst ProjectBoard = ({ children }) => {\n  return <div className=\"project-board\">{children}</div>;\n};\n\nexport default ProjectBoard;\n","import React from \"react\";\n\nconst CustomButton = ({ text, link }) => {\n  const onClick = () => {\n    if (link) window.open(link, \"_blank\");\n  };\n\n  let isDisabled = false;\n  let class_name = \"custom-button\";\n  if (!link) {\n    isDisabled = true;\n    class_name = \"custom-button custom-button-disabled\";\n  }\n\n  return (\n    <button className={class_name} onClick={onClick} disabled={isDisabled}>\n      {text}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Remarkable from \"react-remarkable\";\nimport Layout from \"../components/layout/Layout\";\nimport CustomCard from \"../shared/customCard/CustomCard\";\nimport ProjectBoard from \"../shared/projectBoard/ProjectBoard\";\nimport CustomButton from \"../shared/customButton/CustomButton\";\nimport Meta from \"../components/seo/Meta\";\n\nimport featuredProjects from \"../../data/projects.json\";\n\nconst Projects = () => {\n  console.log(featuredProjects);\n  // TODO\n  // Fetch projects dynamically\n  return (\n    <Layout>\n      <Meta />\n      <ProjectBoard>\n        {featuredProjects[\"projects\"].map(project => (\n          <CustomCard\n            header={project[\"name\"]}\n            description={<Remarkable source={project[\"description\"]} />}\n            footer={\n              <div class=\"custom-card-footer\">\n                <CustomButton text=\"source\" link={project[\"sourceLink\"]} />\n                <CustomButton text=\"demo\" link={project[\"demoLink\"]} />\n              </div>\n            }\n          />\n        ))}\n      </ProjectBoard>\n    </Layout>\n  );\n};\n\nexport default Projects;\n","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","'use strict';\n/**\n * Utility functions\n */\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object ? hasOwn.call(object, key) : false;\n} // Extend objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = [].slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  } else if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint;\nexports.replaceEntities = replaceEntities;\nexports.escapeHtml = escapeHtml;","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","'use strict';\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n}\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list) ? [list] : list; // In strict mode disable all existing rules first\n\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  } // Search by name and enable\n\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n  }, this);\n  this.__cache__ = null;\n};\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list) ? [list] : list; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n  }, this);\n  this.__cache__ = null;\n};\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  return this.__cache__[chainName] || [];\n};\n/**\n * Expose `Ruler`\n */\n\n\nmodule.exports = Ruler;","'use strict';\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nmodule.exports = function parseLinkLabel(state, start) {\n  var level,\n      found,\n      marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) {\n    return -1;\n  }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        level++;\n      } else if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n  return labelEnd;\n};","// Inline parser state\n'use strict';\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n  this.cache = []; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n  // \"paired\" rules (emphasis, strikes) to not skip\n  // tailing `]`\n\n  this.linkLevel = 0; // Increment for each nesting link. Used to prevent\n  // nesting in definitions\n\n  this.linkContent = ''; // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n  // (backtrack optimization)\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n}; // Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\n\n\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n}; // Get cache value\n//\n\n\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\nmodule.exports = StateInline;","// List of valid entities\n//\n// Generate with ./support/entities.js script\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = {\n  \"Aacute\": \"\\xC1\",\n  \"aacute\": \"\\xE1\",\n  \"Abreve\": \"\\u0102\",\n  \"abreve\": \"\\u0103\",\n  \"ac\": \"\\u223E\",\n  \"acd\": \"\\u223F\",\n  \"acE\": \"\\u223E\\u0333\",\n  \"Acirc\": \"\\xC2\",\n  \"acirc\": \"\\xE2\",\n  \"acute\": \"\\xB4\",\n  \"Acy\": \"\\u0410\",\n  \"acy\": \"\\u0430\",\n  \"AElig\": \"\\xC6\",\n  \"aelig\": \"\\xE6\",\n  \"af\": \"\\u2061\",\n  \"Afr\": \"\\uD835\\uDD04\",\n  \"afr\": \"\\uD835\\uDD1E\",\n  \"Agrave\": \"\\xC0\",\n  \"agrave\": \"\\xE0\",\n  \"alefsym\": \"\\u2135\",\n  \"aleph\": \"\\u2135\",\n  \"Alpha\": \"\\u0391\",\n  \"alpha\": \"\\u03B1\",\n  \"Amacr\": \"\\u0100\",\n  \"amacr\": \"\\u0101\",\n  \"amalg\": \"\\u2A3F\",\n  \"AMP\": \"&\",\n  \"amp\": \"&\",\n  \"And\": \"\\u2A53\",\n  \"and\": \"\\u2227\",\n  \"andand\": \"\\u2A55\",\n  \"andd\": \"\\u2A5C\",\n  \"andslope\": \"\\u2A58\",\n  \"andv\": \"\\u2A5A\",\n  \"ang\": \"\\u2220\",\n  \"ange\": \"\\u29A4\",\n  \"angle\": \"\\u2220\",\n  \"angmsd\": \"\\u2221\",\n  \"angmsdaa\": \"\\u29A8\",\n  \"angmsdab\": \"\\u29A9\",\n  \"angmsdac\": \"\\u29AA\",\n  \"angmsdad\": \"\\u29AB\",\n  \"angmsdae\": \"\\u29AC\",\n  \"angmsdaf\": \"\\u29AD\",\n  \"angmsdag\": \"\\u29AE\",\n  \"angmsdah\": \"\\u29AF\",\n  \"angrt\": \"\\u221F\",\n  \"angrtvb\": \"\\u22BE\",\n  \"angrtvbd\": \"\\u299D\",\n  \"angsph\": \"\\u2222\",\n  \"angst\": \"\\xC5\",\n  \"angzarr\": \"\\u237C\",\n  \"Aogon\": \"\\u0104\",\n  \"aogon\": \"\\u0105\",\n  \"Aopf\": \"\\uD835\\uDD38\",\n  \"aopf\": \"\\uD835\\uDD52\",\n  \"ap\": \"\\u2248\",\n  \"apacir\": \"\\u2A6F\",\n  \"apE\": \"\\u2A70\",\n  \"ape\": \"\\u224A\",\n  \"apid\": \"\\u224B\",\n  \"apos\": \"'\",\n  \"ApplyFunction\": \"\\u2061\",\n  \"approx\": \"\\u2248\",\n  \"approxeq\": \"\\u224A\",\n  \"Aring\": \"\\xC5\",\n  \"aring\": \"\\xE5\",\n  \"Ascr\": \"\\uD835\\uDC9C\",\n  \"ascr\": \"\\uD835\\uDCB6\",\n  \"Assign\": \"\\u2254\",\n  \"ast\": \"*\",\n  \"asymp\": \"\\u2248\",\n  \"asympeq\": \"\\u224D\",\n  \"Atilde\": \"\\xC3\",\n  \"atilde\": \"\\xE3\",\n  \"Auml\": \"\\xC4\",\n  \"auml\": \"\\xE4\",\n  \"awconint\": \"\\u2233\",\n  \"awint\": \"\\u2A11\",\n  \"backcong\": \"\\u224C\",\n  \"backepsilon\": \"\\u03F6\",\n  \"backprime\": \"\\u2035\",\n  \"backsim\": \"\\u223D\",\n  \"backsimeq\": \"\\u22CD\",\n  \"Backslash\": \"\\u2216\",\n  \"Barv\": \"\\u2AE7\",\n  \"barvee\": \"\\u22BD\",\n  \"Barwed\": \"\\u2306\",\n  \"barwed\": \"\\u2305\",\n  \"barwedge\": \"\\u2305\",\n  \"bbrk\": \"\\u23B5\",\n  \"bbrktbrk\": \"\\u23B6\",\n  \"bcong\": \"\\u224C\",\n  \"Bcy\": \"\\u0411\",\n  \"bcy\": \"\\u0431\",\n  \"bdquo\": \"\\u201E\",\n  \"becaus\": \"\\u2235\",\n  \"Because\": \"\\u2235\",\n  \"because\": \"\\u2235\",\n  \"bemptyv\": \"\\u29B0\",\n  \"bepsi\": \"\\u03F6\",\n  \"bernou\": \"\\u212C\",\n  \"Bernoullis\": \"\\u212C\",\n  \"Beta\": \"\\u0392\",\n  \"beta\": \"\\u03B2\",\n  \"beth\": \"\\u2136\",\n  \"between\": \"\\u226C\",\n  \"Bfr\": \"\\uD835\\uDD05\",\n  \"bfr\": \"\\uD835\\uDD1F\",\n  \"bigcap\": \"\\u22C2\",\n  \"bigcirc\": \"\\u25EF\",\n  \"bigcup\": \"\\u22C3\",\n  \"bigodot\": \"\\u2A00\",\n  \"bigoplus\": \"\\u2A01\",\n  \"bigotimes\": \"\\u2A02\",\n  \"bigsqcup\": \"\\u2A06\",\n  \"bigstar\": \"\\u2605\",\n  \"bigtriangledown\": \"\\u25BD\",\n  \"bigtriangleup\": \"\\u25B3\",\n  \"biguplus\": \"\\u2A04\",\n  \"bigvee\": \"\\u22C1\",\n  \"bigwedge\": \"\\u22C0\",\n  \"bkarow\": \"\\u290D\",\n  \"blacklozenge\": \"\\u29EB\",\n  \"blacksquare\": \"\\u25AA\",\n  \"blacktriangle\": \"\\u25B4\",\n  \"blacktriangledown\": \"\\u25BE\",\n  \"blacktriangleleft\": \"\\u25C2\",\n  \"blacktriangleright\": \"\\u25B8\",\n  \"blank\": \"\\u2423\",\n  \"blk12\": \"\\u2592\",\n  \"blk14\": \"\\u2591\",\n  \"blk34\": \"\\u2593\",\n  \"block\": \"\\u2588\",\n  \"bne\": \"=\\u20E5\",\n  \"bnequiv\": \"\\u2261\\u20E5\",\n  \"bNot\": \"\\u2AED\",\n  \"bnot\": \"\\u2310\",\n  \"Bopf\": \"\\uD835\\uDD39\",\n  \"bopf\": \"\\uD835\\uDD53\",\n  \"bot\": \"\\u22A5\",\n  \"bottom\": \"\\u22A5\",\n  \"bowtie\": \"\\u22C8\",\n  \"boxbox\": \"\\u29C9\",\n  \"boxDL\": \"\\u2557\",\n  \"boxDl\": \"\\u2556\",\n  \"boxdL\": \"\\u2555\",\n  \"boxdl\": \"\\u2510\",\n  \"boxDR\": \"\\u2554\",\n  \"boxDr\": \"\\u2553\",\n  \"boxdR\": \"\\u2552\",\n  \"boxdr\": \"\\u250C\",\n  \"boxH\": \"\\u2550\",\n  \"boxh\": \"\\u2500\",\n  \"boxHD\": \"\\u2566\",\n  \"boxHd\": \"\\u2564\",\n  \"boxhD\": \"\\u2565\",\n  \"boxhd\": \"\\u252C\",\n  \"boxHU\": \"\\u2569\",\n  \"boxHu\": \"\\u2567\",\n  \"boxhU\": \"\\u2568\",\n  \"boxhu\": \"\\u2534\",\n  \"boxminus\": \"\\u229F\",\n  \"boxplus\": \"\\u229E\",\n  \"boxtimes\": \"\\u22A0\",\n  \"boxUL\": \"\\u255D\",\n  \"boxUl\": \"\\u255C\",\n  \"boxuL\": \"\\u255B\",\n  \"boxul\": \"\\u2518\",\n  \"boxUR\": \"\\u255A\",\n  \"boxUr\": \"\\u2559\",\n  \"boxuR\": \"\\u2558\",\n  \"boxur\": \"\\u2514\",\n  \"boxV\": \"\\u2551\",\n  \"boxv\": \"\\u2502\",\n  \"boxVH\": \"\\u256C\",\n  \"boxVh\": \"\\u256B\",\n  \"boxvH\": \"\\u256A\",\n  \"boxvh\": \"\\u253C\",\n  \"boxVL\": \"\\u2563\",\n  \"boxVl\": \"\\u2562\",\n  \"boxvL\": \"\\u2561\",\n  \"boxvl\": \"\\u2524\",\n  \"boxVR\": \"\\u2560\",\n  \"boxVr\": \"\\u255F\",\n  \"boxvR\": \"\\u255E\",\n  \"boxvr\": \"\\u251C\",\n  \"bprime\": \"\\u2035\",\n  \"Breve\": \"\\u02D8\",\n  \"breve\": \"\\u02D8\",\n  \"brvbar\": \"\\xA6\",\n  \"Bscr\": \"\\u212C\",\n  \"bscr\": \"\\uD835\\uDCB7\",\n  \"bsemi\": \"\\u204F\",\n  \"bsim\": \"\\u223D\",\n  \"bsime\": \"\\u22CD\",\n  \"bsol\": \"\\\\\",\n  \"bsolb\": \"\\u29C5\",\n  \"bsolhsub\": \"\\u27C8\",\n  \"bull\": \"\\u2022\",\n  \"bullet\": \"\\u2022\",\n  \"bump\": \"\\u224E\",\n  \"bumpE\": \"\\u2AAE\",\n  \"bumpe\": \"\\u224F\",\n  \"Bumpeq\": \"\\u224E\",\n  \"bumpeq\": \"\\u224F\",\n  \"Cacute\": \"\\u0106\",\n  \"cacute\": \"\\u0107\",\n  \"Cap\": \"\\u22D2\",\n  \"cap\": \"\\u2229\",\n  \"capand\": \"\\u2A44\",\n  \"capbrcup\": \"\\u2A49\",\n  \"capcap\": \"\\u2A4B\",\n  \"capcup\": \"\\u2A47\",\n  \"capdot\": \"\\u2A40\",\n  \"CapitalDifferentialD\": \"\\u2145\",\n  \"caps\": \"\\u2229\\uFE00\",\n  \"caret\": \"\\u2041\",\n  \"caron\": \"\\u02C7\",\n  \"Cayleys\": \"\\u212D\",\n  \"ccaps\": \"\\u2A4D\",\n  \"Ccaron\": \"\\u010C\",\n  \"ccaron\": \"\\u010D\",\n  \"Ccedil\": \"\\xC7\",\n  \"ccedil\": \"\\xE7\",\n  \"Ccirc\": \"\\u0108\",\n  \"ccirc\": \"\\u0109\",\n  \"Cconint\": \"\\u2230\",\n  \"ccups\": \"\\u2A4C\",\n  \"ccupssm\": \"\\u2A50\",\n  \"Cdot\": \"\\u010A\",\n  \"cdot\": \"\\u010B\",\n  \"cedil\": \"\\xB8\",\n  \"Cedilla\": \"\\xB8\",\n  \"cemptyv\": \"\\u29B2\",\n  \"cent\": \"\\xA2\",\n  \"CenterDot\": \"\\xB7\",\n  \"centerdot\": \"\\xB7\",\n  \"Cfr\": \"\\u212D\",\n  \"cfr\": \"\\uD835\\uDD20\",\n  \"CHcy\": \"\\u0427\",\n  \"chcy\": \"\\u0447\",\n  \"check\": \"\\u2713\",\n  \"checkmark\": \"\\u2713\",\n  \"Chi\": \"\\u03A7\",\n  \"chi\": \"\\u03C7\",\n  \"cir\": \"\\u25CB\",\n  \"circ\": \"\\u02C6\",\n  \"circeq\": \"\\u2257\",\n  \"circlearrowleft\": \"\\u21BA\",\n  \"circlearrowright\": \"\\u21BB\",\n  \"circledast\": \"\\u229B\",\n  \"circledcirc\": \"\\u229A\",\n  \"circleddash\": \"\\u229D\",\n  \"CircleDot\": \"\\u2299\",\n  \"circledR\": \"\\xAE\",\n  \"circledS\": \"\\u24C8\",\n  \"CircleMinus\": \"\\u2296\",\n  \"CirclePlus\": \"\\u2295\",\n  \"CircleTimes\": \"\\u2297\",\n  \"cirE\": \"\\u29C3\",\n  \"cire\": \"\\u2257\",\n  \"cirfnint\": \"\\u2A10\",\n  \"cirmid\": \"\\u2AEF\",\n  \"cirscir\": \"\\u29C2\",\n  \"ClockwiseContourIntegral\": \"\\u2232\",\n  \"CloseCurlyDoubleQuote\": \"\\u201D\",\n  \"CloseCurlyQuote\": \"\\u2019\",\n  \"clubs\": \"\\u2663\",\n  \"clubsuit\": \"\\u2663\",\n  \"Colon\": \"\\u2237\",\n  \"colon\": \":\",\n  \"Colone\": \"\\u2A74\",\n  \"colone\": \"\\u2254\",\n  \"coloneq\": \"\\u2254\",\n  \"comma\": \",\",\n  \"commat\": \"@\",\n  \"comp\": \"\\u2201\",\n  \"compfn\": \"\\u2218\",\n  \"complement\": \"\\u2201\",\n  \"complexes\": \"\\u2102\",\n  \"cong\": \"\\u2245\",\n  \"congdot\": \"\\u2A6D\",\n  \"Congruent\": \"\\u2261\",\n  \"Conint\": \"\\u222F\",\n  \"conint\": \"\\u222E\",\n  \"ContourIntegral\": \"\\u222E\",\n  \"Copf\": \"\\u2102\",\n  \"copf\": \"\\uD835\\uDD54\",\n  \"coprod\": \"\\u2210\",\n  \"Coproduct\": \"\\u2210\",\n  \"COPY\": \"\\xA9\",\n  \"copy\": \"\\xA9\",\n  \"copysr\": \"\\u2117\",\n  \"CounterClockwiseContourIntegral\": \"\\u2233\",\n  \"crarr\": \"\\u21B5\",\n  \"Cross\": \"\\u2A2F\",\n  \"cross\": \"\\u2717\",\n  \"Cscr\": \"\\uD835\\uDC9E\",\n  \"cscr\": \"\\uD835\\uDCB8\",\n  \"csub\": \"\\u2ACF\",\n  \"csube\": \"\\u2AD1\",\n  \"csup\": \"\\u2AD0\",\n  \"csupe\": \"\\u2AD2\",\n  \"ctdot\": \"\\u22EF\",\n  \"cudarrl\": \"\\u2938\",\n  \"cudarrr\": \"\\u2935\",\n  \"cuepr\": \"\\u22DE\",\n  \"cuesc\": \"\\u22DF\",\n  \"cularr\": \"\\u21B6\",\n  \"cularrp\": \"\\u293D\",\n  \"Cup\": \"\\u22D3\",\n  \"cup\": \"\\u222A\",\n  \"cupbrcap\": \"\\u2A48\",\n  \"CupCap\": \"\\u224D\",\n  \"cupcap\": \"\\u2A46\",\n  \"cupcup\": \"\\u2A4A\",\n  \"cupdot\": \"\\u228D\",\n  \"cupor\": \"\\u2A45\",\n  \"cups\": \"\\u222A\\uFE00\",\n  \"curarr\": \"\\u21B7\",\n  \"curarrm\": \"\\u293C\",\n  \"curlyeqprec\": \"\\u22DE\",\n  \"curlyeqsucc\": \"\\u22DF\",\n  \"curlyvee\": \"\\u22CE\",\n  \"curlywedge\": \"\\u22CF\",\n  \"curren\": \"\\xA4\",\n  \"curvearrowleft\": \"\\u21B6\",\n  \"curvearrowright\": \"\\u21B7\",\n  \"cuvee\": \"\\u22CE\",\n  \"cuwed\": \"\\u22CF\",\n  \"cwconint\": \"\\u2232\",\n  \"cwint\": \"\\u2231\",\n  \"cylcty\": \"\\u232D\",\n  \"Dagger\": \"\\u2021\",\n  \"dagger\": \"\\u2020\",\n  \"daleth\": \"\\u2138\",\n  \"Darr\": \"\\u21A1\",\n  \"dArr\": \"\\u21D3\",\n  \"darr\": \"\\u2193\",\n  \"dash\": \"\\u2010\",\n  \"Dashv\": \"\\u2AE4\",\n  \"dashv\": \"\\u22A3\",\n  \"dbkarow\": \"\\u290F\",\n  \"dblac\": \"\\u02DD\",\n  \"Dcaron\": \"\\u010E\",\n  \"dcaron\": \"\\u010F\",\n  \"Dcy\": \"\\u0414\",\n  \"dcy\": \"\\u0434\",\n  \"DD\": \"\\u2145\",\n  \"dd\": \"\\u2146\",\n  \"ddagger\": \"\\u2021\",\n  \"ddarr\": \"\\u21CA\",\n  \"DDotrahd\": \"\\u2911\",\n  \"ddotseq\": \"\\u2A77\",\n  \"deg\": \"\\xB0\",\n  \"Del\": \"\\u2207\",\n  \"Delta\": \"\\u0394\",\n  \"delta\": \"\\u03B4\",\n  \"demptyv\": \"\\u29B1\",\n  \"dfisht\": \"\\u297F\",\n  \"Dfr\": \"\\uD835\\uDD07\",\n  \"dfr\": \"\\uD835\\uDD21\",\n  \"dHar\": \"\\u2965\",\n  \"dharl\": \"\\u21C3\",\n  \"dharr\": \"\\u21C2\",\n  \"DiacriticalAcute\": \"\\xB4\",\n  \"DiacriticalDot\": \"\\u02D9\",\n  \"DiacriticalDoubleAcute\": \"\\u02DD\",\n  \"DiacriticalGrave\": \"`\",\n  \"DiacriticalTilde\": \"\\u02DC\",\n  \"diam\": \"\\u22C4\",\n  \"Diamond\": \"\\u22C4\",\n  \"diamond\": \"\\u22C4\",\n  \"diamondsuit\": \"\\u2666\",\n  \"diams\": \"\\u2666\",\n  \"die\": \"\\xA8\",\n  \"DifferentialD\": \"\\u2146\",\n  \"digamma\": \"\\u03DD\",\n  \"disin\": \"\\u22F2\",\n  \"div\": \"\\xF7\",\n  \"divide\": \"\\xF7\",\n  \"divideontimes\": \"\\u22C7\",\n  \"divonx\": \"\\u22C7\",\n  \"DJcy\": \"\\u0402\",\n  \"djcy\": \"\\u0452\",\n  \"dlcorn\": \"\\u231E\",\n  \"dlcrop\": \"\\u230D\",\n  \"dollar\": \"$\",\n  \"Dopf\": \"\\uD835\\uDD3B\",\n  \"dopf\": \"\\uD835\\uDD55\",\n  \"Dot\": \"\\xA8\",\n  \"dot\": \"\\u02D9\",\n  \"DotDot\": \"\\u20DC\",\n  \"doteq\": \"\\u2250\",\n  \"doteqdot\": \"\\u2251\",\n  \"DotEqual\": \"\\u2250\",\n  \"dotminus\": \"\\u2238\",\n  \"dotplus\": \"\\u2214\",\n  \"dotsquare\": \"\\u22A1\",\n  \"doublebarwedge\": \"\\u2306\",\n  \"DoubleContourIntegral\": \"\\u222F\",\n  \"DoubleDot\": \"\\xA8\",\n  \"DoubleDownArrow\": \"\\u21D3\",\n  \"DoubleLeftArrow\": \"\\u21D0\",\n  \"DoubleLeftRightArrow\": \"\\u21D4\",\n  \"DoubleLeftTee\": \"\\u2AE4\",\n  \"DoubleLongLeftArrow\": \"\\u27F8\",\n  \"DoubleLongLeftRightArrow\": \"\\u27FA\",\n  \"DoubleLongRightArrow\": \"\\u27F9\",\n  \"DoubleRightArrow\": \"\\u21D2\",\n  \"DoubleRightTee\": \"\\u22A8\",\n  \"DoubleUpArrow\": \"\\u21D1\",\n  \"DoubleUpDownArrow\": \"\\u21D5\",\n  \"DoubleVerticalBar\": \"\\u2225\",\n  \"DownArrow\": \"\\u2193\",\n  \"Downarrow\": \"\\u21D3\",\n  \"downarrow\": \"\\u2193\",\n  \"DownArrowBar\": \"\\u2913\",\n  \"DownArrowUpArrow\": \"\\u21F5\",\n  \"DownBreve\": \"\\u0311\",\n  \"downdownarrows\": \"\\u21CA\",\n  \"downharpoonleft\": \"\\u21C3\",\n  \"downharpoonright\": \"\\u21C2\",\n  \"DownLeftRightVector\": \"\\u2950\",\n  \"DownLeftTeeVector\": \"\\u295E\",\n  \"DownLeftVector\": \"\\u21BD\",\n  \"DownLeftVectorBar\": \"\\u2956\",\n  \"DownRightTeeVector\": \"\\u295F\",\n  \"DownRightVector\": \"\\u21C1\",\n  \"DownRightVectorBar\": \"\\u2957\",\n  \"DownTee\": \"\\u22A4\",\n  \"DownTeeArrow\": \"\\u21A7\",\n  \"drbkarow\": \"\\u2910\",\n  \"drcorn\": \"\\u231F\",\n  \"drcrop\": \"\\u230C\",\n  \"Dscr\": \"\\uD835\\uDC9F\",\n  \"dscr\": \"\\uD835\\uDCB9\",\n  \"DScy\": \"\\u0405\",\n  \"dscy\": \"\\u0455\",\n  \"dsol\": \"\\u29F6\",\n  \"Dstrok\": \"\\u0110\",\n  \"dstrok\": \"\\u0111\",\n  \"dtdot\": \"\\u22F1\",\n  \"dtri\": \"\\u25BF\",\n  \"dtrif\": \"\\u25BE\",\n  \"duarr\": \"\\u21F5\",\n  \"duhar\": \"\\u296F\",\n  \"dwangle\": \"\\u29A6\",\n  \"DZcy\": \"\\u040F\",\n  \"dzcy\": \"\\u045F\",\n  \"dzigrarr\": \"\\u27FF\",\n  \"Eacute\": \"\\xC9\",\n  \"eacute\": \"\\xE9\",\n  \"easter\": \"\\u2A6E\",\n  \"Ecaron\": \"\\u011A\",\n  \"ecaron\": \"\\u011B\",\n  \"ecir\": \"\\u2256\",\n  \"Ecirc\": \"\\xCA\",\n  \"ecirc\": \"\\xEA\",\n  \"ecolon\": \"\\u2255\",\n  \"Ecy\": \"\\u042D\",\n  \"ecy\": \"\\u044D\",\n  \"eDDot\": \"\\u2A77\",\n  \"Edot\": \"\\u0116\",\n  \"eDot\": \"\\u2251\",\n  \"edot\": \"\\u0117\",\n  \"ee\": \"\\u2147\",\n  \"efDot\": \"\\u2252\",\n  \"Efr\": \"\\uD835\\uDD08\",\n  \"efr\": \"\\uD835\\uDD22\",\n  \"eg\": \"\\u2A9A\",\n  \"Egrave\": \"\\xC8\",\n  \"egrave\": \"\\xE8\",\n  \"egs\": \"\\u2A96\",\n  \"egsdot\": \"\\u2A98\",\n  \"el\": \"\\u2A99\",\n  \"Element\": \"\\u2208\",\n  \"elinters\": \"\\u23E7\",\n  \"ell\": \"\\u2113\",\n  \"els\": \"\\u2A95\",\n  \"elsdot\": \"\\u2A97\",\n  \"Emacr\": \"\\u0112\",\n  \"emacr\": \"\\u0113\",\n  \"empty\": \"\\u2205\",\n  \"emptyset\": \"\\u2205\",\n  \"EmptySmallSquare\": \"\\u25FB\",\n  \"emptyv\": \"\\u2205\",\n  \"EmptyVerySmallSquare\": \"\\u25AB\",\n  \"emsp\": \"\\u2003\",\n  \"emsp13\": \"\\u2004\",\n  \"emsp14\": \"\\u2005\",\n  \"ENG\": \"\\u014A\",\n  \"eng\": \"\\u014B\",\n  \"ensp\": \"\\u2002\",\n  \"Eogon\": \"\\u0118\",\n  \"eogon\": \"\\u0119\",\n  \"Eopf\": \"\\uD835\\uDD3C\",\n  \"eopf\": \"\\uD835\\uDD56\",\n  \"epar\": \"\\u22D5\",\n  \"eparsl\": \"\\u29E3\",\n  \"eplus\": \"\\u2A71\",\n  \"epsi\": \"\\u03B5\",\n  \"Epsilon\": \"\\u0395\",\n  \"epsilon\": \"\\u03B5\",\n  \"epsiv\": \"\\u03F5\",\n  \"eqcirc\": \"\\u2256\",\n  \"eqcolon\": \"\\u2255\",\n  \"eqsim\": \"\\u2242\",\n  \"eqslantgtr\": \"\\u2A96\",\n  \"eqslantless\": \"\\u2A95\",\n  \"Equal\": \"\\u2A75\",\n  \"equals\": \"=\",\n  \"EqualTilde\": \"\\u2242\",\n  \"equest\": \"\\u225F\",\n  \"Equilibrium\": \"\\u21CC\",\n  \"equiv\": \"\\u2261\",\n  \"equivDD\": \"\\u2A78\",\n  \"eqvparsl\": \"\\u29E5\",\n  \"erarr\": \"\\u2971\",\n  \"erDot\": \"\\u2253\",\n  \"Escr\": \"\\u2130\",\n  \"escr\": \"\\u212F\",\n  \"esdot\": \"\\u2250\",\n  \"Esim\": \"\\u2A73\",\n  \"esim\": \"\\u2242\",\n  \"Eta\": \"\\u0397\",\n  \"eta\": \"\\u03B7\",\n  \"ETH\": \"\\xD0\",\n  \"eth\": \"\\xF0\",\n  \"Euml\": \"\\xCB\",\n  \"euml\": \"\\xEB\",\n  \"euro\": \"\\u20AC\",\n  \"excl\": \"!\",\n  \"exist\": \"\\u2203\",\n  \"Exists\": \"\\u2203\",\n  \"expectation\": \"\\u2130\",\n  \"ExponentialE\": \"\\u2147\",\n  \"exponentiale\": \"\\u2147\",\n  \"fallingdotseq\": \"\\u2252\",\n  \"Fcy\": \"\\u0424\",\n  \"fcy\": \"\\u0444\",\n  \"female\": \"\\u2640\",\n  \"ffilig\": \"\\uFB03\",\n  \"fflig\": \"\\uFB00\",\n  \"ffllig\": \"\\uFB04\",\n  \"Ffr\": \"\\uD835\\uDD09\",\n  \"ffr\": \"\\uD835\\uDD23\",\n  \"filig\": \"\\uFB01\",\n  \"FilledSmallSquare\": \"\\u25FC\",\n  \"FilledVerySmallSquare\": \"\\u25AA\",\n  \"fjlig\": \"fj\",\n  \"flat\": \"\\u266D\",\n  \"fllig\": \"\\uFB02\",\n  \"fltns\": \"\\u25B1\",\n  \"fnof\": \"\\u0192\",\n  \"Fopf\": \"\\uD835\\uDD3D\",\n  \"fopf\": \"\\uD835\\uDD57\",\n  \"ForAll\": \"\\u2200\",\n  \"forall\": \"\\u2200\",\n  \"fork\": \"\\u22D4\",\n  \"forkv\": \"\\u2AD9\",\n  \"Fouriertrf\": \"\\u2131\",\n  \"fpartint\": \"\\u2A0D\",\n  \"frac12\": \"\\xBD\",\n  \"frac13\": \"\\u2153\",\n  \"frac14\": \"\\xBC\",\n  \"frac15\": \"\\u2155\",\n  \"frac16\": \"\\u2159\",\n  \"frac18\": \"\\u215B\",\n  \"frac23\": \"\\u2154\",\n  \"frac25\": \"\\u2156\",\n  \"frac34\": \"\\xBE\",\n  \"frac35\": \"\\u2157\",\n  \"frac38\": \"\\u215C\",\n  \"frac45\": \"\\u2158\",\n  \"frac56\": \"\\u215A\",\n  \"frac58\": \"\\u215D\",\n  \"frac78\": \"\\u215E\",\n  \"frasl\": \"\\u2044\",\n  \"frown\": \"\\u2322\",\n  \"Fscr\": \"\\u2131\",\n  \"fscr\": \"\\uD835\\uDCBB\",\n  \"gacute\": \"\\u01F5\",\n  \"Gamma\": \"\\u0393\",\n  \"gamma\": \"\\u03B3\",\n  \"Gammad\": \"\\u03DC\",\n  \"gammad\": \"\\u03DD\",\n  \"gap\": \"\\u2A86\",\n  \"Gbreve\": \"\\u011E\",\n  \"gbreve\": \"\\u011F\",\n  \"Gcedil\": \"\\u0122\",\n  \"Gcirc\": \"\\u011C\",\n  \"gcirc\": \"\\u011D\",\n  \"Gcy\": \"\\u0413\",\n  \"gcy\": \"\\u0433\",\n  \"Gdot\": \"\\u0120\",\n  \"gdot\": \"\\u0121\",\n  \"gE\": \"\\u2267\",\n  \"ge\": \"\\u2265\",\n  \"gEl\": \"\\u2A8C\",\n  \"gel\": \"\\u22DB\",\n  \"geq\": \"\\u2265\",\n  \"geqq\": \"\\u2267\",\n  \"geqslant\": \"\\u2A7E\",\n  \"ges\": \"\\u2A7E\",\n  \"gescc\": \"\\u2AA9\",\n  \"gesdot\": \"\\u2A80\",\n  \"gesdoto\": \"\\u2A82\",\n  \"gesdotol\": \"\\u2A84\",\n  \"gesl\": \"\\u22DB\\uFE00\",\n  \"gesles\": \"\\u2A94\",\n  \"Gfr\": \"\\uD835\\uDD0A\",\n  \"gfr\": \"\\uD835\\uDD24\",\n  \"Gg\": \"\\u22D9\",\n  \"gg\": \"\\u226B\",\n  \"ggg\": \"\\u22D9\",\n  \"gimel\": \"\\u2137\",\n  \"GJcy\": \"\\u0403\",\n  \"gjcy\": \"\\u0453\",\n  \"gl\": \"\\u2277\",\n  \"gla\": \"\\u2AA5\",\n  \"glE\": \"\\u2A92\",\n  \"glj\": \"\\u2AA4\",\n  \"gnap\": \"\\u2A8A\",\n  \"gnapprox\": \"\\u2A8A\",\n  \"gnE\": \"\\u2269\",\n  \"gne\": \"\\u2A88\",\n  \"gneq\": \"\\u2A88\",\n  \"gneqq\": \"\\u2269\",\n  \"gnsim\": \"\\u22E7\",\n  \"Gopf\": \"\\uD835\\uDD3E\",\n  \"gopf\": \"\\uD835\\uDD58\",\n  \"grave\": \"`\",\n  \"GreaterEqual\": \"\\u2265\",\n  \"GreaterEqualLess\": \"\\u22DB\",\n  \"GreaterFullEqual\": \"\\u2267\",\n  \"GreaterGreater\": \"\\u2AA2\",\n  \"GreaterLess\": \"\\u2277\",\n  \"GreaterSlantEqual\": \"\\u2A7E\",\n  \"GreaterTilde\": \"\\u2273\",\n  \"Gscr\": \"\\uD835\\uDCA2\",\n  \"gscr\": \"\\u210A\",\n  \"gsim\": \"\\u2273\",\n  \"gsime\": \"\\u2A8E\",\n  \"gsiml\": \"\\u2A90\",\n  \"GT\": \">\",\n  \"Gt\": \"\\u226B\",\n  \"gt\": \">\",\n  \"gtcc\": \"\\u2AA7\",\n  \"gtcir\": \"\\u2A7A\",\n  \"gtdot\": \"\\u22D7\",\n  \"gtlPar\": \"\\u2995\",\n  \"gtquest\": \"\\u2A7C\",\n  \"gtrapprox\": \"\\u2A86\",\n  \"gtrarr\": \"\\u2978\",\n  \"gtrdot\": \"\\u22D7\",\n  \"gtreqless\": \"\\u22DB\",\n  \"gtreqqless\": \"\\u2A8C\",\n  \"gtrless\": \"\\u2277\",\n  \"gtrsim\": \"\\u2273\",\n  \"gvertneqq\": \"\\u2269\\uFE00\",\n  \"gvnE\": \"\\u2269\\uFE00\",\n  \"Hacek\": \"\\u02C7\",\n  \"hairsp\": \"\\u200A\",\n  \"half\": \"\\xBD\",\n  \"hamilt\": \"\\u210B\",\n  \"HARDcy\": \"\\u042A\",\n  \"hardcy\": \"\\u044A\",\n  \"hArr\": \"\\u21D4\",\n  \"harr\": \"\\u2194\",\n  \"harrcir\": \"\\u2948\",\n  \"harrw\": \"\\u21AD\",\n  \"Hat\": \"^\",\n  \"hbar\": \"\\u210F\",\n  \"Hcirc\": \"\\u0124\",\n  \"hcirc\": \"\\u0125\",\n  \"hearts\": \"\\u2665\",\n  \"heartsuit\": \"\\u2665\",\n  \"hellip\": \"\\u2026\",\n  \"hercon\": \"\\u22B9\",\n  \"Hfr\": \"\\u210C\",\n  \"hfr\": \"\\uD835\\uDD25\",\n  \"HilbertSpace\": \"\\u210B\",\n  \"hksearow\": \"\\u2925\",\n  \"hkswarow\": \"\\u2926\",\n  \"hoarr\": \"\\u21FF\",\n  \"homtht\": \"\\u223B\",\n  \"hookleftarrow\": \"\\u21A9\",\n  \"hookrightarrow\": \"\\u21AA\",\n  \"Hopf\": \"\\u210D\",\n  \"hopf\": \"\\uD835\\uDD59\",\n  \"horbar\": \"\\u2015\",\n  \"HorizontalLine\": \"\\u2500\",\n  \"Hscr\": \"\\u210B\",\n  \"hscr\": \"\\uD835\\uDCBD\",\n  \"hslash\": \"\\u210F\",\n  \"Hstrok\": \"\\u0126\",\n  \"hstrok\": \"\\u0127\",\n  \"HumpDownHump\": \"\\u224E\",\n  \"HumpEqual\": \"\\u224F\",\n  \"hybull\": \"\\u2043\",\n  \"hyphen\": \"\\u2010\",\n  \"Iacute\": \"\\xCD\",\n  \"iacute\": \"\\xED\",\n  \"ic\": \"\\u2063\",\n  \"Icirc\": \"\\xCE\",\n  \"icirc\": \"\\xEE\",\n  \"Icy\": \"\\u0418\",\n  \"icy\": \"\\u0438\",\n  \"Idot\": \"\\u0130\",\n  \"IEcy\": \"\\u0415\",\n  \"iecy\": \"\\u0435\",\n  \"iexcl\": \"\\xA1\",\n  \"iff\": \"\\u21D4\",\n  \"Ifr\": \"\\u2111\",\n  \"ifr\": \"\\uD835\\uDD26\",\n  \"Igrave\": \"\\xCC\",\n  \"igrave\": \"\\xEC\",\n  \"ii\": \"\\u2148\",\n  \"iiiint\": \"\\u2A0C\",\n  \"iiint\": \"\\u222D\",\n  \"iinfin\": \"\\u29DC\",\n  \"iiota\": \"\\u2129\",\n  \"IJlig\": \"\\u0132\",\n  \"ijlig\": \"\\u0133\",\n  \"Im\": \"\\u2111\",\n  \"Imacr\": \"\\u012A\",\n  \"imacr\": \"\\u012B\",\n  \"image\": \"\\u2111\",\n  \"ImaginaryI\": \"\\u2148\",\n  \"imagline\": \"\\u2110\",\n  \"imagpart\": \"\\u2111\",\n  \"imath\": \"\\u0131\",\n  \"imof\": \"\\u22B7\",\n  \"imped\": \"\\u01B5\",\n  \"Implies\": \"\\u21D2\",\n  \"in\": \"\\u2208\",\n  \"incare\": \"\\u2105\",\n  \"infin\": \"\\u221E\",\n  \"infintie\": \"\\u29DD\",\n  \"inodot\": \"\\u0131\",\n  \"Int\": \"\\u222C\",\n  \"int\": \"\\u222B\",\n  \"intcal\": \"\\u22BA\",\n  \"integers\": \"\\u2124\",\n  \"Integral\": \"\\u222B\",\n  \"intercal\": \"\\u22BA\",\n  \"Intersection\": \"\\u22C2\",\n  \"intlarhk\": \"\\u2A17\",\n  \"intprod\": \"\\u2A3C\",\n  \"InvisibleComma\": \"\\u2063\",\n  \"InvisibleTimes\": \"\\u2062\",\n  \"IOcy\": \"\\u0401\",\n  \"iocy\": \"\\u0451\",\n  \"Iogon\": \"\\u012E\",\n  \"iogon\": \"\\u012F\",\n  \"Iopf\": \"\\uD835\\uDD40\",\n  \"iopf\": \"\\uD835\\uDD5A\",\n  \"Iota\": \"\\u0399\",\n  \"iota\": \"\\u03B9\",\n  \"iprod\": \"\\u2A3C\",\n  \"iquest\": \"\\xBF\",\n  \"Iscr\": \"\\u2110\",\n  \"iscr\": \"\\uD835\\uDCBE\",\n  \"isin\": \"\\u2208\",\n  \"isindot\": \"\\u22F5\",\n  \"isinE\": \"\\u22F9\",\n  \"isins\": \"\\u22F4\",\n  \"isinsv\": \"\\u22F3\",\n  \"isinv\": \"\\u2208\",\n  \"it\": \"\\u2062\",\n  \"Itilde\": \"\\u0128\",\n  \"itilde\": \"\\u0129\",\n  \"Iukcy\": \"\\u0406\",\n  \"iukcy\": \"\\u0456\",\n  \"Iuml\": \"\\xCF\",\n  \"iuml\": \"\\xEF\",\n  \"Jcirc\": \"\\u0134\",\n  \"jcirc\": \"\\u0135\",\n  \"Jcy\": \"\\u0419\",\n  \"jcy\": \"\\u0439\",\n  \"Jfr\": \"\\uD835\\uDD0D\",\n  \"jfr\": \"\\uD835\\uDD27\",\n  \"jmath\": \"\\u0237\",\n  \"Jopf\": \"\\uD835\\uDD41\",\n  \"jopf\": \"\\uD835\\uDD5B\",\n  \"Jscr\": \"\\uD835\\uDCA5\",\n  \"jscr\": \"\\uD835\\uDCBF\",\n  \"Jsercy\": \"\\u0408\",\n  \"jsercy\": \"\\u0458\",\n  \"Jukcy\": \"\\u0404\",\n  \"jukcy\": \"\\u0454\",\n  \"Kappa\": \"\\u039A\",\n  \"kappa\": \"\\u03BA\",\n  \"kappav\": \"\\u03F0\",\n  \"Kcedil\": \"\\u0136\",\n  \"kcedil\": \"\\u0137\",\n  \"Kcy\": \"\\u041A\",\n  \"kcy\": \"\\u043A\",\n  \"Kfr\": \"\\uD835\\uDD0E\",\n  \"kfr\": \"\\uD835\\uDD28\",\n  \"kgreen\": \"\\u0138\",\n  \"KHcy\": \"\\u0425\",\n  \"khcy\": \"\\u0445\",\n  \"KJcy\": \"\\u040C\",\n  \"kjcy\": \"\\u045C\",\n  \"Kopf\": \"\\uD835\\uDD42\",\n  \"kopf\": \"\\uD835\\uDD5C\",\n  \"Kscr\": \"\\uD835\\uDCA6\",\n  \"kscr\": \"\\uD835\\uDCC0\",\n  \"lAarr\": \"\\u21DA\",\n  \"Lacute\": \"\\u0139\",\n  \"lacute\": \"\\u013A\",\n  \"laemptyv\": \"\\u29B4\",\n  \"lagran\": \"\\u2112\",\n  \"Lambda\": \"\\u039B\",\n  \"lambda\": \"\\u03BB\",\n  \"Lang\": \"\\u27EA\",\n  \"lang\": \"\\u27E8\",\n  \"langd\": \"\\u2991\",\n  \"langle\": \"\\u27E8\",\n  \"lap\": \"\\u2A85\",\n  \"Laplacetrf\": \"\\u2112\",\n  \"laquo\": \"\\xAB\",\n  \"Larr\": \"\\u219E\",\n  \"lArr\": \"\\u21D0\",\n  \"larr\": \"\\u2190\",\n  \"larrb\": \"\\u21E4\",\n  \"larrbfs\": \"\\u291F\",\n  \"larrfs\": \"\\u291D\",\n  \"larrhk\": \"\\u21A9\",\n  \"larrlp\": \"\\u21AB\",\n  \"larrpl\": \"\\u2939\",\n  \"larrsim\": \"\\u2973\",\n  \"larrtl\": \"\\u21A2\",\n  \"lat\": \"\\u2AAB\",\n  \"lAtail\": \"\\u291B\",\n  \"latail\": \"\\u2919\",\n  \"late\": \"\\u2AAD\",\n  \"lates\": \"\\u2AAD\\uFE00\",\n  \"lBarr\": \"\\u290E\",\n  \"lbarr\": \"\\u290C\",\n  \"lbbrk\": \"\\u2772\",\n  \"lbrace\": \"{\",\n  \"lbrack\": \"[\",\n  \"lbrke\": \"\\u298B\",\n  \"lbrksld\": \"\\u298F\",\n  \"lbrkslu\": \"\\u298D\",\n  \"Lcaron\": \"\\u013D\",\n  \"lcaron\": \"\\u013E\",\n  \"Lcedil\": \"\\u013B\",\n  \"lcedil\": \"\\u013C\",\n  \"lceil\": \"\\u2308\",\n  \"lcub\": \"{\",\n  \"Lcy\": \"\\u041B\",\n  \"lcy\": \"\\u043B\",\n  \"ldca\": \"\\u2936\",\n  \"ldquo\": \"\\u201C\",\n  \"ldquor\": \"\\u201E\",\n  \"ldrdhar\": \"\\u2967\",\n  \"ldrushar\": \"\\u294B\",\n  \"ldsh\": \"\\u21B2\",\n  \"lE\": \"\\u2266\",\n  \"le\": \"\\u2264\",\n  \"LeftAngleBracket\": \"\\u27E8\",\n  \"LeftArrow\": \"\\u2190\",\n  \"Leftarrow\": \"\\u21D0\",\n  \"leftarrow\": \"\\u2190\",\n  \"LeftArrowBar\": \"\\u21E4\",\n  \"LeftArrowRightArrow\": \"\\u21C6\",\n  \"leftarrowtail\": \"\\u21A2\",\n  \"LeftCeiling\": \"\\u2308\",\n  \"LeftDoubleBracket\": \"\\u27E6\",\n  \"LeftDownTeeVector\": \"\\u2961\",\n  \"LeftDownVector\": \"\\u21C3\",\n  \"LeftDownVectorBar\": \"\\u2959\",\n  \"LeftFloor\": \"\\u230A\",\n  \"leftharpoondown\": \"\\u21BD\",\n  \"leftharpoonup\": \"\\u21BC\",\n  \"leftleftarrows\": \"\\u21C7\",\n  \"LeftRightArrow\": \"\\u2194\",\n  \"Leftrightarrow\": \"\\u21D4\",\n  \"leftrightarrow\": \"\\u2194\",\n  \"leftrightarrows\": \"\\u21C6\",\n  \"leftrightharpoons\": \"\\u21CB\",\n  \"leftrightsquigarrow\": \"\\u21AD\",\n  \"LeftRightVector\": \"\\u294E\",\n  \"LeftTee\": \"\\u22A3\",\n  \"LeftTeeArrow\": \"\\u21A4\",\n  \"LeftTeeVector\": \"\\u295A\",\n  \"leftthreetimes\": \"\\u22CB\",\n  \"LeftTriangle\": \"\\u22B2\",\n  \"LeftTriangleBar\": \"\\u29CF\",\n  \"LeftTriangleEqual\": \"\\u22B4\",\n  \"LeftUpDownVector\": \"\\u2951\",\n  \"LeftUpTeeVector\": \"\\u2960\",\n  \"LeftUpVector\": \"\\u21BF\",\n  \"LeftUpVectorBar\": \"\\u2958\",\n  \"LeftVector\": \"\\u21BC\",\n  \"LeftVectorBar\": \"\\u2952\",\n  \"lEg\": \"\\u2A8B\",\n  \"leg\": \"\\u22DA\",\n  \"leq\": \"\\u2264\",\n  \"leqq\": \"\\u2266\",\n  \"leqslant\": \"\\u2A7D\",\n  \"les\": \"\\u2A7D\",\n  \"lescc\": \"\\u2AA8\",\n  \"lesdot\": \"\\u2A7F\",\n  \"lesdoto\": \"\\u2A81\",\n  \"lesdotor\": \"\\u2A83\",\n  \"lesg\": \"\\u22DA\\uFE00\",\n  \"lesges\": \"\\u2A93\",\n  \"lessapprox\": \"\\u2A85\",\n  \"lessdot\": \"\\u22D6\",\n  \"lesseqgtr\": \"\\u22DA\",\n  \"lesseqqgtr\": \"\\u2A8B\",\n  \"LessEqualGreater\": \"\\u22DA\",\n  \"LessFullEqual\": \"\\u2266\",\n  \"LessGreater\": \"\\u2276\",\n  \"lessgtr\": \"\\u2276\",\n  \"LessLess\": \"\\u2AA1\",\n  \"lesssim\": \"\\u2272\",\n  \"LessSlantEqual\": \"\\u2A7D\",\n  \"LessTilde\": \"\\u2272\",\n  \"lfisht\": \"\\u297C\",\n  \"lfloor\": \"\\u230A\",\n  \"Lfr\": \"\\uD835\\uDD0F\",\n  \"lfr\": \"\\uD835\\uDD29\",\n  \"lg\": \"\\u2276\",\n  \"lgE\": \"\\u2A91\",\n  \"lHar\": \"\\u2962\",\n  \"lhard\": \"\\u21BD\",\n  \"lharu\": \"\\u21BC\",\n  \"lharul\": \"\\u296A\",\n  \"lhblk\": \"\\u2584\",\n  \"LJcy\": \"\\u0409\",\n  \"ljcy\": \"\\u0459\",\n  \"Ll\": \"\\u22D8\",\n  \"ll\": \"\\u226A\",\n  \"llarr\": \"\\u21C7\",\n  \"llcorner\": \"\\u231E\",\n  \"Lleftarrow\": \"\\u21DA\",\n  \"llhard\": \"\\u296B\",\n  \"lltri\": \"\\u25FA\",\n  \"Lmidot\": \"\\u013F\",\n  \"lmidot\": \"\\u0140\",\n  \"lmoust\": \"\\u23B0\",\n  \"lmoustache\": \"\\u23B0\",\n  \"lnap\": \"\\u2A89\",\n  \"lnapprox\": \"\\u2A89\",\n  \"lnE\": \"\\u2268\",\n  \"lne\": \"\\u2A87\",\n  \"lneq\": \"\\u2A87\",\n  \"lneqq\": \"\\u2268\",\n  \"lnsim\": \"\\u22E6\",\n  \"loang\": \"\\u27EC\",\n  \"loarr\": \"\\u21FD\",\n  \"lobrk\": \"\\u27E6\",\n  \"LongLeftArrow\": \"\\u27F5\",\n  \"Longleftarrow\": \"\\u27F8\",\n  \"longleftarrow\": \"\\u27F5\",\n  \"LongLeftRightArrow\": \"\\u27F7\",\n  \"Longleftrightarrow\": \"\\u27FA\",\n  \"longleftrightarrow\": \"\\u27F7\",\n  \"longmapsto\": \"\\u27FC\",\n  \"LongRightArrow\": \"\\u27F6\",\n  \"Longrightarrow\": \"\\u27F9\",\n  \"longrightarrow\": \"\\u27F6\",\n  \"looparrowleft\": \"\\u21AB\",\n  \"looparrowright\": \"\\u21AC\",\n  \"lopar\": \"\\u2985\",\n  \"Lopf\": \"\\uD835\\uDD43\",\n  \"lopf\": \"\\uD835\\uDD5D\",\n  \"loplus\": \"\\u2A2D\",\n  \"lotimes\": \"\\u2A34\",\n  \"lowast\": \"\\u2217\",\n  \"lowbar\": \"_\",\n  \"LowerLeftArrow\": \"\\u2199\",\n  \"LowerRightArrow\": \"\\u2198\",\n  \"loz\": \"\\u25CA\",\n  \"lozenge\": \"\\u25CA\",\n  \"lozf\": \"\\u29EB\",\n  \"lpar\": \"(\",\n  \"lparlt\": \"\\u2993\",\n  \"lrarr\": \"\\u21C6\",\n  \"lrcorner\": \"\\u231F\",\n  \"lrhar\": \"\\u21CB\",\n  \"lrhard\": \"\\u296D\",\n  \"lrm\": \"\\u200E\",\n  \"lrtri\": \"\\u22BF\",\n  \"lsaquo\": \"\\u2039\",\n  \"Lscr\": \"\\u2112\",\n  \"lscr\": \"\\uD835\\uDCC1\",\n  \"Lsh\": \"\\u21B0\",\n  \"lsh\": \"\\u21B0\",\n  \"lsim\": \"\\u2272\",\n  \"lsime\": \"\\u2A8D\",\n  \"lsimg\": \"\\u2A8F\",\n  \"lsqb\": \"[\",\n  \"lsquo\": \"\\u2018\",\n  \"lsquor\": \"\\u201A\",\n  \"Lstrok\": \"\\u0141\",\n  \"lstrok\": \"\\u0142\",\n  \"LT\": \"<\",\n  \"Lt\": \"\\u226A\",\n  \"lt\": \"<\",\n  \"ltcc\": \"\\u2AA6\",\n  \"ltcir\": \"\\u2A79\",\n  \"ltdot\": \"\\u22D6\",\n  \"lthree\": \"\\u22CB\",\n  \"ltimes\": \"\\u22C9\",\n  \"ltlarr\": \"\\u2976\",\n  \"ltquest\": \"\\u2A7B\",\n  \"ltri\": \"\\u25C3\",\n  \"ltrie\": \"\\u22B4\",\n  \"ltrif\": \"\\u25C2\",\n  \"ltrPar\": \"\\u2996\",\n  \"lurdshar\": \"\\u294A\",\n  \"luruhar\": \"\\u2966\",\n  \"lvertneqq\": \"\\u2268\\uFE00\",\n  \"lvnE\": \"\\u2268\\uFE00\",\n  \"macr\": \"\\xAF\",\n  \"male\": \"\\u2642\",\n  \"malt\": \"\\u2720\",\n  \"maltese\": \"\\u2720\",\n  \"Map\": \"\\u2905\",\n  \"map\": \"\\u21A6\",\n  \"mapsto\": \"\\u21A6\",\n  \"mapstodown\": \"\\u21A7\",\n  \"mapstoleft\": \"\\u21A4\",\n  \"mapstoup\": \"\\u21A5\",\n  \"marker\": \"\\u25AE\",\n  \"mcomma\": \"\\u2A29\",\n  \"Mcy\": \"\\u041C\",\n  \"mcy\": \"\\u043C\",\n  \"mdash\": \"\\u2014\",\n  \"mDDot\": \"\\u223A\",\n  \"measuredangle\": \"\\u2221\",\n  \"MediumSpace\": \"\\u205F\",\n  \"Mellintrf\": \"\\u2133\",\n  \"Mfr\": \"\\uD835\\uDD10\",\n  \"mfr\": \"\\uD835\\uDD2A\",\n  \"mho\": \"\\u2127\",\n  \"micro\": \"\\xB5\",\n  \"mid\": \"\\u2223\",\n  \"midast\": \"*\",\n  \"midcir\": \"\\u2AF0\",\n  \"middot\": \"\\xB7\",\n  \"minus\": \"\\u2212\",\n  \"minusb\": \"\\u229F\",\n  \"minusd\": \"\\u2238\",\n  \"minusdu\": \"\\u2A2A\",\n  \"MinusPlus\": \"\\u2213\",\n  \"mlcp\": \"\\u2ADB\",\n  \"mldr\": \"\\u2026\",\n  \"mnplus\": \"\\u2213\",\n  \"models\": \"\\u22A7\",\n  \"Mopf\": \"\\uD835\\uDD44\",\n  \"mopf\": \"\\uD835\\uDD5E\",\n  \"mp\": \"\\u2213\",\n  \"Mscr\": \"\\u2133\",\n  \"mscr\": \"\\uD835\\uDCC2\",\n  \"mstpos\": \"\\u223E\",\n  \"Mu\": \"\\u039C\",\n  \"mu\": \"\\u03BC\",\n  \"multimap\": \"\\u22B8\",\n  \"mumap\": \"\\u22B8\",\n  \"nabla\": \"\\u2207\",\n  \"Nacute\": \"\\u0143\",\n  \"nacute\": \"\\u0144\",\n  \"nang\": \"\\u2220\\u20D2\",\n  \"nap\": \"\\u2249\",\n  \"napE\": \"\\u2A70\\u0338\",\n  \"napid\": \"\\u224B\\u0338\",\n  \"napos\": \"\\u0149\",\n  \"napprox\": \"\\u2249\",\n  \"natur\": \"\\u266E\",\n  \"natural\": \"\\u266E\",\n  \"naturals\": \"\\u2115\",\n  \"nbsp\": \"\\xA0\",\n  \"nbump\": \"\\u224E\\u0338\",\n  \"nbumpe\": \"\\u224F\\u0338\",\n  \"ncap\": \"\\u2A43\",\n  \"Ncaron\": \"\\u0147\",\n  \"ncaron\": \"\\u0148\",\n  \"Ncedil\": \"\\u0145\",\n  \"ncedil\": \"\\u0146\",\n  \"ncong\": \"\\u2247\",\n  \"ncongdot\": \"\\u2A6D\\u0338\",\n  \"ncup\": \"\\u2A42\",\n  \"Ncy\": \"\\u041D\",\n  \"ncy\": \"\\u043D\",\n  \"ndash\": \"\\u2013\",\n  \"ne\": \"\\u2260\",\n  \"nearhk\": \"\\u2924\",\n  \"neArr\": \"\\u21D7\",\n  \"nearr\": \"\\u2197\",\n  \"nearrow\": \"\\u2197\",\n  \"nedot\": \"\\u2250\\u0338\",\n  \"NegativeMediumSpace\": \"\\u200B\",\n  \"NegativeThickSpace\": \"\\u200B\",\n  \"NegativeThinSpace\": \"\\u200B\",\n  \"NegativeVeryThinSpace\": \"\\u200B\",\n  \"nequiv\": \"\\u2262\",\n  \"nesear\": \"\\u2928\",\n  \"nesim\": \"\\u2242\\u0338\",\n  \"NestedGreaterGreater\": \"\\u226B\",\n  \"NestedLessLess\": \"\\u226A\",\n  \"NewLine\": \"\\n\",\n  \"nexist\": \"\\u2204\",\n  \"nexists\": \"\\u2204\",\n  \"Nfr\": \"\\uD835\\uDD11\",\n  \"nfr\": \"\\uD835\\uDD2B\",\n  \"ngE\": \"\\u2267\\u0338\",\n  \"nge\": \"\\u2271\",\n  \"ngeq\": \"\\u2271\",\n  \"ngeqq\": \"\\u2267\\u0338\",\n  \"ngeqslant\": \"\\u2A7E\\u0338\",\n  \"nges\": \"\\u2A7E\\u0338\",\n  \"nGg\": \"\\u22D9\\u0338\",\n  \"ngsim\": \"\\u2275\",\n  \"nGt\": \"\\u226B\\u20D2\",\n  \"ngt\": \"\\u226F\",\n  \"ngtr\": \"\\u226F\",\n  \"nGtv\": \"\\u226B\\u0338\",\n  \"nhArr\": \"\\u21CE\",\n  \"nharr\": \"\\u21AE\",\n  \"nhpar\": \"\\u2AF2\",\n  \"ni\": \"\\u220B\",\n  \"nis\": \"\\u22FC\",\n  \"nisd\": \"\\u22FA\",\n  \"niv\": \"\\u220B\",\n  \"NJcy\": \"\\u040A\",\n  \"njcy\": \"\\u045A\",\n  \"nlArr\": \"\\u21CD\",\n  \"nlarr\": \"\\u219A\",\n  \"nldr\": \"\\u2025\",\n  \"nlE\": \"\\u2266\\u0338\",\n  \"nle\": \"\\u2270\",\n  \"nLeftarrow\": \"\\u21CD\",\n  \"nleftarrow\": \"\\u219A\",\n  \"nLeftrightarrow\": \"\\u21CE\",\n  \"nleftrightarrow\": \"\\u21AE\",\n  \"nleq\": \"\\u2270\",\n  \"nleqq\": \"\\u2266\\u0338\",\n  \"nleqslant\": \"\\u2A7D\\u0338\",\n  \"nles\": \"\\u2A7D\\u0338\",\n  \"nless\": \"\\u226E\",\n  \"nLl\": \"\\u22D8\\u0338\",\n  \"nlsim\": \"\\u2274\",\n  \"nLt\": \"\\u226A\\u20D2\",\n  \"nlt\": \"\\u226E\",\n  \"nltri\": \"\\u22EA\",\n  \"nltrie\": \"\\u22EC\",\n  \"nLtv\": \"\\u226A\\u0338\",\n  \"nmid\": \"\\u2224\",\n  \"NoBreak\": \"\\u2060\",\n  \"NonBreakingSpace\": \"\\xA0\",\n  \"Nopf\": \"\\u2115\",\n  \"nopf\": \"\\uD835\\uDD5F\",\n  \"Not\": \"\\u2AEC\",\n  \"not\": \"\\xAC\",\n  \"NotCongruent\": \"\\u2262\",\n  \"NotCupCap\": \"\\u226D\",\n  \"NotDoubleVerticalBar\": \"\\u2226\",\n  \"NotElement\": \"\\u2209\",\n  \"NotEqual\": \"\\u2260\",\n  \"NotEqualTilde\": \"\\u2242\\u0338\",\n  \"NotExists\": \"\\u2204\",\n  \"NotGreater\": \"\\u226F\",\n  \"NotGreaterEqual\": \"\\u2271\",\n  \"NotGreaterFullEqual\": \"\\u2267\\u0338\",\n  \"NotGreaterGreater\": \"\\u226B\\u0338\",\n  \"NotGreaterLess\": \"\\u2279\",\n  \"NotGreaterSlantEqual\": \"\\u2A7E\\u0338\",\n  \"NotGreaterTilde\": \"\\u2275\",\n  \"NotHumpDownHump\": \"\\u224E\\u0338\",\n  \"NotHumpEqual\": \"\\u224F\\u0338\",\n  \"notin\": \"\\u2209\",\n  \"notindot\": \"\\u22F5\\u0338\",\n  \"notinE\": \"\\u22F9\\u0338\",\n  \"notinva\": \"\\u2209\",\n  \"notinvb\": \"\\u22F7\",\n  \"notinvc\": \"\\u22F6\",\n  \"NotLeftTriangle\": \"\\u22EA\",\n  \"NotLeftTriangleBar\": \"\\u29CF\\u0338\",\n  \"NotLeftTriangleEqual\": \"\\u22EC\",\n  \"NotLess\": \"\\u226E\",\n  \"NotLessEqual\": \"\\u2270\",\n  \"NotLessGreater\": \"\\u2278\",\n  \"NotLessLess\": \"\\u226A\\u0338\",\n  \"NotLessSlantEqual\": \"\\u2A7D\\u0338\",\n  \"NotLessTilde\": \"\\u2274\",\n  \"NotNestedGreaterGreater\": \"\\u2AA2\\u0338\",\n  \"NotNestedLessLess\": \"\\u2AA1\\u0338\",\n  \"notni\": \"\\u220C\",\n  \"notniva\": \"\\u220C\",\n  \"notnivb\": \"\\u22FE\",\n  \"notnivc\": \"\\u22FD\",\n  \"NotPrecedes\": \"\\u2280\",\n  \"NotPrecedesEqual\": \"\\u2AAF\\u0338\",\n  \"NotPrecedesSlantEqual\": \"\\u22E0\",\n  \"NotReverseElement\": \"\\u220C\",\n  \"NotRightTriangle\": \"\\u22EB\",\n  \"NotRightTriangleBar\": \"\\u29D0\\u0338\",\n  \"NotRightTriangleEqual\": \"\\u22ED\",\n  \"NotSquareSubset\": \"\\u228F\\u0338\",\n  \"NotSquareSubsetEqual\": \"\\u22E2\",\n  \"NotSquareSuperset\": \"\\u2290\\u0338\",\n  \"NotSquareSupersetEqual\": \"\\u22E3\",\n  \"NotSubset\": \"\\u2282\\u20D2\",\n  \"NotSubsetEqual\": \"\\u2288\",\n  \"NotSucceeds\": \"\\u2281\",\n  \"NotSucceedsEqual\": \"\\u2AB0\\u0338\",\n  \"NotSucceedsSlantEqual\": \"\\u22E1\",\n  \"NotSucceedsTilde\": \"\\u227F\\u0338\",\n  \"NotSuperset\": \"\\u2283\\u20D2\",\n  \"NotSupersetEqual\": \"\\u2289\",\n  \"NotTilde\": \"\\u2241\",\n  \"NotTildeEqual\": \"\\u2244\",\n  \"NotTildeFullEqual\": \"\\u2247\",\n  \"NotTildeTilde\": \"\\u2249\",\n  \"NotVerticalBar\": \"\\u2224\",\n  \"npar\": \"\\u2226\",\n  \"nparallel\": \"\\u2226\",\n  \"nparsl\": \"\\u2AFD\\u20E5\",\n  \"npart\": \"\\u2202\\u0338\",\n  \"npolint\": \"\\u2A14\",\n  \"npr\": \"\\u2280\",\n  \"nprcue\": \"\\u22E0\",\n  \"npre\": \"\\u2AAF\\u0338\",\n  \"nprec\": \"\\u2280\",\n  \"npreceq\": \"\\u2AAF\\u0338\",\n  \"nrArr\": \"\\u21CF\",\n  \"nrarr\": \"\\u219B\",\n  \"nrarrc\": \"\\u2933\\u0338\",\n  \"nrarrw\": \"\\u219D\\u0338\",\n  \"nRightarrow\": \"\\u21CF\",\n  \"nrightarrow\": \"\\u219B\",\n  \"nrtri\": \"\\u22EB\",\n  \"nrtrie\": \"\\u22ED\",\n  \"nsc\": \"\\u2281\",\n  \"nsccue\": \"\\u22E1\",\n  \"nsce\": \"\\u2AB0\\u0338\",\n  \"Nscr\": \"\\uD835\\uDCA9\",\n  \"nscr\": \"\\uD835\\uDCC3\",\n  \"nshortmid\": \"\\u2224\",\n  \"nshortparallel\": \"\\u2226\",\n  \"nsim\": \"\\u2241\",\n  \"nsime\": \"\\u2244\",\n  \"nsimeq\": \"\\u2244\",\n  \"nsmid\": \"\\u2224\",\n  \"nspar\": \"\\u2226\",\n  \"nsqsube\": \"\\u22E2\",\n  \"nsqsupe\": \"\\u22E3\",\n  \"nsub\": \"\\u2284\",\n  \"nsubE\": \"\\u2AC5\\u0338\",\n  \"nsube\": \"\\u2288\",\n  \"nsubset\": \"\\u2282\\u20D2\",\n  \"nsubseteq\": \"\\u2288\",\n  \"nsubseteqq\": \"\\u2AC5\\u0338\",\n  \"nsucc\": \"\\u2281\",\n  \"nsucceq\": \"\\u2AB0\\u0338\",\n  \"nsup\": \"\\u2285\",\n  \"nsupE\": \"\\u2AC6\\u0338\",\n  \"nsupe\": \"\\u2289\",\n  \"nsupset\": \"\\u2283\\u20D2\",\n  \"nsupseteq\": \"\\u2289\",\n  \"nsupseteqq\": \"\\u2AC6\\u0338\",\n  \"ntgl\": \"\\u2279\",\n  \"Ntilde\": \"\\xD1\",\n  \"ntilde\": \"\\xF1\",\n  \"ntlg\": \"\\u2278\",\n  \"ntriangleleft\": \"\\u22EA\",\n  \"ntrianglelefteq\": \"\\u22EC\",\n  \"ntriangleright\": \"\\u22EB\",\n  \"ntrianglerighteq\": \"\\u22ED\",\n  \"Nu\": \"\\u039D\",\n  \"nu\": \"\\u03BD\",\n  \"num\": \"#\",\n  \"numero\": \"\\u2116\",\n  \"numsp\": \"\\u2007\",\n  \"nvap\": \"\\u224D\\u20D2\",\n  \"nVDash\": \"\\u22AF\",\n  \"nVdash\": \"\\u22AE\",\n  \"nvDash\": \"\\u22AD\",\n  \"nvdash\": \"\\u22AC\",\n  \"nvge\": \"\\u2265\\u20D2\",\n  \"nvgt\": \">\\u20D2\",\n  \"nvHarr\": \"\\u2904\",\n  \"nvinfin\": \"\\u29DE\",\n  \"nvlArr\": \"\\u2902\",\n  \"nvle\": \"\\u2264\\u20D2\",\n  \"nvlt\": \"<\\u20D2\",\n  \"nvltrie\": \"\\u22B4\\u20D2\",\n  \"nvrArr\": \"\\u2903\",\n  \"nvrtrie\": \"\\u22B5\\u20D2\",\n  \"nvsim\": \"\\u223C\\u20D2\",\n  \"nwarhk\": \"\\u2923\",\n  \"nwArr\": \"\\u21D6\",\n  \"nwarr\": \"\\u2196\",\n  \"nwarrow\": \"\\u2196\",\n  \"nwnear\": \"\\u2927\",\n  \"Oacute\": \"\\xD3\",\n  \"oacute\": \"\\xF3\",\n  \"oast\": \"\\u229B\",\n  \"ocir\": \"\\u229A\",\n  \"Ocirc\": \"\\xD4\",\n  \"ocirc\": \"\\xF4\",\n  \"Ocy\": \"\\u041E\",\n  \"ocy\": \"\\u043E\",\n  \"odash\": \"\\u229D\",\n  \"Odblac\": \"\\u0150\",\n  \"odblac\": \"\\u0151\",\n  \"odiv\": \"\\u2A38\",\n  \"odot\": \"\\u2299\",\n  \"odsold\": \"\\u29BC\",\n  \"OElig\": \"\\u0152\",\n  \"oelig\": \"\\u0153\",\n  \"ofcir\": \"\\u29BF\",\n  \"Ofr\": \"\\uD835\\uDD12\",\n  \"ofr\": \"\\uD835\\uDD2C\",\n  \"ogon\": \"\\u02DB\",\n  \"Ograve\": \"\\xD2\",\n  \"ograve\": \"\\xF2\",\n  \"ogt\": \"\\u29C1\",\n  \"ohbar\": \"\\u29B5\",\n  \"ohm\": \"\\u03A9\",\n  \"oint\": \"\\u222E\",\n  \"olarr\": \"\\u21BA\",\n  \"olcir\": \"\\u29BE\",\n  \"olcross\": \"\\u29BB\",\n  \"oline\": \"\\u203E\",\n  \"olt\": \"\\u29C0\",\n  \"Omacr\": \"\\u014C\",\n  \"omacr\": \"\\u014D\",\n  \"Omega\": \"\\u03A9\",\n  \"omega\": \"\\u03C9\",\n  \"Omicron\": \"\\u039F\",\n  \"omicron\": \"\\u03BF\",\n  \"omid\": \"\\u29B6\",\n  \"ominus\": \"\\u2296\",\n  \"Oopf\": \"\\uD835\\uDD46\",\n  \"oopf\": \"\\uD835\\uDD60\",\n  \"opar\": \"\\u29B7\",\n  \"OpenCurlyDoubleQuote\": \"\\u201C\",\n  \"OpenCurlyQuote\": \"\\u2018\",\n  \"operp\": \"\\u29B9\",\n  \"oplus\": \"\\u2295\",\n  \"Or\": \"\\u2A54\",\n  \"or\": \"\\u2228\",\n  \"orarr\": \"\\u21BB\",\n  \"ord\": \"\\u2A5D\",\n  \"order\": \"\\u2134\",\n  \"orderof\": \"\\u2134\",\n  \"ordf\": \"\\xAA\",\n  \"ordm\": \"\\xBA\",\n  \"origof\": \"\\u22B6\",\n  \"oror\": \"\\u2A56\",\n  \"orslope\": \"\\u2A57\",\n  \"orv\": \"\\u2A5B\",\n  \"oS\": \"\\u24C8\",\n  \"Oscr\": \"\\uD835\\uDCAA\",\n  \"oscr\": \"\\u2134\",\n  \"Oslash\": \"\\xD8\",\n  \"oslash\": \"\\xF8\",\n  \"osol\": \"\\u2298\",\n  \"Otilde\": \"\\xD5\",\n  \"otilde\": \"\\xF5\",\n  \"Otimes\": \"\\u2A37\",\n  \"otimes\": \"\\u2297\",\n  \"otimesas\": \"\\u2A36\",\n  \"Ouml\": \"\\xD6\",\n  \"ouml\": \"\\xF6\",\n  \"ovbar\": \"\\u233D\",\n  \"OverBar\": \"\\u203E\",\n  \"OverBrace\": \"\\u23DE\",\n  \"OverBracket\": \"\\u23B4\",\n  \"OverParenthesis\": \"\\u23DC\",\n  \"par\": \"\\u2225\",\n  \"para\": \"\\xB6\",\n  \"parallel\": \"\\u2225\",\n  \"parsim\": \"\\u2AF3\",\n  \"parsl\": \"\\u2AFD\",\n  \"part\": \"\\u2202\",\n  \"PartialD\": \"\\u2202\",\n  \"Pcy\": \"\\u041F\",\n  \"pcy\": \"\\u043F\",\n  \"percnt\": \"%\",\n  \"period\": \".\",\n  \"permil\": \"\\u2030\",\n  \"perp\": \"\\u22A5\",\n  \"pertenk\": \"\\u2031\",\n  \"Pfr\": \"\\uD835\\uDD13\",\n  \"pfr\": \"\\uD835\\uDD2D\",\n  \"Phi\": \"\\u03A6\",\n  \"phi\": \"\\u03C6\",\n  \"phiv\": \"\\u03D5\",\n  \"phmmat\": \"\\u2133\",\n  \"phone\": \"\\u260E\",\n  \"Pi\": \"\\u03A0\",\n  \"pi\": \"\\u03C0\",\n  \"pitchfork\": \"\\u22D4\",\n  \"piv\": \"\\u03D6\",\n  \"planck\": \"\\u210F\",\n  \"planckh\": \"\\u210E\",\n  \"plankv\": \"\\u210F\",\n  \"plus\": \"+\",\n  \"plusacir\": \"\\u2A23\",\n  \"plusb\": \"\\u229E\",\n  \"pluscir\": \"\\u2A22\",\n  \"plusdo\": \"\\u2214\",\n  \"plusdu\": \"\\u2A25\",\n  \"pluse\": \"\\u2A72\",\n  \"PlusMinus\": \"\\xB1\",\n  \"plusmn\": \"\\xB1\",\n  \"plussim\": \"\\u2A26\",\n  \"plustwo\": \"\\u2A27\",\n  \"pm\": \"\\xB1\",\n  \"Poincareplane\": \"\\u210C\",\n  \"pointint\": \"\\u2A15\",\n  \"Popf\": \"\\u2119\",\n  \"popf\": \"\\uD835\\uDD61\",\n  \"pound\": \"\\xA3\",\n  \"Pr\": \"\\u2ABB\",\n  \"pr\": \"\\u227A\",\n  \"prap\": \"\\u2AB7\",\n  \"prcue\": \"\\u227C\",\n  \"prE\": \"\\u2AB3\",\n  \"pre\": \"\\u2AAF\",\n  \"prec\": \"\\u227A\",\n  \"precapprox\": \"\\u2AB7\",\n  \"preccurlyeq\": \"\\u227C\",\n  \"Precedes\": \"\\u227A\",\n  \"PrecedesEqual\": \"\\u2AAF\",\n  \"PrecedesSlantEqual\": \"\\u227C\",\n  \"PrecedesTilde\": \"\\u227E\",\n  \"preceq\": \"\\u2AAF\",\n  \"precnapprox\": \"\\u2AB9\",\n  \"precneqq\": \"\\u2AB5\",\n  \"precnsim\": \"\\u22E8\",\n  \"precsim\": \"\\u227E\",\n  \"Prime\": \"\\u2033\",\n  \"prime\": \"\\u2032\",\n  \"primes\": \"\\u2119\",\n  \"prnap\": \"\\u2AB9\",\n  \"prnE\": \"\\u2AB5\",\n  \"prnsim\": \"\\u22E8\",\n  \"prod\": \"\\u220F\",\n  \"Product\": \"\\u220F\",\n  \"profalar\": \"\\u232E\",\n  \"profline\": \"\\u2312\",\n  \"profsurf\": \"\\u2313\",\n  \"prop\": \"\\u221D\",\n  \"Proportion\": \"\\u2237\",\n  \"Proportional\": \"\\u221D\",\n  \"propto\": \"\\u221D\",\n  \"prsim\": \"\\u227E\",\n  \"prurel\": \"\\u22B0\",\n  \"Pscr\": \"\\uD835\\uDCAB\",\n  \"pscr\": \"\\uD835\\uDCC5\",\n  \"Psi\": \"\\u03A8\",\n  \"psi\": \"\\u03C8\",\n  \"puncsp\": \"\\u2008\",\n  \"Qfr\": \"\\uD835\\uDD14\",\n  \"qfr\": \"\\uD835\\uDD2E\",\n  \"qint\": \"\\u2A0C\",\n  \"Qopf\": \"\\u211A\",\n  \"qopf\": \"\\uD835\\uDD62\",\n  \"qprime\": \"\\u2057\",\n  \"Qscr\": \"\\uD835\\uDCAC\",\n  \"qscr\": \"\\uD835\\uDCC6\",\n  \"quaternions\": \"\\u210D\",\n  \"quatint\": \"\\u2A16\",\n  \"quest\": \"?\",\n  \"questeq\": \"\\u225F\",\n  \"QUOT\": \"\\\"\",\n  \"quot\": \"\\\"\",\n  \"rAarr\": \"\\u21DB\",\n  \"race\": \"\\u223D\\u0331\",\n  \"Racute\": \"\\u0154\",\n  \"racute\": \"\\u0155\",\n  \"radic\": \"\\u221A\",\n  \"raemptyv\": \"\\u29B3\",\n  \"Rang\": \"\\u27EB\",\n  \"rang\": \"\\u27E9\",\n  \"rangd\": \"\\u2992\",\n  \"range\": \"\\u29A5\",\n  \"rangle\": \"\\u27E9\",\n  \"raquo\": \"\\xBB\",\n  \"Rarr\": \"\\u21A0\",\n  \"rArr\": \"\\u21D2\",\n  \"rarr\": \"\\u2192\",\n  \"rarrap\": \"\\u2975\",\n  \"rarrb\": \"\\u21E5\",\n  \"rarrbfs\": \"\\u2920\",\n  \"rarrc\": \"\\u2933\",\n  \"rarrfs\": \"\\u291E\",\n  \"rarrhk\": \"\\u21AA\",\n  \"rarrlp\": \"\\u21AC\",\n  \"rarrpl\": \"\\u2945\",\n  \"rarrsim\": \"\\u2974\",\n  \"Rarrtl\": \"\\u2916\",\n  \"rarrtl\": \"\\u21A3\",\n  \"rarrw\": \"\\u219D\",\n  \"rAtail\": \"\\u291C\",\n  \"ratail\": \"\\u291A\",\n  \"ratio\": \"\\u2236\",\n  \"rationals\": \"\\u211A\",\n  \"RBarr\": \"\\u2910\",\n  \"rBarr\": \"\\u290F\",\n  \"rbarr\": \"\\u290D\",\n  \"rbbrk\": \"\\u2773\",\n  \"rbrace\": \"}\",\n  \"rbrack\": \"]\",\n  \"rbrke\": \"\\u298C\",\n  \"rbrksld\": \"\\u298E\",\n  \"rbrkslu\": \"\\u2990\",\n  \"Rcaron\": \"\\u0158\",\n  \"rcaron\": \"\\u0159\",\n  \"Rcedil\": \"\\u0156\",\n  \"rcedil\": \"\\u0157\",\n  \"rceil\": \"\\u2309\",\n  \"rcub\": \"}\",\n  \"Rcy\": \"\\u0420\",\n  \"rcy\": \"\\u0440\",\n  \"rdca\": \"\\u2937\",\n  \"rdldhar\": \"\\u2969\",\n  \"rdquo\": \"\\u201D\",\n  \"rdquor\": \"\\u201D\",\n  \"rdsh\": \"\\u21B3\",\n  \"Re\": \"\\u211C\",\n  \"real\": \"\\u211C\",\n  \"realine\": \"\\u211B\",\n  \"realpart\": \"\\u211C\",\n  \"reals\": \"\\u211D\",\n  \"rect\": \"\\u25AD\",\n  \"REG\": \"\\xAE\",\n  \"reg\": \"\\xAE\",\n  \"ReverseElement\": \"\\u220B\",\n  \"ReverseEquilibrium\": \"\\u21CB\",\n  \"ReverseUpEquilibrium\": \"\\u296F\",\n  \"rfisht\": \"\\u297D\",\n  \"rfloor\": \"\\u230B\",\n  \"Rfr\": \"\\u211C\",\n  \"rfr\": \"\\uD835\\uDD2F\",\n  \"rHar\": \"\\u2964\",\n  \"rhard\": \"\\u21C1\",\n  \"rharu\": \"\\u21C0\",\n  \"rharul\": \"\\u296C\",\n  \"Rho\": \"\\u03A1\",\n  \"rho\": \"\\u03C1\",\n  \"rhov\": \"\\u03F1\",\n  \"RightAngleBracket\": \"\\u27E9\",\n  \"RightArrow\": \"\\u2192\",\n  \"Rightarrow\": \"\\u21D2\",\n  \"rightarrow\": \"\\u2192\",\n  \"RightArrowBar\": \"\\u21E5\",\n  \"RightArrowLeftArrow\": \"\\u21C4\",\n  \"rightarrowtail\": \"\\u21A3\",\n  \"RightCeiling\": \"\\u2309\",\n  \"RightDoubleBracket\": \"\\u27E7\",\n  \"RightDownTeeVector\": \"\\u295D\",\n  \"RightDownVector\": \"\\u21C2\",\n  \"RightDownVectorBar\": \"\\u2955\",\n  \"RightFloor\": \"\\u230B\",\n  \"rightharpoondown\": \"\\u21C1\",\n  \"rightharpoonup\": \"\\u21C0\",\n  \"rightleftarrows\": \"\\u21C4\",\n  \"rightleftharpoons\": \"\\u21CC\",\n  \"rightrightarrows\": \"\\u21C9\",\n  \"rightsquigarrow\": \"\\u219D\",\n  \"RightTee\": \"\\u22A2\",\n  \"RightTeeArrow\": \"\\u21A6\",\n  \"RightTeeVector\": \"\\u295B\",\n  \"rightthreetimes\": \"\\u22CC\",\n  \"RightTriangle\": \"\\u22B3\",\n  \"RightTriangleBar\": \"\\u29D0\",\n  \"RightTriangleEqual\": \"\\u22B5\",\n  \"RightUpDownVector\": \"\\u294F\",\n  \"RightUpTeeVector\": \"\\u295C\",\n  \"RightUpVector\": \"\\u21BE\",\n  \"RightUpVectorBar\": \"\\u2954\",\n  \"RightVector\": \"\\u21C0\",\n  \"RightVectorBar\": \"\\u2953\",\n  \"ring\": \"\\u02DA\",\n  \"risingdotseq\": \"\\u2253\",\n  \"rlarr\": \"\\u21C4\",\n  \"rlhar\": \"\\u21CC\",\n  \"rlm\": \"\\u200F\",\n  \"rmoust\": \"\\u23B1\",\n  \"rmoustache\": \"\\u23B1\",\n  \"rnmid\": \"\\u2AEE\",\n  \"roang\": \"\\u27ED\",\n  \"roarr\": \"\\u21FE\",\n  \"robrk\": \"\\u27E7\",\n  \"ropar\": \"\\u2986\",\n  \"Ropf\": \"\\u211D\",\n  \"ropf\": \"\\uD835\\uDD63\",\n  \"roplus\": \"\\u2A2E\",\n  \"rotimes\": \"\\u2A35\",\n  \"RoundImplies\": \"\\u2970\",\n  \"rpar\": \")\",\n  \"rpargt\": \"\\u2994\",\n  \"rppolint\": \"\\u2A12\",\n  \"rrarr\": \"\\u21C9\",\n  \"Rrightarrow\": \"\\u21DB\",\n  \"rsaquo\": \"\\u203A\",\n  \"Rscr\": \"\\u211B\",\n  \"rscr\": \"\\uD835\\uDCC7\",\n  \"Rsh\": \"\\u21B1\",\n  \"rsh\": \"\\u21B1\",\n  \"rsqb\": \"]\",\n  \"rsquo\": \"\\u2019\",\n  \"rsquor\": \"\\u2019\",\n  \"rthree\": \"\\u22CC\",\n  \"rtimes\": \"\\u22CA\",\n  \"rtri\": \"\\u25B9\",\n  \"rtrie\": \"\\u22B5\",\n  \"rtrif\": \"\\u25B8\",\n  \"rtriltri\": \"\\u29CE\",\n  \"RuleDelayed\": \"\\u29F4\",\n  \"ruluhar\": \"\\u2968\",\n  \"rx\": \"\\u211E\",\n  \"Sacute\": \"\\u015A\",\n  \"sacute\": \"\\u015B\",\n  \"sbquo\": \"\\u201A\",\n  \"Sc\": \"\\u2ABC\",\n  \"sc\": \"\\u227B\",\n  \"scap\": \"\\u2AB8\",\n  \"Scaron\": \"\\u0160\",\n  \"scaron\": \"\\u0161\",\n  \"sccue\": \"\\u227D\",\n  \"scE\": \"\\u2AB4\",\n  \"sce\": \"\\u2AB0\",\n  \"Scedil\": \"\\u015E\",\n  \"scedil\": \"\\u015F\",\n  \"Scirc\": \"\\u015C\",\n  \"scirc\": \"\\u015D\",\n  \"scnap\": \"\\u2ABA\",\n  \"scnE\": \"\\u2AB6\",\n  \"scnsim\": \"\\u22E9\",\n  \"scpolint\": \"\\u2A13\",\n  \"scsim\": \"\\u227F\",\n  \"Scy\": \"\\u0421\",\n  \"scy\": \"\\u0441\",\n  \"sdot\": \"\\u22C5\",\n  \"sdotb\": \"\\u22A1\",\n  \"sdote\": \"\\u2A66\",\n  \"searhk\": \"\\u2925\",\n  \"seArr\": \"\\u21D8\",\n  \"searr\": \"\\u2198\",\n  \"searrow\": \"\\u2198\",\n  \"sect\": \"\\xA7\",\n  \"semi\": \";\",\n  \"seswar\": \"\\u2929\",\n  \"setminus\": \"\\u2216\",\n  \"setmn\": \"\\u2216\",\n  \"sext\": \"\\u2736\",\n  \"Sfr\": \"\\uD835\\uDD16\",\n  \"sfr\": \"\\uD835\\uDD30\",\n  \"sfrown\": \"\\u2322\",\n  \"sharp\": \"\\u266F\",\n  \"SHCHcy\": \"\\u0429\",\n  \"shchcy\": \"\\u0449\",\n  \"SHcy\": \"\\u0428\",\n  \"shcy\": \"\\u0448\",\n  \"ShortDownArrow\": \"\\u2193\",\n  \"ShortLeftArrow\": \"\\u2190\",\n  \"shortmid\": \"\\u2223\",\n  \"shortparallel\": \"\\u2225\",\n  \"ShortRightArrow\": \"\\u2192\",\n  \"ShortUpArrow\": \"\\u2191\",\n  \"shy\": \"\\xAD\",\n  \"Sigma\": \"\\u03A3\",\n  \"sigma\": \"\\u03C3\",\n  \"sigmaf\": \"\\u03C2\",\n  \"sigmav\": \"\\u03C2\",\n  \"sim\": \"\\u223C\",\n  \"simdot\": \"\\u2A6A\",\n  \"sime\": \"\\u2243\",\n  \"simeq\": \"\\u2243\",\n  \"simg\": \"\\u2A9E\",\n  \"simgE\": \"\\u2AA0\",\n  \"siml\": \"\\u2A9D\",\n  \"simlE\": \"\\u2A9F\",\n  \"simne\": \"\\u2246\",\n  \"simplus\": \"\\u2A24\",\n  \"simrarr\": \"\\u2972\",\n  \"slarr\": \"\\u2190\",\n  \"SmallCircle\": \"\\u2218\",\n  \"smallsetminus\": \"\\u2216\",\n  \"smashp\": \"\\u2A33\",\n  \"smeparsl\": \"\\u29E4\",\n  \"smid\": \"\\u2223\",\n  \"smile\": \"\\u2323\",\n  \"smt\": \"\\u2AAA\",\n  \"smte\": \"\\u2AAC\",\n  \"smtes\": \"\\u2AAC\\uFE00\",\n  \"SOFTcy\": \"\\u042C\",\n  \"softcy\": \"\\u044C\",\n  \"sol\": \"/\",\n  \"solb\": \"\\u29C4\",\n  \"solbar\": \"\\u233F\",\n  \"Sopf\": \"\\uD835\\uDD4A\",\n  \"sopf\": \"\\uD835\\uDD64\",\n  \"spades\": \"\\u2660\",\n  \"spadesuit\": \"\\u2660\",\n  \"spar\": \"\\u2225\",\n  \"sqcap\": \"\\u2293\",\n  \"sqcaps\": \"\\u2293\\uFE00\",\n  \"sqcup\": \"\\u2294\",\n  \"sqcups\": \"\\u2294\\uFE00\",\n  \"Sqrt\": \"\\u221A\",\n  \"sqsub\": \"\\u228F\",\n  \"sqsube\": \"\\u2291\",\n  \"sqsubset\": \"\\u228F\",\n  \"sqsubseteq\": \"\\u2291\",\n  \"sqsup\": \"\\u2290\",\n  \"sqsupe\": \"\\u2292\",\n  \"sqsupset\": \"\\u2290\",\n  \"sqsupseteq\": \"\\u2292\",\n  \"squ\": \"\\u25A1\",\n  \"Square\": \"\\u25A1\",\n  \"square\": \"\\u25A1\",\n  \"SquareIntersection\": \"\\u2293\",\n  \"SquareSubset\": \"\\u228F\",\n  \"SquareSubsetEqual\": \"\\u2291\",\n  \"SquareSuperset\": \"\\u2290\",\n  \"SquareSupersetEqual\": \"\\u2292\",\n  \"SquareUnion\": \"\\u2294\",\n  \"squarf\": \"\\u25AA\",\n  \"squf\": \"\\u25AA\",\n  \"srarr\": \"\\u2192\",\n  \"Sscr\": \"\\uD835\\uDCAE\",\n  \"sscr\": \"\\uD835\\uDCC8\",\n  \"ssetmn\": \"\\u2216\",\n  \"ssmile\": \"\\u2323\",\n  \"sstarf\": \"\\u22C6\",\n  \"Star\": \"\\u22C6\",\n  \"star\": \"\\u2606\",\n  \"starf\": \"\\u2605\",\n  \"straightepsilon\": \"\\u03F5\",\n  \"straightphi\": \"\\u03D5\",\n  \"strns\": \"\\xAF\",\n  \"Sub\": \"\\u22D0\",\n  \"sub\": \"\\u2282\",\n  \"subdot\": \"\\u2ABD\",\n  \"subE\": \"\\u2AC5\",\n  \"sube\": \"\\u2286\",\n  \"subedot\": \"\\u2AC3\",\n  \"submult\": \"\\u2AC1\",\n  \"subnE\": \"\\u2ACB\",\n  \"subne\": \"\\u228A\",\n  \"subplus\": \"\\u2ABF\",\n  \"subrarr\": \"\\u2979\",\n  \"Subset\": \"\\u22D0\",\n  \"subset\": \"\\u2282\",\n  \"subseteq\": \"\\u2286\",\n  \"subseteqq\": \"\\u2AC5\",\n  \"SubsetEqual\": \"\\u2286\",\n  \"subsetneq\": \"\\u228A\",\n  \"subsetneqq\": \"\\u2ACB\",\n  \"subsim\": \"\\u2AC7\",\n  \"subsub\": \"\\u2AD5\",\n  \"subsup\": \"\\u2AD3\",\n  \"succ\": \"\\u227B\",\n  \"succapprox\": \"\\u2AB8\",\n  \"succcurlyeq\": \"\\u227D\",\n  \"Succeeds\": \"\\u227B\",\n  \"SucceedsEqual\": \"\\u2AB0\",\n  \"SucceedsSlantEqual\": \"\\u227D\",\n  \"SucceedsTilde\": \"\\u227F\",\n  \"succeq\": \"\\u2AB0\",\n  \"succnapprox\": \"\\u2ABA\",\n  \"succneqq\": \"\\u2AB6\",\n  \"succnsim\": \"\\u22E9\",\n  \"succsim\": \"\\u227F\",\n  \"SuchThat\": \"\\u220B\",\n  \"Sum\": \"\\u2211\",\n  \"sum\": \"\\u2211\",\n  \"sung\": \"\\u266A\",\n  \"Sup\": \"\\u22D1\",\n  \"sup\": \"\\u2283\",\n  \"sup1\": \"\\xB9\",\n  \"sup2\": \"\\xB2\",\n  \"sup3\": \"\\xB3\",\n  \"supdot\": \"\\u2ABE\",\n  \"supdsub\": \"\\u2AD8\",\n  \"supE\": \"\\u2AC6\",\n  \"supe\": \"\\u2287\",\n  \"supedot\": \"\\u2AC4\",\n  \"Superset\": \"\\u2283\",\n  \"SupersetEqual\": \"\\u2287\",\n  \"suphsol\": \"\\u27C9\",\n  \"suphsub\": \"\\u2AD7\",\n  \"suplarr\": \"\\u297B\",\n  \"supmult\": \"\\u2AC2\",\n  \"supnE\": \"\\u2ACC\",\n  \"supne\": \"\\u228B\",\n  \"supplus\": \"\\u2AC0\",\n  \"Supset\": \"\\u22D1\",\n  \"supset\": \"\\u2283\",\n  \"supseteq\": \"\\u2287\",\n  \"supseteqq\": \"\\u2AC6\",\n  \"supsetneq\": \"\\u228B\",\n  \"supsetneqq\": \"\\u2ACC\",\n  \"supsim\": \"\\u2AC8\",\n  \"supsub\": \"\\u2AD4\",\n  \"supsup\": \"\\u2AD6\",\n  \"swarhk\": \"\\u2926\",\n  \"swArr\": \"\\u21D9\",\n  \"swarr\": \"\\u2199\",\n  \"swarrow\": \"\\u2199\",\n  \"swnwar\": \"\\u292A\",\n  \"szlig\": \"\\xDF\",\n  \"Tab\": \"\\t\",\n  \"target\": \"\\u2316\",\n  \"Tau\": \"\\u03A4\",\n  \"tau\": \"\\u03C4\",\n  \"tbrk\": \"\\u23B4\",\n  \"Tcaron\": \"\\u0164\",\n  \"tcaron\": \"\\u0165\",\n  \"Tcedil\": \"\\u0162\",\n  \"tcedil\": \"\\u0163\",\n  \"Tcy\": \"\\u0422\",\n  \"tcy\": \"\\u0442\",\n  \"tdot\": \"\\u20DB\",\n  \"telrec\": \"\\u2315\",\n  \"Tfr\": \"\\uD835\\uDD17\",\n  \"tfr\": \"\\uD835\\uDD31\",\n  \"there4\": \"\\u2234\",\n  \"Therefore\": \"\\u2234\",\n  \"therefore\": \"\\u2234\",\n  \"Theta\": \"\\u0398\",\n  \"theta\": \"\\u03B8\",\n  \"thetasym\": \"\\u03D1\",\n  \"thetav\": \"\\u03D1\",\n  \"thickapprox\": \"\\u2248\",\n  \"thicksim\": \"\\u223C\",\n  \"ThickSpace\": \"\\u205F\\u200A\",\n  \"thinsp\": \"\\u2009\",\n  \"ThinSpace\": \"\\u2009\",\n  \"thkap\": \"\\u2248\",\n  \"thksim\": \"\\u223C\",\n  \"THORN\": \"\\xDE\",\n  \"thorn\": \"\\xFE\",\n  \"Tilde\": \"\\u223C\",\n  \"tilde\": \"\\u02DC\",\n  \"TildeEqual\": \"\\u2243\",\n  \"TildeFullEqual\": \"\\u2245\",\n  \"TildeTilde\": \"\\u2248\",\n  \"times\": \"\\xD7\",\n  \"timesb\": \"\\u22A0\",\n  \"timesbar\": \"\\u2A31\",\n  \"timesd\": \"\\u2A30\",\n  \"tint\": \"\\u222D\",\n  \"toea\": \"\\u2928\",\n  \"top\": \"\\u22A4\",\n  \"topbot\": \"\\u2336\",\n  \"topcir\": \"\\u2AF1\",\n  \"Topf\": \"\\uD835\\uDD4B\",\n  \"topf\": \"\\uD835\\uDD65\",\n  \"topfork\": \"\\u2ADA\",\n  \"tosa\": \"\\u2929\",\n  \"tprime\": \"\\u2034\",\n  \"TRADE\": \"\\u2122\",\n  \"trade\": \"\\u2122\",\n  \"triangle\": \"\\u25B5\",\n  \"triangledown\": \"\\u25BF\",\n  \"triangleleft\": \"\\u25C3\",\n  \"trianglelefteq\": \"\\u22B4\",\n  \"triangleq\": \"\\u225C\",\n  \"triangleright\": \"\\u25B9\",\n  \"trianglerighteq\": \"\\u22B5\",\n  \"tridot\": \"\\u25EC\",\n  \"trie\": \"\\u225C\",\n  \"triminus\": \"\\u2A3A\",\n  \"TripleDot\": \"\\u20DB\",\n  \"triplus\": \"\\u2A39\",\n  \"trisb\": \"\\u29CD\",\n  \"tritime\": \"\\u2A3B\",\n  \"trpezium\": \"\\u23E2\",\n  \"Tscr\": \"\\uD835\\uDCAF\",\n  \"tscr\": \"\\uD835\\uDCC9\",\n  \"TScy\": \"\\u0426\",\n  \"tscy\": \"\\u0446\",\n  \"TSHcy\": \"\\u040B\",\n  \"tshcy\": \"\\u045B\",\n  \"Tstrok\": \"\\u0166\",\n  \"tstrok\": \"\\u0167\",\n  \"twixt\": \"\\u226C\",\n  \"twoheadleftarrow\": \"\\u219E\",\n  \"twoheadrightarrow\": \"\\u21A0\",\n  \"Uacute\": \"\\xDA\",\n  \"uacute\": \"\\xFA\",\n  \"Uarr\": \"\\u219F\",\n  \"uArr\": \"\\u21D1\",\n  \"uarr\": \"\\u2191\",\n  \"Uarrocir\": \"\\u2949\",\n  \"Ubrcy\": \"\\u040E\",\n  \"ubrcy\": \"\\u045E\",\n  \"Ubreve\": \"\\u016C\",\n  \"ubreve\": \"\\u016D\",\n  \"Ucirc\": \"\\xDB\",\n  \"ucirc\": \"\\xFB\",\n  \"Ucy\": \"\\u0423\",\n  \"ucy\": \"\\u0443\",\n  \"udarr\": \"\\u21C5\",\n  \"Udblac\": \"\\u0170\",\n  \"udblac\": \"\\u0171\",\n  \"udhar\": \"\\u296E\",\n  \"ufisht\": \"\\u297E\",\n  \"Ufr\": \"\\uD835\\uDD18\",\n  \"ufr\": \"\\uD835\\uDD32\",\n  \"Ugrave\": \"\\xD9\",\n  \"ugrave\": \"\\xF9\",\n  \"uHar\": \"\\u2963\",\n  \"uharl\": \"\\u21BF\",\n  \"uharr\": \"\\u21BE\",\n  \"uhblk\": \"\\u2580\",\n  \"ulcorn\": \"\\u231C\",\n  \"ulcorner\": \"\\u231C\",\n  \"ulcrop\": \"\\u230F\",\n  \"ultri\": \"\\u25F8\",\n  \"Umacr\": \"\\u016A\",\n  \"umacr\": \"\\u016B\",\n  \"uml\": \"\\xA8\",\n  \"UnderBar\": \"_\",\n  \"UnderBrace\": \"\\u23DF\",\n  \"UnderBracket\": \"\\u23B5\",\n  \"UnderParenthesis\": \"\\u23DD\",\n  \"Union\": \"\\u22C3\",\n  \"UnionPlus\": \"\\u228E\",\n  \"Uogon\": \"\\u0172\",\n  \"uogon\": \"\\u0173\",\n  \"Uopf\": \"\\uD835\\uDD4C\",\n  \"uopf\": \"\\uD835\\uDD66\",\n  \"UpArrow\": \"\\u2191\",\n  \"Uparrow\": \"\\u21D1\",\n  \"uparrow\": \"\\u2191\",\n  \"UpArrowBar\": \"\\u2912\",\n  \"UpArrowDownArrow\": \"\\u21C5\",\n  \"UpDownArrow\": \"\\u2195\",\n  \"Updownarrow\": \"\\u21D5\",\n  \"updownarrow\": \"\\u2195\",\n  \"UpEquilibrium\": \"\\u296E\",\n  \"upharpoonleft\": \"\\u21BF\",\n  \"upharpoonright\": \"\\u21BE\",\n  \"uplus\": \"\\u228E\",\n  \"UpperLeftArrow\": \"\\u2196\",\n  \"UpperRightArrow\": \"\\u2197\",\n  \"Upsi\": \"\\u03D2\",\n  \"upsi\": \"\\u03C5\",\n  \"upsih\": \"\\u03D2\",\n  \"Upsilon\": \"\\u03A5\",\n  \"upsilon\": \"\\u03C5\",\n  \"UpTee\": \"\\u22A5\",\n  \"UpTeeArrow\": \"\\u21A5\",\n  \"upuparrows\": \"\\u21C8\",\n  \"urcorn\": \"\\u231D\",\n  \"urcorner\": \"\\u231D\",\n  \"urcrop\": \"\\u230E\",\n  \"Uring\": \"\\u016E\",\n  \"uring\": \"\\u016F\",\n  \"urtri\": \"\\u25F9\",\n  \"Uscr\": \"\\uD835\\uDCB0\",\n  \"uscr\": \"\\uD835\\uDCCA\",\n  \"utdot\": \"\\u22F0\",\n  \"Utilde\": \"\\u0168\",\n  \"utilde\": \"\\u0169\",\n  \"utri\": \"\\u25B5\",\n  \"utrif\": \"\\u25B4\",\n  \"uuarr\": \"\\u21C8\",\n  \"Uuml\": \"\\xDC\",\n  \"uuml\": \"\\xFC\",\n  \"uwangle\": \"\\u29A7\",\n  \"vangrt\": \"\\u299C\",\n  \"varepsilon\": \"\\u03F5\",\n  \"varkappa\": \"\\u03F0\",\n  \"varnothing\": \"\\u2205\",\n  \"varphi\": \"\\u03D5\",\n  \"varpi\": \"\\u03D6\",\n  \"varpropto\": \"\\u221D\",\n  \"vArr\": \"\\u21D5\",\n  \"varr\": \"\\u2195\",\n  \"varrho\": \"\\u03F1\",\n  \"varsigma\": \"\\u03C2\",\n  \"varsubsetneq\": \"\\u228A\\uFE00\",\n  \"varsubsetneqq\": \"\\u2ACB\\uFE00\",\n  \"varsupsetneq\": \"\\u228B\\uFE00\",\n  \"varsupsetneqq\": \"\\u2ACC\\uFE00\",\n  \"vartheta\": \"\\u03D1\",\n  \"vartriangleleft\": \"\\u22B2\",\n  \"vartriangleright\": \"\\u22B3\",\n  \"Vbar\": \"\\u2AEB\",\n  \"vBar\": \"\\u2AE8\",\n  \"vBarv\": \"\\u2AE9\",\n  \"Vcy\": \"\\u0412\",\n  \"vcy\": \"\\u0432\",\n  \"VDash\": \"\\u22AB\",\n  \"Vdash\": \"\\u22A9\",\n  \"vDash\": \"\\u22A8\",\n  \"vdash\": \"\\u22A2\",\n  \"Vdashl\": \"\\u2AE6\",\n  \"Vee\": \"\\u22C1\",\n  \"vee\": \"\\u2228\",\n  \"veebar\": \"\\u22BB\",\n  \"veeeq\": \"\\u225A\",\n  \"vellip\": \"\\u22EE\",\n  \"Verbar\": \"\\u2016\",\n  \"verbar\": \"|\",\n  \"Vert\": \"\\u2016\",\n  \"vert\": \"|\",\n  \"VerticalBar\": \"\\u2223\",\n  \"VerticalLine\": \"|\",\n  \"VerticalSeparator\": \"\\u2758\",\n  \"VerticalTilde\": \"\\u2240\",\n  \"VeryThinSpace\": \"\\u200A\",\n  \"Vfr\": \"\\uD835\\uDD19\",\n  \"vfr\": \"\\uD835\\uDD33\",\n  \"vltri\": \"\\u22B2\",\n  \"vnsub\": \"\\u2282\\u20D2\",\n  \"vnsup\": \"\\u2283\\u20D2\",\n  \"Vopf\": \"\\uD835\\uDD4D\",\n  \"vopf\": \"\\uD835\\uDD67\",\n  \"vprop\": \"\\u221D\",\n  \"vrtri\": \"\\u22B3\",\n  \"Vscr\": \"\\uD835\\uDCB1\",\n  \"vscr\": \"\\uD835\\uDCCB\",\n  \"vsubnE\": \"\\u2ACB\\uFE00\",\n  \"vsubne\": \"\\u228A\\uFE00\",\n  \"vsupnE\": \"\\u2ACC\\uFE00\",\n  \"vsupne\": \"\\u228B\\uFE00\",\n  \"Vvdash\": \"\\u22AA\",\n  \"vzigzag\": \"\\u299A\",\n  \"Wcirc\": \"\\u0174\",\n  \"wcirc\": \"\\u0175\",\n  \"wedbar\": \"\\u2A5F\",\n  \"Wedge\": \"\\u22C0\",\n  \"wedge\": \"\\u2227\",\n  \"wedgeq\": \"\\u2259\",\n  \"weierp\": \"\\u2118\",\n  \"Wfr\": \"\\uD835\\uDD1A\",\n  \"wfr\": \"\\uD835\\uDD34\",\n  \"Wopf\": \"\\uD835\\uDD4E\",\n  \"wopf\": \"\\uD835\\uDD68\",\n  \"wp\": \"\\u2118\",\n  \"wr\": \"\\u2240\",\n  \"wreath\": \"\\u2240\",\n  \"Wscr\": \"\\uD835\\uDCB2\",\n  \"wscr\": \"\\uD835\\uDCCC\",\n  \"xcap\": \"\\u22C2\",\n  \"xcirc\": \"\\u25EF\",\n  \"xcup\": \"\\u22C3\",\n  \"xdtri\": \"\\u25BD\",\n  \"Xfr\": \"\\uD835\\uDD1B\",\n  \"xfr\": \"\\uD835\\uDD35\",\n  \"xhArr\": \"\\u27FA\",\n  \"xharr\": \"\\u27F7\",\n  \"Xi\": \"\\u039E\",\n  \"xi\": \"\\u03BE\",\n  \"xlArr\": \"\\u27F8\",\n  \"xlarr\": \"\\u27F5\",\n  \"xmap\": \"\\u27FC\",\n  \"xnis\": \"\\u22FB\",\n  \"xodot\": \"\\u2A00\",\n  \"Xopf\": \"\\uD835\\uDD4F\",\n  \"xopf\": \"\\uD835\\uDD69\",\n  \"xoplus\": \"\\u2A01\",\n  \"xotime\": \"\\u2A02\",\n  \"xrArr\": \"\\u27F9\",\n  \"xrarr\": \"\\u27F6\",\n  \"Xscr\": \"\\uD835\\uDCB3\",\n  \"xscr\": \"\\uD835\\uDCCD\",\n  \"xsqcup\": \"\\u2A06\",\n  \"xuplus\": \"\\u2A04\",\n  \"xutri\": \"\\u25B3\",\n  \"xvee\": \"\\u22C1\",\n  \"xwedge\": \"\\u22C0\",\n  \"Yacute\": \"\\xDD\",\n  \"yacute\": \"\\xFD\",\n  \"YAcy\": \"\\u042F\",\n  \"yacy\": \"\\u044F\",\n  \"Ycirc\": \"\\u0176\",\n  \"ycirc\": \"\\u0177\",\n  \"Ycy\": \"\\u042B\",\n  \"ycy\": \"\\u044B\",\n  \"yen\": \"\\xA5\",\n  \"Yfr\": \"\\uD835\\uDD1C\",\n  \"yfr\": \"\\uD835\\uDD36\",\n  \"YIcy\": \"\\u0407\",\n  \"yicy\": \"\\u0457\",\n  \"Yopf\": \"\\uD835\\uDD50\",\n  \"yopf\": \"\\uD835\\uDD6A\",\n  \"Yscr\": \"\\uD835\\uDCB4\",\n  \"yscr\": \"\\uD835\\uDCCE\",\n  \"YUcy\": \"\\u042E\",\n  \"yucy\": \"\\u044E\",\n  \"Yuml\": \"\\u0178\",\n  \"yuml\": \"\\xFF\",\n  \"Zacute\": \"\\u0179\",\n  \"zacute\": \"\\u017A\",\n  \"Zcaron\": \"\\u017D\",\n  \"zcaron\": \"\\u017E\",\n  \"Zcy\": \"\\u0417\",\n  \"zcy\": \"\\u0437\",\n  \"Zdot\": \"\\u017B\",\n  \"zdot\": \"\\u017C\",\n  \"zeetrf\": \"\\u2128\",\n  \"ZeroWidthSpace\": \"\\u200B\",\n  \"Zeta\": \"\\u0396\",\n  \"zeta\": \"\\u03B6\",\n  \"Zfr\": \"\\u2128\",\n  \"zfr\": \"\\uD835\\uDD37\",\n  \"ZHcy\": \"\\u0416\",\n  \"zhcy\": \"\\u0436\",\n  \"zigrarr\": \"\\u21DD\",\n  \"Zopf\": \"\\u2124\",\n  \"zopf\": \"\\uD835\\uDD6B\",\n  \"Zscr\": \"\\uD835\\uDCB5\",\n  \"zscr\": \"\\uD835\\uDCCF\",\n  \"zwj\": \"\\u200D\",\n  \"zwnj\": \"\\u200C\"\n};","'use strict';\n\nvar normalizeLink = require('./normalize_link');\n\nvar unescapeMd = require('../common/utils').unescapeMd;\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\n\nmodule.exports = function parseLinkDestination(state, pos) {\n  var code,\n      level,\n      link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = state.src.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return false;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n\n            if (!state.parser.validateLink(link)) {\n              return false;\n            }\n\n            state.pos = pos + 1;\n            state.linkContent = link;\n            return true;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return false;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control chars\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 1) {\n          break;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        level--;\n\n        if (level < 0) {\n          break;\n        }\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return false;\n  }\n\n  link = unescapeMd(state.src.slice(start, pos));\n\n  if (!state.parser.validateLink(link)) {\n    return false;\n  }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n};","'use strict';\n\nvar replaceEntities = require('../common/utils').replaceEntities;\n\nmodule.exports = function normalizeLink(url) {\n  var normalized = replaceEntities(url); // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n\n  return encodeURI(normalized);\n};","'use strict';\n\nvar unescapeMd = require('../common/utils').unescapeMd;\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\n\nmodule.exports = function parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return false;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n};","'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nmodule.exports = function normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n};","'use strict';\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _remarkable = require('remarkable');\n\nvar _remarkable2 = _interopRequireDefault(_remarkable);\n\nvar Remarkable = function (_React$Component) {\n  _inherits(Remarkable, _React$Component);\n\n  function Remarkable() {\n    _classCallCheck(this, Remarkable);\n\n    _get(Object.getPrototypeOf(Remarkable.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(Remarkable, [{\n    key: 'render',\n    value: function render() {\n      var Container = this.props.container;\n      return _react2['default'].createElement(Container, null, this.content());\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextProps.options !== this.props.options) {\n        this.md = new _remarkable2['default'](nextProps.options);\n      }\n    }\n  }, {\n    key: 'content',\n    value: function content() {\n      var _this = this;\n\n      if (this.props.source) {\n        return _react2['default'].createElement('span', {\n          dangerouslySetInnerHTML: {\n            __html: this.renderMarkdown(this.props.source)\n          }\n        });\n      } else {\n        return _react2['default'].Children.map(this.props.children, function (child) {\n          if (typeof child === 'string') {\n            return _react2['default'].createElement('span', {\n              dangerouslySetInnerHTML: {\n                __html: _this.renderMarkdown(child)\n              }\n            });\n          } else {\n            return child;\n          }\n        });\n      }\n    }\n  }, {\n    key: 'renderMarkdown',\n    value: function renderMarkdown(source) {\n      if (!this.md) {\n        this.md = new _remarkable2['default'](this.props.options);\n      }\n\n      return this.md.render(source);\n    }\n  }]);\n\n  return Remarkable;\n}(_react2['default'].Component);\n\nRemarkable.defaultProps = {\n  container: 'div',\n  options: {}\n};\nexports['default'] = Remarkable;\nmodule.exports = exports['default'];","'use strict';\n\nmodule.exports = require('./lib/');","'use strict';\n/**\n * Local dependencies\n */\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nvar assign = require('./common/utils').assign;\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar Ruler = require('./ruler');\n/**\n * Preset configs\n */\n\n\nvar config = {\n  'default': require('./configs/default'),\n  'full': require('./configs/full'),\n  'commonmark': require('./configs/commonmark')\n};\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  this.inline = new ParserInline();\n  this.block = new ParserBlock();\n  this.core = new ParserCore();\n  this.renderer = new Renderer();\n  this.ruler = new Ruler();\n  this.options = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) {\n    throw new Error('Wrong `remarkable` preset, check name/content');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n/**\n * Expose `Remarkable`\n */\n\n\nmodule.exports = Remarkable;\n/**\n * Expose `utils`, Useful helper functions for custom\n * rendering.\n */\n\nmodule.exports.utils = require('./common/utils');","'use strict';\n/**\n * Local dependencies\n */\n\nvar utils = require('./common/utils');\n\nvar rules = require('./rules');\n/**\n * Expose `Renderer`\n */\n\n\nmodule.exports = Renderer;\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = utils.assign({}, rules); // exported helper, for custom rules only\n\n  this.getBreak = rules.getBreak;\n}\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length,\n      i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length,\n      i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n\n  return result;\n};","'use strict';\n/**\n * Local dependencies\n */\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar has = require('./common/utils').has;\n\nvar unescapeMd = require('./common/utils').unescapeMd;\n\nvar replaceEntities = require('./common/utils').replaceEntities;\n\nvar escapeHtml = require('./common/utils').escapeHtml;\n/**\n * Renderer rules cache\n */\n\n\nvar rules = {};\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function (tokens, idx\n/*, options, env */\n) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n/**\n * Code\n */\n\n\nrules.code = function (tokens, idx\n/*, options, env */\n) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n/**\n * Fenced code blocks\n */\n\n\nrules.fence = function (tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '',\n      fences,\n      fenceName;\n  var highlighted;\n\n  if (token.params) {\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [token.content].concat(fences)) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>' + highlighted + '</code></pre>' + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n/**\n * Headings\n */\n\nrules.heading_open = function (tokens, idx\n/*, options, env */\n) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\n\nrules.heading_close = function (tokens, idx\n/*, options, env */\n) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n/**\n * Horizontal rules\n */\n\n\nrules.hr = function (tokens, idx, options\n/*, env */\n) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n/**\n * Bullets\n */\n\n\nrules.bullet_list_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<ul>\\n';\n};\n\nrules.bullet_list_close = function (tokens, idx\n/*, options, env */\n) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n/**\n * List items\n */\n\n\nrules.list_item_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<li>';\n};\n\nrules.list_item_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</li>\\n';\n};\n/**\n * Ordered list items\n */\n\n\nrules.ordered_list_open = function (tokens, idx\n/*, options, env */\n) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\n\nrules.ordered_list_close = function (tokens, idx\n/*, options, env */\n) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n/**\n * Paragraphs\n */\n\n\nrules.paragraph_open = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].tight ? '' : '<p>';\n};\n\nrules.paragraph_close = function (tokens, idx\n/*, options, env */\n) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n/**\n * Links\n */\n\n\nrules.link_open = function (tokens, idx, options\n/* env */\n) {\n  var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n  var target = options.linkTarget ? ' target=\"' + options.linkTarget + '\"' : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\n\nrules.link_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</a>';\n};\n/**\n * Images\n */\n\n\nrules.image = function (tokens, idx, options\n/*, env */\n) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n/**\n * Tables\n */\n\n\nrules.table_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<table>\\n';\n};\n\nrules.table_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</table>\\n';\n};\n\nrules.thead_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<thead>\\n';\n};\n\nrules.thead_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</thead>\\n';\n};\n\nrules.tbody_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<tbody>\\n';\n};\n\nrules.tbody_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</tbody>\\n';\n};\n\nrules.tr_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<tr>';\n};\n\nrules.tr_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</tr>\\n';\n};\n\nrules.th_open = function (tokens, idx\n/*, options, env */\n) {\n  var token = tokens[idx];\n  return '<th' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n};\n\nrules.th_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</th>';\n};\n\nrules.td_open = function (tokens, idx\n/*, options, env */\n) {\n  var token = tokens[idx];\n  return '<td' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n};\n\nrules.td_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</td>';\n};\n/**\n * Bold\n */\n\n\nrules.strong_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<strong>';\n};\n\nrules.strong_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</strong>';\n};\n/**\n * Italicize\n */\n\n\nrules.em_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<em>';\n};\n\nrules.em_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</em>';\n};\n/**\n * Strikethrough\n */\n\n\nrules.del_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<del>';\n};\n\nrules.del_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</del>';\n};\n/**\n * Insert\n */\n\n\nrules.ins_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<ins>';\n};\n\nrules.ins_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</ins>';\n};\n/**\n * Highlight\n */\n\n\nrules.mark_open = function ()\n/* tokens, idx, options, env */\n{\n  return '<mark>';\n};\n\nrules.mark_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</mark>';\n};\n/**\n * Super- and sub-script\n */\n\n\nrules.sub = function (tokens, idx\n/*, options, env */\n) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\n\nrules.sup = function (tokens, idx\n/*, options, env */\n) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n/**\n * Breaks\n */\n\n\nrules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\nrules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n/**\n * Text\n */\n\n\nrules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n/**\n * Content\n */\n\n\nrules.htmlblock = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\nrules.htmltag = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * Abbreviations, initialism\n */\n\n\nrules.abbr_open = function (tokens, idx\n/*, options, env */\n) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\n\nrules.abbr_close = function ()\n/* tokens, idx, options, env */\n{\n  return '</abbr>';\n};\n/**\n * Footnotes\n */\n\n\nrules.footnote_ref = function (tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\n\nrules.footnote_block_open = function (tokens, idx, options) {\n  var hr = options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\n\nrules.footnote_block_close = function () {\n  return '</ol>\\n</section>\\n';\n};\n\nrules.footnote_open = function (tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\n\nrules.footnote_close = function () {\n  return '</li>\\n';\n};\n\nrules.footnote_anchor = function (tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n};\n/**\n * Definition lists\n */\n\n\nrules.dl_open = function () {\n  return '<dl>\\n';\n};\n\nrules.dt_open = function () {\n  return '<dt>';\n};\n\nrules.dd_open = function () {\n  return '<dd>';\n};\n\nrules.dl_close = function () {\n  return '</dl>\\n';\n};\n\nrules.dt_close = function () {\n  return '</dt>\\n';\n};\n\nrules.dd_close = function () {\n  return '</dd>\\n';\n};\n/**\n * Helper functions\n */\n\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n\n  if (tokens[idx].type === 'paragraph_open' && tokens[idx].tight && tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0 && tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight) {\n    return nextToken(tokens, idx + 2);\n  }\n\n  return idx;\n}\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n\n  return '\\n';\n};\n/**\n * Expose `rules`\n */\n\n\nmodule.exports = rules;","'use strict';\n/**\n * Local dependencies\n */\n\nvar Ruler = require('./ruler');\n/**\n * Core parser `rules`\n */\n\n\nvar _rules = [['block', require('./rules_core/block')], ['abbr', require('./rules_core/abbr')], ['references', require('./rules_core/references')], ['inline', require('./rules_core/inline')], ['footnote_tail', require('./rules_core/footnote_tail')], ['abbr2', require('./rules_core/abbr2')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], ['linkify', require('./rules_core/linkify')]];\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n/**\n * Expose `Core`\n */\n\n\nmodule.exports = Core;","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nmodule.exports = function block(state) {\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [0, 1],\n      children: []\n    });\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n};","// Parse abbreviation definitions, i.e. `*[abbr]: description`\n//\n'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar StateInline = require('../rules_inline/state_inline');\n\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A\n  /* * */\n  ) {\n      return -1;\n    }\n\n  if (str.charCodeAt(1) !== 0x5B\n  /* [ */\n  ) {\n      return -1;\n    }\n\n  if (str.indexOf(']:') === -1) {\n    return -1;\n  }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return -1;\n    }\n\n  max = state.posMax; // abbr title is always one line, so looking for ending \"\\n\" here\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) {\n      break;\n    }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n\n  if (title.length === 0) {\n    return -1;\n  }\n\n  if (!env.abbreviations) {\n    env.abbreviations = {};\n  } // prepend ':' to avoid conflict with Object.prototype members\n\n\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nmodule.exports = function abbr(state) {\n  var tokens = state.tokens,\n      i,\n      l,\n      content,\n      pos;\n\n  if (state.inlineMode) {\n    return;\n  } // Parse inlines\n\n\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' && tokens[i].type === 'inline' && tokens[i + 1].type === 'paragraph_close') {\n      content = tokens[i].content;\n\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n\n        if (pos < 0) {\n          break;\n        }\n\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n};","'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar StateInline = require('../rules_inline/state_inline');\n\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\nvar parseLinkDestination = require('../helpers/parse_link_destination');\n\nvar parseLinkTitle = require('../helpers/parse_link_title');\n\nvar normalizeReference = require('../helpers/normalize_reference');\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B\n  /* [ */\n  ) {\n      return -1;\n    }\n\n  if (str.indexOf(']:') === -1) {\n    return -1;\n  }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return -1;\n    }\n\n  max = state.posMax; // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n\n    if (code !== 0x20 && code !== 0x0A) {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  if (!parseLinkDestination(state, pos)) {\n    return -1;\n  }\n\n  href = state.linkContent;\n  pos = state.pos; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n\n    if (code !== 0x20 && code !== 0x0A) {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  } // ensure that the end of the line is empty\n\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x20\n  /* space */\n  ) {\n    pos++;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) {\n    return -1;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  return pos;\n}\n\nmodule.exports = function references(state) {\n  var tokens = state.tokens,\n      i,\n      l,\n      content,\n      pos;\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  } // Scan definitions in paragraph inlines\n\n\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' && tokens[i - 1].type === 'paragraph_open' && tokens[i + 1].type === 'paragraph_close') {\n      content = tokens[i].content;\n\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n\n        if (pos < 0) {\n          break;\n        }\n\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n};","'use strict';\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nmodule.exports = function footnote_block(state) {\n  var i,\n      l,\n      j,\n      t,\n      lastParagraph,\n      list,\n      tokens,\n      current,\n      currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) {\n    return;\n  }\n\n  state.tokens = state.tokens.filter(function (tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false; // prepend ':' to avoid conflict with Object.prototype members\n\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n\n    if (insideRef) {\n      current.push(tok);\n    }\n\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) {\n    return;\n  }\n\n  list = state.env.footnotes.list;\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n};","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-'; // from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\n\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\nmodule.exports = function abbr2(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      text,\n      nodes,\n      pos,\n      level,\n      reg,\n      m,\n      regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) {\n    return;\n  }\n\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n      return x.substr(1);\n    }).sort(function (a, b) {\n      return b.length - a.length;\n    }).map(regEscape).join('|') + ')' + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') {\n      continue;\n    }\n\n    tokens = blockTokens[j].children; // We scan from the end, to keep position when new tags added.\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n\n      if (token.type !== 'text') {\n        continue;\n      }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while (m = reg.exec(text)) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) {\n        continue;\n      }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      } // replace current node\n\n\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n};","// Simple typographical replacements\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) {\n    return str;\n  }\n\n  return str.replace(SCOPED_ABBR_RE, function (match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\nmodule.exports = function replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n\n      if (token.type === 'text') {\n        text = token.content;\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text.replace(/\\+-/g, '±') // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n          .replace(/(^|[^-])---([^-]|$)/mg, \"$1\\u2014$2\") // en-dash\n          .replace(/(^|\\s)--(\\s|$)/mg, \"$1\\u2013$2\").replace(/(^|[^-\\s])--([^-\\s]|$)/mg, \"$1\\u2013$2\");\n        }\n\n        token.content = text;\n      }\n    }\n  }\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '’'; // This function returns true if the character at `pos`\n// could be inside a word.\n\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) {\n    return false;\n  }\n\n  return !PUNCT_RE.test(str[pos]);\n}\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item, canOpen, canClose, j, isSingle, blkIdx, tokens, stack;\n\n  if (!state.options.typographer) {\n    return;\n  }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) {\n        continue;\n      }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) {\n          break;\n        }\n      }\n\n      stack.length = j + 1;\n      text = token.content;\n      pos = 0;\n      max = text.length;\n      /*eslint no-labels:0,block-scoped-var:0*/\n\n      OUTER: while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n\n        if (!t) {\n          break;\n        }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = t[0] === \"'\";\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n\n            if (stack[j].level < thisLevel) {\n              break;\n            }\n\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `inline.validateLink()` to http/https/ftp\n//\n'use strict';\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.string.link\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar Autolinker = require('autolinker');\n\nvar LINK_SCAN_RE = /www|@|\\:\\/\\//;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n} // Stupid fabric to avoid singletons, for thread safety.\n// Required for engines like Nashorn.\n//\n\n\nfunction createLinkifier() {\n  var links = [];\n  var autolinker = new Autolinker({\n    stripPrefix: false,\n    url: true,\n    email: true,\n    twitter: false,\n    replaceFn: function replaceFn(linker, match) {\n      // Only collect matched strings but don't change anything.\n      switch (match.getType()) {\n        /*eslint default-case:0*/\n        case 'url':\n          links.push({\n            text: match.matchedText,\n            url: match.getUrl()\n          });\n          break;\n\n        case 'email':\n          links.push({\n            text: match.matchedText,\n            // normalize email protocol\n            url: 'mailto:' + match.getEmail().replace(/^mailto:/i, '')\n          });\n          break;\n      }\n\n      return false;\n    }\n  });\n  return {\n    links: links,\n    autolinker: autolinker\n  };\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      text,\n      nodes,\n      ln,\n      pos,\n      level,\n      htmlLinkLevel,\n      blockTokens = state.tokens,\n      linkifier = null,\n      links,\n      autolinker;\n\n  if (!state.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]; // Skip content of markdown links\n\n      if (token.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== token.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (token.type === 'htmltag') {\n        if (isLinkOpen(token.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(token.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (token.type === 'text' && LINK_SCAN_RE.test(token.content)) {\n        // Init linkifier in lazy manner, only if required.\n        if (!linkifier) {\n          linkifier = createLinkifier();\n          links = linkifier.links;\n          autolinker = linkifier.autolinker;\n        }\n\n        text = token.content;\n        links.length = 0;\n        autolinker.link(text);\n\n        if (!links.length) {\n          continue;\n        } // Now split string to nodes\n\n\n        nodes = [];\n        level = token.level;\n\n        for (ln = 0; ln < links.length; ln++) {\n          if (!state.inline.validateLink(links[ln].url)) {\n            continue;\n          }\n\n          pos = text.indexOf(links[ln].text);\n\n          if (pos) {\n            level = level;\n            nodes.push({\n              type: 'text',\n              content: text.slice(0, pos),\n              level: level\n            });\n          }\n\n          nodes.push({\n            type: 'link_open',\n            href: links[ln].url,\n            title: '',\n            level: level++\n          });\n          nodes.push({\n            type: 'text',\n            content: links[ln].text,\n            level: level\n          });\n          nodes.push({\n            type: 'link_close',\n            level: --level\n          });\n          text = text.slice(pos + links[ln].text.length);\n        }\n\n        if (text.length) {\n          nodes.push({\n            type: 'text',\n            content: text,\n            level: level\n          });\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n      }\n    }\n  }\n};","require(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.string.link\");\n\n/*!\n * Autolinker.js\n * 0.28.1\n *\n * Copyright(c) 2016 Gregory Jacobs <greg@greg-jacobs.com>\n * MIT License\n *\n * https://github.com/gregjacobs/Autolinker.js\n */\n;\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Autolinker = factory();\n  }\n})(this, function () {\n  /**\n   * @class Autolinker\n   * @extends Object\n   *\n   * Utility class used to process a given string of text, and wrap the matches in\n   * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n   *\n   * Any of the configuration options may be provided in an Object (map) provided\n   * to the Autolinker constructor, which will configure how the {@link #link link()}\n   * method will process the links.\n   *\n   * For example:\n   *\n   *     var autolinker = new Autolinker( {\n   *         newWindow : false,\n   *         truncate  : 30\n   *     } );\n   *\n   *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n   *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n   *\n   *\n   * The {@link #static-link static link()} method may also be used to inline\n   * options into a single call, which may be more convenient for one-off uses.\n   * For example:\n   *\n   *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n   *         newWindow : false,\n   *         truncate  : 30\n   *     } );\n   *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n   *\n   *\n   * ## Custom Replacements of Links\n   *\n   * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n   * may be provided to fully customize the output of Autolinker. This function is\n   * called once for each URL/Email/Phone#/Twitter Handle/Hashtag match that is\n   * encountered.\n   *\n   * For example:\n   *\n   *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Twitter Handles, and Hashtags\n   *\n   *     var linkedText = Autolinker.link( input, {\n   *         replaceFn : function( autolinker, match ) {\n   *             console.log( \"href = \", match.getAnchorHref() );\n   *             console.log( \"text = \", match.getAnchorText() );\n   *\n   *             switch( match.getType() ) {\n   *                 case 'url' :\n   *                     console.log( \"url: \", match.getUrl() );\n   *\n   *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n   *                         var tag = autolinker.getTagBuilder().build( match );  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n   *                         tag.setAttr( 'rel', 'nofollow' );\n   *                         tag.addClass( 'external-link' );\n   *\n   *                         return tag;\n   *\n   *                     } else {\n   *                         return true;  // let Autolinker perform its normal anchor tag replacement\n   *                     }\n   *\n   *                 case 'email' :\n   *                     var email = match.getEmail();\n   *                     console.log( \"email: \", email );\n   *\n   *                     if( email === \"my@own.address\" ) {\n   *                         return false;  // don't auto-link this particular email address; leave as-is\n   *                     } else {\n   *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n   *                     }\n   *\n   *                 case 'phone' :\n   *                     var phoneNumber = match.getPhoneNumber();\n   *                     console.log( phoneNumber );\n   *\n   *                     return '<a href=\"http://newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n   *\n   *                 case 'twitter' :\n   *                     var twitterHandle = match.getTwitterHandle();\n   *                     console.log( twitterHandle );\n   *\n   *                     return '<a href=\"http://newplace.to.link.twitter.handles.to/\">' + twitterHandle + '</a>';\n   *\n   *                 case 'hashtag' :\n   *                     var hashtag = match.getHashtag();\n   *                     console.log( hashtag );\n   *\n   *                     return '<a href=\"http://newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n   *             }\n   *         }\n   *     } );\n   *\n   *\n   * The function may return the following values:\n   *\n   * - `true` (Boolean): Allow Autolinker to replace the match as it normally\n   *   would.\n   * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n   * - Any String: If a string is returned from the function, the string will be\n   *   used directly as the replacement HTML for the match.\n   * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify\n   *   an HTML tag before writing out its HTML text.\n   *\n   * @constructor\n   * @param {Object} [cfg] The configuration options for the Autolinker instance,\n   *   specified in an Object (map).\n   */\n  var Autolinker = function Autolinker(cfg) {\n    cfg = cfg || {};\n    this.version = Autolinker.version;\n    this.urls = this.normalizeUrlsCfg(cfg.urls);\n    this.email = typeof cfg.email === 'boolean' ? cfg.email : true;\n    this.twitter = typeof cfg.twitter === 'boolean' ? cfg.twitter : true;\n    this.phone = typeof cfg.phone === 'boolean' ? cfg.phone : true;\n    this.hashtag = cfg.hashtag || false;\n    this.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : true;\n    this.stripPrefix = typeof cfg.stripPrefix === 'boolean' ? cfg.stripPrefix : true; // Validate the value of the `hashtag` cfg.\n\n    var hashtag = this.hashtag;\n\n    if (hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram') {\n      throw new Error(\"invalid `hashtag` cfg - see docs\");\n    }\n\n    this.truncate = this.normalizeTruncateCfg(cfg.truncate);\n    this.className = cfg.className || '';\n    this.replaceFn = cfg.replaceFn || null;\n    this.htmlParser = null;\n    this.matchers = null;\n    this.tagBuilder = null;\n  };\n  /**\n   * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n   * and Hashtags found in the given chunk of HTML. Does not link URLs found\n   * within HTML tags.\n   *\n   * For instance, if given the text: `You should go to http://www.yahoo.com`,\n   * then the result will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n   *\n   * Example:\n   *\n   *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n   *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\"\n   *\n   * @static\n   * @param {String} textOrHtml The HTML or text to find matches within (depending\n   *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #twitter},\n   *   and {@link #hashtag} options are enabled).\n   * @param {Object} [options] Any of the configuration options for the Autolinker\n   *   class, specified in an Object (map). See the class description for an\n   *   example call.\n   * @return {String} The HTML text, with matches automatically linked.\n   */\n\n\n  Autolinker.link = function (textOrHtml, options) {\n    var autolinker = new Autolinker(options);\n    return autolinker.link(textOrHtml);\n  };\n  /**\n   * @static\n   * @property {String} version (readonly)\n   *\n   * The Autolinker version number in the form major.minor.patch\n   *\n   * Ex: 0.25.1\n   */\n\n\n  Autolinker.version = '0.28.1';\n  Autolinker.prototype = {\n    constructor: Autolinker,\n    // fix constructor property\n\n    /**\n     * @cfg {Boolean/Object} [urls=true]\n     *\n     * `true` if URLs should be automatically linked, `false` if they should not\n     * be.\n     *\n     * This option also accepts an Object form with 3 properties, to allow for\n     * more customization of what exactly gets linked. All default to `true`:\n     *\n     * @param {Boolean} schemeMatches `true` to match URLs found prefixed with a\n     *   scheme, i.e. `http://google.com`, or `other+scheme://google.com`,\n     *   `false` to prevent these types of matches.\n     * @param {Boolean} wwwMatches `true` to match urls found prefixed with\n     *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of\n     *   matches. Note that if the URL had a prefixed scheme, and\n     *   `schemeMatches` is true, it will still be linked.\n     * @param {Boolean} tldMatches `true` to match URLs with known top level\n     *   domains (.com, .net, etc.) that are not prefixed with a scheme or\n     *   `'www.'`. This option attempts to match anything that looks like a URL\n     *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`\n     *   to prevent these types of matches.\n     */\n\n    /**\n     * @cfg {Boolean} [email=true]\n     *\n     * `true` if email addresses should be automatically linked, `false` if they\n     * should not be.\n     */\n\n    /**\n     * @cfg {Boolean} [twitter=true]\n     *\n     * `true` if Twitter handles (\"@example\") should be automatically linked,\n     * `false` if they should not be.\n     */\n\n    /**\n     * @cfg {Boolean} [phone=true]\n     *\n     * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,\n     * `false` if they should not be.\n     */\n\n    /**\n     * @cfg {Boolean/String} [hashtag=false]\n     *\n     * A string for the service name to have hashtags (ex: \"#myHashtag\")\n     * auto-linked to. The currently-supported values are:\n     *\n     * - 'twitter'\n     * - 'facebook'\n     * - 'instagram'\n     *\n     * Pass `false` to skip auto-linking of hashtags.\n     */\n\n    /**\n     * @cfg {Boolean} [newWindow=true]\n     *\n     * `true` if the links should open in a new window, `false` otherwise.\n     */\n\n    /**\n     * @cfg {Boolean} [stripPrefix=true]\n     *\n     * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped\n     * from the beginning of URL links' text, `false` otherwise.\n     */\n\n    /**\n     * @cfg {Number/Object} [truncate=0]\n     *\n     * ## Number Form\n     *\n     * A number for how many characters matched text should be truncated to\n     * inside the text of a link. If the matched text is over this number of\n     * characters, it will be truncated to this length by adding a two period\n     * ellipsis ('..') to the end of the string.\n     *\n     * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'\n     * truncated to 25 characters might look something like this:\n     * 'yahoo.com/some/long/pat..'\n     *\n     * Example Usage:\n     *\n     *     truncate: 25\n     *\n     *\n     *  Defaults to `0` for \"no truncation.\"\n     *\n     *\n     * ## Object Form\n     *\n     * An Object may also be provided with two properties: `length` (Number) and\n     * `location` (String). `location` may be one of the following: 'end'\n     * (default), 'middle', or 'smart'.\n     *\n     * Example Usage:\n     *\n     *     truncate: { length: 25, location: 'middle' }\n     *\n     * @cfg {Number} [truncate.length=0] How many characters to allow before\n     *   truncation will occur. Defaults to `0` for \"no truncation.\"\n     * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]\n     *\n     * - 'end' (default): will truncate up to the number of characters, and then\n     *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'\n     * - 'middle': will truncate and add the ellipsis in the middle. Ex:\n     *   'yahoo.com/s..th/to/a/file'\n     * - 'smart': for URLs where the algorithm attempts to strip out unnecessary\n     *   parts first (such as the 'www.', then URL scheme, hash, etc.),\n     *   attempting to make the URL human-readable before looking for a good\n     *   point to insert the ellipsis if it is still too long. Ex:\n     *   'yahoo.com/some..to/a/file'. For more details, see\n     *   {@link Autolinker.truncate.TruncateSmart}.\n     */\n\n    /**\n     * @cfg {String} className\n     *\n     * A CSS class name to add to the generated links. This class will be added\n     * to all links, as well as this class plus match suffixes for styling\n     * url/email/phone/twitter/hashtag links differently.\n     *\n     * For example, if this config is provided as \"myLink\", then:\n     *\n     * - URL links will have the CSS classes: \"myLink myLink-url\"\n     * - Email links will have the CSS classes: \"myLink myLink-email\", and\n     * - Twitter links will have the CSS classes: \"myLink myLink-twitter\"\n     * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n     * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n     */\n\n    /**\n     * @cfg {Function} replaceFn\n     *\n     * A function to individually process each match found in the input string.\n     *\n     * See the class's description for usage.\n     *\n     * This function is called with the following parameters:\n     *\n     * @cfg {Autolinker} replaceFn.autolinker The Autolinker instance, which may\n     *   be used to retrieve child objects from (such as the instance's\n     *   {@link #getTagBuilder tag builder}).\n     * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which\n     *   can be used to retrieve information about the match that the `replaceFn`\n     *   is currently processing. See {@link Autolinker.match.Match} subclasses\n     *   for details.\n     */\n\n    /**\n     * @property {String} version (readonly)\n     *\n     * The Autolinker version number in the form major.minor.patch\n     *\n     * Ex: 0.25.1\n     */\n\n    /**\n     * @private\n     * @property {Autolinker.htmlParser.HtmlParser} htmlParser\n     *\n     * The HtmlParser instance used to skip over HTML tags, while finding text\n     * nodes to process. This is lazily instantiated in the {@link #getHtmlParser}\n     * method.\n     */\n\n    /**\n     * @private\n     * @property {Autolinker.matcher.Matcher[]} matchers\n     *\n     * The {@link Autolinker.matcher.Matcher} instances for this Autolinker\n     * instance.\n     *\n     * This is lazily created in {@link #getMatchers}.\n     */\n\n    /**\n     * @private\n     * @property {Autolinker.AnchorTagBuilder} tagBuilder\n     *\n     * The AnchorTagBuilder instance used to build match replacement anchor tags.\n     * Note: this is lazily instantiated in the {@link #getTagBuilder} method.\n     */\n\n    /**\n     * Normalizes the {@link #urls} config into an Object with 3 properties:\n     * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.\n     *\n     * See {@link #urls} config for details.\n     *\n     * @private\n     * @param {Boolean/Object} urls\n     * @return {Object}\n     */\n    normalizeUrlsCfg: function normalizeUrlsCfg(urls) {\n      if (urls == null) urls = true; // default to `true`\n\n      if (typeof urls === 'boolean') {\n        return {\n          schemeMatches: urls,\n          wwwMatches: urls,\n          tldMatches: urls\n        };\n      } else {\n        // object form\n        return {\n          schemeMatches: typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,\n          wwwMatches: typeof urls.wwwMatches === 'boolean' ? urls.wwwMatches : true,\n          tldMatches: typeof urls.tldMatches === 'boolean' ? urls.tldMatches : true\n        };\n      }\n    },\n\n    /**\n     * Normalizes the {@link #truncate} config into an Object with 2 properties:\n     * `length` (Number), and `location` (String).\n     *\n     * See {@link #truncate} config for details.\n     *\n     * @private\n     * @param {Number/Object} truncate\n     * @return {Object}\n     */\n    normalizeTruncateCfg: function normalizeTruncateCfg(truncate) {\n      if (typeof truncate === 'number') {\n        return {\n          length: truncate,\n          location: 'end'\n        };\n      } else {\n        // object, or undefined/null\n        return Autolinker.Util.defaults(truncate || {}, {\n          length: Number.POSITIVE_INFINITY,\n          location: 'end'\n        });\n      }\n    },\n\n    /**\n     * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n     * numbers, username handles, and hashtags (depending on the configuration\n     * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n     * objects describing those matches.\n     *\n     * This method is used by the {@link #link} method, but can also be used to\n     * simply do parsing of the input in order to discover what kinds of links\n     * there are and how many.\n     *\n     * @param {String} textOrHtml The HTML or text to find matches within\n     *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n     *   {@link #twitter}, and {@link #hashtag} options are enabled).\n     * @return {Autolinker.match.Match[]} The array of Matches found in the\n     *   given input `textOrHtml`.\n     */\n    parse: function parse(textOrHtml) {\n      var htmlParser = this.getHtmlParser(),\n          htmlNodes = htmlParser.parse(textOrHtml),\n          anchorTagStackCount = 0,\n          // used to only process text around anchor tags, and any inner text/html they may have;\n      matches = []; // Find all matches within the `textOrHtml` (but not matches that are\n      // already nested within <a> tags)\n\n      for (var i = 0, len = htmlNodes.length; i < len; i++) {\n        var node = htmlNodes[i],\n            nodeType = node.getType();\n\n        if (nodeType === 'element' && node.getTagName() === 'a') {\n          // Process HTML anchor element nodes in the input `textOrHtml` to find out when we're within an <a> tag\n          if (!node.isClosing()) {\n            // it's the start <a> tag\n            anchorTagStackCount++;\n          } else {\n            // it's the end </a> tag\n            anchorTagStackCount = Math.max(anchorTagStackCount - 1, 0); // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n          }\n        } else if (nodeType === 'text' && anchorTagStackCount === 0) {\n          // Process text nodes that are not within an <a> tag\n          var textNodeMatches = this.parseText(node.getText(), node.getOffset());\n          matches.push.apply(matches, textNodeMatches);\n        }\n      } // After we have found all matches, remove subsequent matches that\n      // overlap with a previous match. This can happen for instance with URLs,\n      // where the url 'google.com/#link' would match '#link' as a hashtag.\n\n\n      matches = this.compactMatches(matches); // And finally, remove matches for match types that have been turned\n      // off. We needed to have all match types turned on initially so that\n      // things like hashtags could be filtered out if they were really just\n      // part of a URL match (for instance, as a named anchor).\n\n      matches = this.removeUnwantedMatches(matches);\n      return matches;\n    },\n\n    /**\n     * After we have found all matches, we need to remove subsequent matches\n     * that overlap with a previous match. This can happen for instance with\n     * URLs, where the url 'google.com/#link' would match '#link' as a hashtag.\n     *\n     * @private\n     * @param {Autolinker.match.Match[]} matches\n     * @return {Autolinker.match.Match[]}\n     */\n    compactMatches: function compactMatches(matches) {\n      // First, the matches need to be sorted in order of offset\n      matches.sort(function (a, b) {\n        return a.getOffset() - b.getOffset();\n      });\n\n      for (var i = 0; i < matches.length - 1; i++) {\n        var match = matches[i],\n            endIdx = match.getOffset() + match.getMatchedText().length; // Remove subsequent matches that overlap with the current match\n\n        while (i + 1 < matches.length && matches[i + 1].getOffset() <= endIdx) {\n          matches.splice(i + 1, 1);\n        }\n      }\n\n      return matches;\n    },\n\n    /**\n     * Removes matches for matchers that were turned off in the options. For\n     * example, if {@link #hashtag hashtags} were not to be matched, we'll\n     * remove them from the `matches` array here.\n     *\n     * @private\n     * @param {Autolinker.match.Match[]} matches The array of matches to remove\n     *   the unwanted matches from. Note: this array is mutated for the\n     *   removals.\n     * @return {Autolinker.match.Match[]} The mutated input `matches` array.\n     */\n    removeUnwantedMatches: function removeUnwantedMatches(matches) {\n      var remove = Autolinker.Util.remove;\n      if (!this.hashtag) remove(matches, function (match) {\n        return match.getType() === 'hashtag';\n      });\n      if (!this.email) remove(matches, function (match) {\n        return match.getType() === 'email';\n      });\n      if (!this.phone) remove(matches, function (match) {\n        return match.getType() === 'phone';\n      });\n      if (!this.twitter) remove(matches, function (match) {\n        return match.getType() === 'twitter';\n      });\n\n      if (!this.urls.schemeMatches) {\n        remove(matches, function (m) {\n          return m.getType() === 'url' && m.getUrlMatchType() === 'scheme';\n        });\n      }\n\n      if (!this.urls.wwwMatches) {\n        remove(matches, function (m) {\n          return m.getType() === 'url' && m.getUrlMatchType() === 'www';\n        });\n      }\n\n      if (!this.urls.tldMatches) {\n        remove(matches, function (m) {\n          return m.getType() === 'url' && m.getUrlMatchType() === 'tld';\n        });\n      }\n\n      return matches;\n    },\n\n    /**\n     * Parses the input `text` looking for URLs, email addresses, phone\n     * numbers, username handles, and hashtags (depending on the configuration\n     * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n     * objects describing those matches.\n     *\n     * This method processes a **non-HTML string**, and is used to parse and\n     * match within the text nodes of an HTML string. This method is used\n     * internally by {@link #parse}.\n     *\n     * @private\n     * @param {String} text The text to find matches within (depending on if the\n     *   {@link #urls}, {@link #email}, {@link #phone}, {@link #twitter}, and\n     *   {@link #hashtag} options are enabled). This must be a non-HTML string.\n     * @param {Number} [offset=0] The offset of the text node within the\n     *   original string. This is used when parsing with the {@link #parse}\n     *   method to generate correct offsets within the {@link Autolinker.match.Match}\n     *   instances, but may be omitted if calling this method publicly.\n     * @return {Autolinker.match.Match[]} The array of Matches found in the\n     *   given input `text`.\n     */\n    parseText: function parseText(text, offset) {\n      offset = offset || 0;\n      var matchers = this.getMatchers(),\n          matches = [];\n\n      for (var i = 0, numMatchers = matchers.length; i < numMatchers; i++) {\n        var textMatches = matchers[i].parseMatches(text); // Correct the offset of each of the matches. They are originally\n        // the offset of the match within the provided text node, but we\n        // need to correct them to be relative to the original HTML input\n        // string (i.e. the one provided to #parse).\n\n        for (var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++) {\n          textMatches[j].setOffset(offset + textMatches[j].getOffset());\n        }\n\n        matches.push.apply(matches, textMatches);\n      }\n\n      return matches;\n    },\n\n    /**\n     * Automatically links URLs, Email addresses, Phone numbers, Twitter\n     * handles, and Hashtags found in the given chunk of HTML. Does not link\n     * URLs found within HTML tags.\n     *\n     * For instance, if given the text: `You should go to http://www.yahoo.com`,\n     * then the result will be `You should go to\n     * &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n     *\n     * This method finds the text around any HTML elements in the input\n     * `textOrHtml`, which will be the text that is processed. Any original HTML\n     * elements will be left as-is, as well as the text that is already wrapped\n     * in anchor (&lt;a&gt;) tags.\n     *\n     * @param {String} textOrHtml The HTML or text to autolink matches within\n     *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n     *   {@link #twitter}, and {@link #hashtag} options are enabled).\n     * @return {String} The HTML, with matches automatically linked.\n     */\n    link: function link(textOrHtml) {\n      if (!textOrHtml) {\n        return \"\";\n      } // handle `null` and `undefined`\n\n\n      var matches = this.parse(textOrHtml),\n          newHtml = [],\n          lastIndex = 0;\n\n      for (var i = 0, len = matches.length; i < len; i++) {\n        var match = matches[i];\n        newHtml.push(textOrHtml.substring(lastIndex, match.getOffset()));\n        newHtml.push(this.createMatchReturnVal(match));\n        lastIndex = match.getOffset() + match.getMatchedText().length;\n      }\n\n      newHtml.push(textOrHtml.substring(lastIndex)); // handle the text after the last match\n\n      return newHtml.join('');\n    },\n\n    /**\n     * Creates the return string value for a given match in the input string.\n     *\n     * This method handles the {@link #replaceFn}, if one was provided.\n     *\n     * @private\n     * @param {Autolinker.match.Match} match The Match object that represents\n     *   the match.\n     * @return {String} The string that the `match` should be replaced with.\n     *   This is usually the anchor tag string, but may be the `matchStr` itself\n     *   if the match is not to be replaced.\n     */\n    createMatchReturnVal: function createMatchReturnVal(match) {\n      // Handle a custom `replaceFn` being provided\n      var replaceFnResult;\n\n      if (this.replaceFn) {\n        replaceFnResult = this.replaceFn.call(this, this, match); // Autolinker instance is the context, and the first arg\n      }\n\n      if (typeof replaceFnResult === 'string') {\n        return replaceFnResult; // `replaceFn` returned a string, use that\n      } else if (replaceFnResult === false) {\n        return match.getMatchedText(); // no replacement for the match\n      } else if (replaceFnResult instanceof Autolinker.HtmlTag) {\n        return replaceFnResult.toAnchorString();\n      } else {\n        // replaceFnResult === true, or no/unknown return value from function\n        // Perform Autolinker's default anchor tag generation\n        var anchorTag = match.buildTag(); // returns an Autolinker.HtmlTag instance\n\n        return anchorTag.toAnchorString();\n      }\n    },\n\n    /**\n     * Lazily instantiates and returns the {@link #htmlParser} instance for this\n     * Autolinker instance.\n     *\n     * @protected\n     * @return {Autolinker.htmlParser.HtmlParser}\n     */\n    getHtmlParser: function getHtmlParser() {\n      var htmlParser = this.htmlParser;\n\n      if (!htmlParser) {\n        htmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();\n      }\n\n      return htmlParser;\n    },\n\n    /**\n     * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}\n     * instances for this Autolinker instance.\n     *\n     * @protected\n     * @return {Autolinker.matcher.Matcher[]}\n     */\n    getMatchers: function getMatchers() {\n      if (!this.matchers) {\n        var matchersNs = Autolinker.matcher,\n            tagBuilder = this.getTagBuilder();\n        var matchers = [new matchersNs.Hashtag({\n          tagBuilder: tagBuilder,\n          serviceName: this.hashtag\n        }), new matchersNs.Email({\n          tagBuilder: tagBuilder\n        }), new matchersNs.Phone({\n          tagBuilder: tagBuilder\n        }), new matchersNs.Twitter({\n          tagBuilder: tagBuilder\n        }), new matchersNs.Url({\n          tagBuilder: tagBuilder,\n          stripPrefix: this.stripPrefix\n        })];\n        return this.matchers = matchers;\n      } else {\n        return this.matchers;\n      }\n    },\n\n    /**\n     * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it\n     * if it does not yet exist.\n     *\n     * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that\n     * Autolinker would normally generate, and then allow for modifications before returning it. For example:\n     *\n     *     var html = Autolinker.link( \"Test google.com\", {\n     *         replaceFn : function( autolinker, match ) {\n     *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n     *             tag.setAttr( 'rel', 'nofollow' );\n     *\n     *             return tag;\n     *         }\n     *     } );\n     *\n     *     // generated html:\n     *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n     *\n     * @return {Autolinker.AnchorTagBuilder}\n     */\n    getTagBuilder: function getTagBuilder() {\n      var tagBuilder = this.tagBuilder;\n\n      if (!tagBuilder) {\n        tagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder({\n          newWindow: this.newWindow,\n          truncate: this.truncate,\n          className: this.className\n        });\n      }\n\n      return tagBuilder;\n    }\n  }; // Autolinker Namespaces\n\n  Autolinker.match = {};\n  Autolinker.matcher = {};\n  Autolinker.htmlParser = {};\n  Autolinker.truncate = {};\n  /*global Autolinker */\n\n  /*jshint eqnull:true, boss:true */\n\n  /**\n   * @class Autolinker.Util\n   * @singleton\n   *\n   * A few utility methods for Autolinker.\n   */\n\n  Autolinker.Util = {\n    /**\n     * @property {Function} abstractMethod\n     *\n     * A function object which represents an abstract method.\n     */\n    abstractMethod: function abstractMethod() {\n      throw \"abstract\";\n    },\n\n    /**\n     * @private\n     * @property {RegExp} trimRegex\n     *\n     * The regular expression used to trim the leading and trailing whitespace\n     * from a string.\n     */\n    trimRegex: /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n    /**\n     * Assigns (shallow copies) the properties of `src` onto `dest`.\n     *\n     * @param {Object} dest The destination object.\n     * @param {Object} src The source object.\n     * @return {Object} The destination object (`dest`)\n     */\n    assign: function assign(dest, src) {\n      for (var prop in src) {\n        if (src.hasOwnProperty(prop)) {\n          dest[prop] = src[prop];\n        }\n      }\n\n      return dest;\n    },\n\n    /**\n     * Assigns (shallow copies) the properties of `src` onto `dest`, if the\n     * corresponding property on `dest` === `undefined`.\n     *\n     * @param {Object} dest The destination object.\n     * @param {Object} src The source object.\n     * @return {Object} The destination object (`dest`)\n     */\n    defaults: function defaults(dest, src) {\n      for (var prop in src) {\n        if (src.hasOwnProperty(prop) && dest[prop] === undefined) {\n          dest[prop] = src[prop];\n        }\n      }\n\n      return dest;\n    },\n\n    /**\n     * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.\n     *\n     * @param {Function} superclass The constructor function for the superclass.\n     * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the\n     *   special property `constructor`, which will be used as the new subclass's constructor function.\n     * @return {Function} The new subclass function.\n     */\n    extend: function extend(superclass, protoProps) {\n      var superclassProto = superclass.prototype;\n\n      var F = function F() {};\n\n      F.prototype = superclassProto;\n      var subclass;\n\n      if (protoProps.hasOwnProperty('constructor')) {\n        subclass = protoProps.constructor;\n      } else {\n        subclass = function subclass() {\n          superclassProto.constructor.apply(this, arguments);\n        };\n      }\n\n      var subclassProto = subclass.prototype = new F(); // set up prototype chain\n\n      subclassProto.constructor = subclass; // fix constructor property\n\n      subclassProto.superclass = superclassProto;\n      delete protoProps.constructor; // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there\n\n      Autolinker.Util.assign(subclassProto, protoProps);\n      return subclass;\n    },\n\n    /**\n     * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n     * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n     * `len`, the string will be returned unchanged.\n     *\n     * @param {String} str The string to truncate and add an ellipsis to.\n     * @param {Number} truncateLen The length to truncate the string at.\n     * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`\n     *   when truncated. Defaults to '..'\n     */\n    ellipsis: function ellipsis(str, truncateLen, ellipsisChars) {\n      if (str.length > truncateLen) {\n        ellipsisChars = ellipsisChars == null ? '..' : ellipsisChars;\n        str = str.substring(0, truncateLen - ellipsisChars.length) + ellipsisChars;\n      }\n\n      return str;\n    },\n\n    /**\n     * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n     *\n     * @param {Array} arr The array to find an element of.\n     * @param {*} element The element to find in the array, and return the index of.\n     * @return {Number} The index of the `element`, or -1 if it was not found.\n     */\n    indexOf: function indexOf(arr, element) {\n      if (Array.prototype.indexOf) {\n        return arr.indexOf(element);\n      } else {\n        for (var i = 0, len = arr.length; i < len; i++) {\n          if (arr[i] === element) return i;\n        }\n\n        return -1;\n      }\n    },\n\n    /**\n     * Removes array elements based on a filtering function. Mutates the input\n     * array.\n     *\n     * Using this instead of the ES5 Array.prototype.filter() function, to allow\n     * Autolinker compatibility with IE8, and also to prevent creating many new\n     * arrays in memory for filtering.\n     *\n     * @param {Array} arr The array to remove elements from. This array is\n     *   mutated.\n     * @param {Function} fn A function which should return `true` to\n     *   remove an element.\n     * @return {Array} The mutated input `arr`.\n     */\n    remove: function remove(arr, fn) {\n      for (var i = arr.length - 1; i >= 0; i--) {\n        if (fn(arr[i]) === true) {\n          arr.splice(i, 1);\n        }\n      }\n    },\n\n    /**\n     * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n     * with a regular expression that contains capturing parenthesis.\n     *\n     * For example:\n     *\n     *     // Modern browsers:\n     *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n     *\n     *     // Old IE (including IE8):\n     *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n     *\n     * This method emulates the functionality of modern browsers for the old IE case.\n     *\n     * @param {String} str The string to split.\n     * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n     *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n     *   description of this method.\n     *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n     *   Note #2: for simplicity's sake, the regular expression does not need\n     *   to contain capturing parenthesis - it will be assumed that any match has them.\n     * @return {String[]} The split array of strings, with the splitting character(s) included.\n     */\n    splitAndCapture: function splitAndCapture(str, splitRegex) {\n      if (!splitRegex.global) throw new Error(\"`splitRegex` must have the 'g' flag set\");\n      var result = [],\n          lastIdx = 0,\n          match;\n\n      while (match = splitRegex.exec(str)) {\n        result.push(str.substring(lastIdx, match.index));\n        result.push(match[0]); // push the splitting char(s)\n\n        lastIdx = match.index + match[0].length;\n      }\n\n      result.push(str.substring(lastIdx));\n      return result;\n    },\n\n    /**\n     * Trims the leading and trailing whitespace from a string.\n     *\n     * @param {String} str The string to trim.\n     * @return {String}\n     */\n    trim: function trim(str) {\n      return str.replace(this.trimRegex, '');\n    }\n  };\n  /*global Autolinker */\n\n  /*jshint boss:true */\n\n  /**\n   * @class Autolinker.HtmlTag\n   * @extends Object\n   *\n   * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n   *\n   * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n   * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n   *\n   * ## Examples\n   *\n   * Example instantiation:\n   *\n   *     var tag = new Autolinker.HtmlTag( {\n   *         tagName : 'a',\n   *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },\n   *         innerHtml : 'Google'\n   *     } );\n   *\n   *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n   *\n   *     // Individual accessor methods\n   *     tag.getTagName();                 // 'a'\n   *     tag.getAttr( 'href' );            // 'http://google.com'\n   *     tag.hasClass( 'external-link' );  // true\n   *\n   *\n   * Using mutator methods (which may be used in combination with instantiation config properties):\n   *\n   *     var tag = new Autolinker.HtmlTag();\n   *     tag.setTagName( 'a' );\n   *     tag.setAttr( 'href', 'http://google.com' );\n   *     tag.addClass( 'external-link' );\n   *     tag.setInnerHtml( 'Google' );\n   *\n   *     tag.getTagName();                 // 'a'\n   *     tag.getAttr( 'href' );            // 'http://google.com'\n   *     tag.hasClass( 'external-link' );  // true\n   *\n   *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n   *\n   *\n   * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n   *\n   *     var html = Autolinker.link( \"Test google.com\", {\n   *         replaceFn : function( autolinker, match ) {\n   *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n   *             tag.setAttr( 'rel', 'nofollow' );\n   *\n   *             return tag;\n   *         }\n   *     } );\n   *\n   *     // generated html:\n   *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n   *\n   *\n   * ## Example use with a new tag for the replacement\n   *\n   *     var html = Autolinker.link( \"Test google.com\", {\n   *         replaceFn : function( autolinker, match ) {\n   *             var tag = new Autolinker.HtmlTag( {\n   *                 tagName : 'button',\n   *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n   *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n   *             } );\n   *\n   *             return tag;\n   *         }\n   *     } );\n   *\n   *     // generated html:\n   *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>\n   */\n\n  Autolinker.HtmlTag = Autolinker.Util.extend(Object, {\n    /**\n     * @cfg {String} tagName\n     *\n     * The tag name. Ex: 'a', 'button', etc.\n     *\n     * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n     * is executed.\n     */\n\n    /**\n     * @cfg {Object.<String, String>} attrs\n     *\n     * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n     * values are the attribute values.\n     */\n\n    /**\n     * @cfg {String} innerHtml\n     *\n     * The inner HTML for the tag.\n     *\n     * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym\n     * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}\n     * if you prefer, but this one is recommended.\n     */\n\n    /**\n     * @cfg {String} innerHTML\n     *\n     * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version\n     * for acronym names.\n     */\n\n    /**\n     * @protected\n     * @property {RegExp} whitespaceRegex\n     *\n     * Regular expression used to match whitespace in a string of CSS classes.\n     */\n    whitespaceRegex: /\\s+/,\n\n    /**\n     * @constructor\n     * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.Util.assign(this, cfg);\n      this.innerHtml = this.innerHtml || this.innerHTML; // accept either the camelCased form or the fully capitalized acronym\n    },\n\n    /**\n     * Sets the tag name that will be used to generate the tag with.\n     *\n     * @param {String} tagName\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    setTagName: function setTagName(tagName) {\n      this.tagName = tagName;\n      return this;\n    },\n\n    /**\n     * Retrieves the tag name.\n     *\n     * @return {String}\n     */\n    getTagName: function getTagName() {\n      return this.tagName || \"\";\n    },\n\n    /**\n     * Sets an attribute on the HtmlTag.\n     *\n     * @param {String} attrName The attribute name to set.\n     * @param {String} attrValue The attribute value to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    setAttr: function setAttr(attrName, attrValue) {\n      var tagAttrs = this.getAttrs();\n      tagAttrs[attrName] = attrValue;\n      return this;\n    },\n\n    /**\n     * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n     *\n     * @param {String} attrName The attribute name to retrieve.\n     * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n     */\n    getAttr: function getAttr(attrName) {\n      return this.getAttrs()[attrName];\n    },\n\n    /**\n     * Sets one or more attributes on the HtmlTag.\n     *\n     * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    setAttrs: function setAttrs(attrs) {\n      var tagAttrs = this.getAttrs();\n      Autolinker.Util.assign(tagAttrs, attrs);\n      return this;\n    },\n\n    /**\n     * Retrieves the attributes Object (map) for the HtmlTag.\n     *\n     * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n     */\n    getAttrs: function getAttrs() {\n      return this.attrs || (this.attrs = {});\n    },\n\n    /**\n     * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    setClass: function setClass(cssClass) {\n      return this.setAttr('class', cssClass);\n    },\n\n    /**\n     * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to add.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    addClass: function addClass(cssClass) {\n      var classAttr = this.getClass(),\n          whitespaceRegex = this.whitespaceRegex,\n          indexOf = Autolinker.Util.indexOf,\n          // to support IE8 and below\n      classes = !classAttr ? [] : classAttr.split(whitespaceRegex),\n          newClasses = cssClass.split(whitespaceRegex),\n          newClass;\n\n      while (newClass = newClasses.shift()) {\n        if (indexOf(classes, newClass) === -1) {\n          classes.push(newClass);\n        }\n      }\n\n      this.getAttrs()['class'] = classes.join(\" \");\n      return this;\n    },\n\n    /**\n     * Convenience method to remove one or more CSS classes from the HtmlTag.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to remove.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    removeClass: function removeClass(cssClass) {\n      var classAttr = this.getClass(),\n          whitespaceRegex = this.whitespaceRegex,\n          indexOf = Autolinker.Util.indexOf,\n          // to support IE8 and below\n      classes = !classAttr ? [] : classAttr.split(whitespaceRegex),\n          removeClasses = cssClass.split(whitespaceRegex),\n          removeClass;\n\n      while (classes.length && (removeClass = removeClasses.shift())) {\n        var idx = indexOf(classes, removeClass);\n\n        if (idx !== -1) {\n          classes.splice(idx, 1);\n        }\n      }\n\n      this.getAttrs()['class'] = classes.join(\" \");\n      return this;\n    },\n\n    /**\n     * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n     * there are multiple.\n     *\n     * @return {String}\n     */\n    getClass: function getClass() {\n      return this.getAttrs()['class'] || \"\";\n    },\n\n    /**\n     * Convenience method to check if the tag has a CSS class or not.\n     *\n     * @param {String} cssClass The CSS class to check for.\n     * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n     */\n    hasClass: function hasClass(cssClass) {\n      return (' ' + this.getClass() + ' ').indexOf(' ' + cssClass + ' ') !== -1;\n    },\n\n    /**\n     * Sets the inner HTML for the tag.\n     *\n     * @param {String} html The inner HTML to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    setInnerHtml: function setInnerHtml(html) {\n      this.innerHtml = html;\n      return this;\n    },\n\n    /**\n     * Retrieves the inner HTML for the tag.\n     *\n     * @return {String}\n     */\n    getInnerHtml: function getInnerHtml() {\n      return this.innerHtml || \"\";\n    },\n\n    /**\n     * Override of superclass method used to generate the HTML string for the tag.\n     *\n     * @return {String}\n     */\n    toAnchorString: function toAnchorString() {\n      var tagName = this.getTagName(),\n          attrsStr = this.buildAttrsStr();\n      attrsStr = attrsStr ? ' ' + attrsStr : ''; // prepend a space if there are actually attributes\n\n      return ['<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>'].join(\"\");\n    },\n\n    /**\n     * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n     * the stringified HtmlTag.\n     *\n     * @protected\n     * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n     */\n    buildAttrsStr: function buildAttrsStr() {\n      if (!this.attrs) return \"\"; // no `attrs` Object (map) has been set, return empty string\n\n      var attrs = this.getAttrs(),\n          attrsArr = [];\n\n      for (var prop in attrs) {\n        if (attrs.hasOwnProperty(prop)) {\n          attrsArr.push(prop + '=\"' + attrs[prop] + '\"');\n        }\n      }\n\n      return attrsArr.join(\" \");\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.RegexLib\n   * @singleton\n   *\n   * Builds and stores a library of the common regular expressions used by the\n   * Autolinker utility.\n   *\n   * Other regular expressions may exist ad-hoc, but these are generally the\n   * regular expressions that are shared between source files.\n   */\n\n  Autolinker.RegexLib = function () {\n    /**\n     * The string form of a regular expression that would match all of the\n     * alphabetic (\"letter\") chars in the unicode character set when placed in a\n     * RegExp character class (`[]`). This includes all international alphabetic\n     * characters.\n     *\n     * These would be the characters matched by unicode regex engines `\\p{L}`\n     * escape (\"all letters\").\n     *\n     * Taken from the XRegExp library: http://xregexp.com/\n     * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n     *\n     * @private\n     * @type {String}\n     */\n    var alphaCharsStr = \"A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\n    /**\n     * The string form of a regular expression that would match all of the\n     * decimal number chars in the unicode character set when placed in a RegExp\n     * character class (`[]`).\n     *\n     * These would be the characters matched by unicode regex engines `\\p{Nd}`\n     * escape (\"all decimal numbers\")\n     *\n     * Taken from the XRegExp library: http://xregexp.com/\n     * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n     *\n     * @private\n     * @type {String}\n     */\n\n    var decimalNumbersStr = \"0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19\"; // See documentation below\n\n    var alphaNumericCharsStr = alphaCharsStr + decimalNumbersStr; // See documentation below\n\n    var domainNameRegex = new RegExp('[' + alphaNumericCharsStr + '.\\\\-]*[' + alphaNumericCharsStr + '\\\\-]'); // See documentation below\n\n    var tldRegex = /(?:travelersinsurance|sandvikcoromant|kerryproperties|cancerresearch|weatherchannel|kerrylogistics|spreadbetting|international|wolterskluwer|lifeinsurance|construction|pamperedchef|scholarships|versicherung|bridgestone|creditunion|kerryhotels|investments|productions|blackfriday|enterprises|lamborghini|photography|motorcycles|williamhill|playstation|contractors|barclaycard|accountants|redumbrella|engineering|management|telefonica|protection|consulting|tatamotors|creditcard|vlaanderen|schaeffler|associates|properties|foundation|republican|bnpparibas|boehringer|eurovision|extraspace|industries|immobilien|university|technology|volkswagen|healthcare|restaurant|cuisinella|vistaprint|apartments|accountant|travelers|homedepot|institute|vacations|furniture|fresenius|insurance|christmas|bloomberg|solutions|barcelona|firestone|financial|kuokgroup|fairwinds|community|passagens|goldpoint|equipment|lifestyle|yodobashi|aquarelle|marketing|analytics|education|amsterdam|statefarm|melbourne|allfinanz|directory|microsoft|stockholm|montblanc|accenture|lancaster|landrover|everbank|istanbul|graphics|grainger|ipiranga|softbank|attorney|pharmacy|saarland|catering|airforce|yokohama|mortgage|frontier|mutuelle|stcgroup|memorial|pictures|football|symantec|cipriani|ventures|telecity|cityeats|verisign|flsmidth|boutique|cleaning|firmdale|clinique|clothing|redstone|infiniti|deloitte|feedback|services|broadway|plumbing|commbank|training|barclays|exchange|computer|brussels|software|delivery|barefoot|builders|business|bargains|engineer|holdings|download|security|helsinki|lighting|movistar|discount|hdfcbank|supplies|marriott|property|diamonds|capetown|partners|democrat|jpmorgan|bradesco|budapest|rexroth|zuerich|shriram|academy|science|support|youtube|singles|surgery|alibaba|statoil|dentist|schwarz|android|cruises|cricket|digital|markets|starhub|systems|courses|coupons|netbank|country|domains|corsica|network|neustar|realtor|lincoln|limited|schmidt|yamaxun|cooking|contact|auction|spiegel|liaison|leclerc|latrobe|lasalle|abogado|compare|lanxess|exposed|express|company|cologne|college|avianca|lacaixa|fashion|recipes|ferrero|komatsu|storage|wanggou|clubmed|sandvik|fishing|fitness|bauhaus|kitchen|flights|florist|flowers|watches|weather|temasek|samsung|bentley|forsale|channel|theater|frogans|theatre|okinawa|website|tickets|jewelry|gallery|tiffany|iselect|shiksha|brother|organic|wedding|genting|toshiba|origins|philips|hyundai|hotmail|hoteles|hosting|rentals|windows|cartier|bugatti|holiday|careers|whoswho|hitachi|panerai|caravan|reviews|guitars|capital|trading|hamburg|hangout|finance|stream|family|abbott|health|review|travel|report|hermes|hiphop|gratis|career|toyota|hockey|dating|repair|google|social|soccer|reisen|global|otsuka|giving|unicom|casino|photos|center|broker|rocher|orange|bostik|garden|insure|ryukyu|bharti|safety|physio|sakura|oracle|online|jaguar|gallup|piaget|tienda|futbol|pictet|joburg|webcam|berlin|office|juegos|kaufen|chanel|chrome|xihuan|church|tennis|circle|kinder|flickr|bayern|claims|clinic|viajes|nowruz|xperia|norton|yachts|studio|coffee|camera|sanofi|nissan|author|expert|events|comsec|lawyer|tattoo|viking|estate|villas|condos|realty|yandex|energy|emerck|virgin|vision|durban|living|school|coupon|london|taobao|natura|taipei|nagoya|luxury|walter|aramco|sydney|madrid|credit|maison|makeup|schule|market|anquan|direct|design|swatch|suzuki|alsace|vuelos|dental|alipay|voyage|shouji|voting|airtel|mutual|degree|supply|agency|museum|mobily|dealer|monash|select|mormon|active|moscow|racing|datsun|quebec|nissay|rodeo|email|gifts|works|photo|chloe|edeka|cheap|earth|vista|tushu|koeln|glass|shoes|globo|tunes|gmail|nokia|space|kyoto|black|ricoh|seven|lamer|sener|epson|cisco|praxi|trust|citic|crown|shell|lease|green|legal|lexus|ninja|tatar|gripe|nikon|group|video|wales|autos|gucci|party|nexus|guide|linde|adult|parts|amica|lixil|boats|azure|loans|locus|cymru|lotte|lotto|stada|click|poker|quest|dabur|lupin|nadex|paris|faith|dance|canon|place|gives|trade|skype|rocks|mango|cloud|boots|smile|final|swiss|homes|honda|media|horse|cards|deals|watch|bosch|house|pizza|miami|osaka|tours|total|xerox|coach|sucks|style|delta|toray|iinet|tools|money|codes|beats|tokyo|salon|archi|movie|baidu|study|actor|yahoo|store|apple|world|forex|today|bible|tmall|tirol|irish|tires|forum|reise|vegas|vodka|sharp|omega|weber|jetzt|audio|promo|build|bingo|chase|gallo|drive|dubai|rehab|press|solar|sale|beer|bbva|bank|band|auto|sapo|sarl|saxo|audi|asia|arte|arpa|army|yoga|ally|zara|scor|scot|sexy|seat|zero|seek|aero|adac|zone|aarp|maif|meet|meme|menu|surf|mini|mobi|mtpc|porn|desi|star|ltda|name|talk|navy|love|loan|live|link|news|limo|like|spot|life|nico|lidl|lgbt|land|taxi|team|tech|kred|kpmg|sony|song|kiwi|kddi|jprs|jobs|sohu|java|itau|tips|info|immo|icbc|hsbc|town|host|page|toys|here|help|pars|haus|guru|guge|tube|goog|golf|gold|sncf|gmbh|gift|ggee|gent|gbiz|game|vana|pics|fund|ford|ping|pink|fish|film|fast|farm|play|fans|fail|plus|skin|pohl|fage|moda|post|erni|dvag|prod|doha|prof|docs|viva|diet|luxe|site|dell|sina|dclk|show|qpon|date|vote|cyou|voto|read|coop|cool|wang|club|city|chat|cern|cash|reit|rent|casa|cars|care|camp|rest|call|cafe|weir|wien|rich|wiki|buzz|wine|book|bond|room|work|rsvp|shia|ruhr|blue|bing|shaw|bike|safe|xbox|best|pwc|mtn|lds|aig|boo|fyi|nra|nrw|ntt|car|gal|obi|zip|aeg|vin|how|one|ong|onl|dad|ooo|bet|esq|org|htc|bar|uol|ibm|ovh|gdn|ice|icu|uno|gea|ifm|bot|top|wtf|lol|day|pet|eus|wtc|ubs|tvs|aco|ing|ltd|ink|tab|abb|afl|cat|int|pid|pin|bid|cba|gle|com|cbn|ads|man|wed|ceb|gmo|sky|ist|gmx|tui|mba|fan|ski|iwc|app|pro|med|ceo|jcb|jcp|goo|dev|men|aaa|meo|pub|jlc|bom|jll|gop|jmp|mil|got|gov|win|jot|mma|joy|trv|red|cfa|cfd|bio|moe|moi|mom|ren|biz|aws|xin|bbc|dnp|buy|kfh|mov|thd|xyz|fit|kia|rio|rip|kim|dog|vet|nyc|bcg|mtr|bcn|bms|bmw|run|bzh|rwe|tel|stc|axa|kpn|fly|krd|cab|bnl|foo|crs|eat|tci|sap|srl|nec|sas|net|cal|sbs|sfr|sca|scb|csc|edu|new|xxx|hiv|fox|wme|ngo|nhk|vip|sex|frl|lat|yun|law|you|tax|soy|sew|om|ac|hu|se|sc|sg|sh|sb|sa|rw|ru|rs|ro|re|qa|py|si|pw|pt|ps|sj|sk|pr|pn|pm|pl|sl|sm|pk|sn|ph|so|pg|pf|pe|pa|zw|nz|nu|nr|np|no|nl|ni|ng|nf|sr|ne|st|nc|na|mz|my|mx|mw|mv|mu|mt|ms|mr|mq|mp|mo|su|mn|mm|ml|mk|mh|mg|me|sv|md|mc|sx|sy|ma|ly|lv|sz|lu|lt|ls|lr|lk|li|lc|lb|la|tc|kz|td|ky|kw|kr|kp|kn|km|ki|kh|tf|tg|th|kg|ke|jp|jo|jm|je|it|is|ir|tj|tk|tl|tm|iq|tn|to|io|in|im|il|ie|ad|sd|ht|hr|hn|hm|tr|hk|gy|gw|gu|gt|gs|gr|gq|tt|gp|gn|gm|gl|tv|gi|tw|tz|ua|gh|ug|uk|gg|gf|ge|gd|us|uy|uz|va|gb|ga|vc|ve|fr|fo|fm|fk|fj|vg|vi|fi|eu|et|es|er|eg|ee|ec|dz|do|dm|dk|vn|dj|de|cz|cy|cx|cw|vu|cv|cu|cr|co|cn|cm|cl|ck|ci|ch|cg|cf|cd|cc|ca|wf|bz|by|bw|bv|bt|bs|br|bo|bn|bm|bj|bi|ws|bh|bg|bf|be|bd|bb|ba|az|ax|aw|au|at|as|ye|ar|aq|ao|am|al|yt|ai|za|ag|af|ae|zm|id)\\b/;\n    return {\n      /**\n       * The string form of a regular expression that would match all of the\n       * letters and decimal number chars in the unicode character set when placed\n       * in a RegExp character class (`[]`).\n       *\n       * These would be the characters matched by unicode regex engines `[\\p{L}\\p{Nd}]`\n       * escape (\"all letters and decimal numbers\")\n       *\n       * @property {String} alphaNumericCharsStr\n       */\n      alphaNumericCharsStr: alphaNumericCharsStr,\n\n      /**\n       * A regular expression to match domain names of a URL or email address.\n       * Ex: 'google', 'yahoo', 'some-other-company', etc.\n       *\n       * @property {RegExp} domainNameRegex\n       */\n      domainNameRegex: domainNameRegex,\n\n      /**\n       * A regular expression to match top level domains (TLDs) for a URL or\n       * email address. Ex: 'com', 'org', 'net', etc.\n       *\n       * @property {RegExp} tldRegex\n       */\n      tldRegex: tldRegex\n    };\n  }();\n  /*global Autolinker */\n\n  /*jshint sub:true */\n\n  /**\n   * @protected\n   * @class Autolinker.AnchorTagBuilder\n   * @extends Object\n   *\n   * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is\n   * found.\n   *\n   * Normally this class is instantiated, configured, and used internally by an\n   * {@link Autolinker} instance, but may actually be retrieved in a {@link Autolinker#replaceFn replaceFn}\n   * to create {@link Autolinker.HtmlTag HtmlTag} instances which may be modified\n   * before returning from the {@link Autolinker#replaceFn replaceFn}. For\n   * example:\n   *\n   *     var html = Autolinker.link( \"Test google.com\", {\n   *         replaceFn : function( autolinker, match ) {\n   *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n   *             tag.setAttr( 'rel', 'nofollow' );\n   *\n   *             return tag;\n   *         }\n   *     } );\n   *\n   *     // generated html:\n   *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n   */\n\n\n  Autolinker.AnchorTagBuilder = Autolinker.Util.extend(Object, {\n    /**\n     * @cfg {Boolean} newWindow\n     * @inheritdoc Autolinker#newWindow\n     */\n\n    /**\n     * @cfg {Object} truncate\n     * @inheritdoc Autolinker#truncate\n     */\n\n    /**\n     * @cfg {String} className\n     * @inheritdoc Autolinker#className\n     */\n\n    /**\n     * @constructor\n     * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.Util.assign(this, cfg);\n    },\n\n    /**\n     * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n     * matched text, via its `match` object.\n     *\n     * @param {Autolinker.match.Match} match The Match instance to generate an\n     *   anchor tag from.\n     * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n     */\n    build: function build(match) {\n      return new Autolinker.HtmlTag({\n        tagName: 'a',\n        attrs: this.createAttrs(match.getType(), match.getAnchorHref()),\n        innerHtml: this.processAnchorText(match.getAnchorText())\n      });\n    },\n\n    /**\n     * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n     *   tag being generated.\n     *\n     * @protected\n     * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n     *   match that an anchor tag is being generated for.\n     * @param {String} anchorHref The href for the anchor tag.\n     * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n     */\n    createAttrs: function createAttrs(matchType, anchorHref) {\n      var attrs = {\n        'href': anchorHref // we'll always have the `href` attribute\n\n      };\n      var cssClass = this.createCssClass(matchType);\n\n      if (cssClass) {\n        attrs['class'] = cssClass;\n      }\n\n      if (this.newWindow) {\n        attrs['target'] = \"_blank\";\n        attrs['rel'] = \"noopener noreferrer\";\n      }\n\n      return attrs;\n    },\n\n    /**\n     * Creates the CSS class that will be used for a given anchor tag, based on\n     * the `matchType` and the {@link #className} config.\n     *\n     * @private\n     * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n     *   match that an anchor tag is being generated for.\n     * @return {String} The CSS class string for the link. Example return:\n     *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n     *   an empty string.\n     */\n    createCssClass: function createCssClass(matchType) {\n      var className = this.className;\n      if (!className) return \"\";else return className + \" \" + className + \"-\" + matchType; // ex: \"myLink myLink-url\", \"myLink myLink-email\", \"myLink myLink-phone\", \"myLink myLink-twitter\", or \"myLink myLink-hashtag\"\n    },\n\n    /**\n     * Processes the `anchorText` by truncating the text according to the\n     * {@link #truncate} config.\n     *\n     * @private\n     * @param {String} anchorText The anchor tag's text (i.e. what will be\n     *   displayed).\n     * @return {String} The processed `anchorText`.\n     */\n    processAnchorText: function processAnchorText(anchorText) {\n      anchorText = this.doTruncate(anchorText);\n      return anchorText;\n    },\n\n    /**\n     * Performs the truncation of the `anchorText` based on the {@link #truncate}\n     * option. If the `anchorText` is longer than the length specified by the\n     * {@link #truncate} option, the truncation is performed based on the\n     * `location` property. See {@link #truncate} for details.\n     *\n     * @private\n     * @param {String} anchorText The anchor tag's text (i.e. what will be\n     *   displayed).\n     * @return {String} The truncated anchor text.\n     */\n    doTruncate: function doTruncate(anchorText) {\n      var truncate = this.truncate;\n      if (!truncate || !truncate.length) return anchorText;\n      var truncateLength = truncate.length,\n          truncateLocation = truncate.location;\n\n      if (truncateLocation === 'smart') {\n        return Autolinker.truncate.TruncateSmart(anchorText, truncateLength, '..');\n      } else if (truncateLocation === 'middle') {\n        return Autolinker.truncate.TruncateMiddle(anchorText, truncateLength, '..');\n      } else {\n        return Autolinker.truncate.TruncateEnd(anchorText, truncateLength, '..');\n      }\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.htmlParser.HtmlParser\n   * @extends Object\n   *\n   * An HTML parser implementation which simply walks an HTML string and returns an array of\n   * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.\n   *\n   * Autolinker uses this to only link URLs/emails/Twitter handles within text nodes, effectively ignoring / \"walking\n   * around\" HTML tags.\n   */\n\n  Autolinker.htmlParser.HtmlParser = Autolinker.Util.extend(Object, {\n    /**\n     * @private\n     * @property {RegExp} htmlRegex\n     *\n     * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and\n     * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.\n     *\n     * Capturing groups:\n     *\n     * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.\n     * 2. If it is an end tag, this group will have the '/'.\n     * 3. If it is a comment tag, this group will hold the comment text (i.e.\n     *    the text inside the `&lt;!--` and `--&gt;`.\n     * 4. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)\n     */\n    htmlRegex: function () {\n      var commentTagRegex = /!--([\\s\\S]+?)--/,\n          tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,\n          attrNameRegex = /[^\\s\"'>\\/=\\x00-\\x1F\\x7F]+/,\n          // the unicode range accounts for excluding control chars, and the delete char\n      attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/,\n          // double quoted, single quoted, or unquoted attribute values\n      nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?'; // optional '=[value]'\n\n      return new RegExp([// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n      '(?:', '<(!DOCTYPE)', // *** Capturing Group 1 - If it's a doctype tag\n      // Zero or more attributes following the tag name\n      '(?:', '\\\\s+', // one or more whitespace chars before an attribute\n      // Either:\n      // A. attr=\"value\", or\n      // B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n      '(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')', ')*', '>', ')', '|', // All other HTML tags (i.e. tags that are not <!DOCTYPE>)\n      '(?:', '<(/)?', // Beginning of a tag or comment. Either '<' for a start tag, or '</' for an end tag.\n      // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.\n      '(?:', commentTagRegex.source, // *** Capturing Group 3 - A Comment Tag's Text\n      '|', '(?:', // *** Capturing Group 4 - The tag name\n      '(' + tagNameRegex.source + ')', // Zero or more attributes following the tag name\n      '(?:', '(?:\\\\s+|\\\\b)', // any number of whitespace chars before an attribute. NOTE: Using \\s* here throws Chrome into an infinite loop for some reason, so using \\s+|\\b instead\n      nameEqualsValueRegex, // attr=\"value\" (with optional =\"value\" part)\n      ')*', '\\\\s*/?', // any trailing spaces and optional '/' before the closing '>'\n      ')', ')', '>', ')'].join(\"\"), 'gi');\n    }(),\n\n    /**\n     * @private\n     * @property {RegExp} htmlCharacterEntitiesRegex\n     *\n     * The regular expression that matches common HTML character entities.\n     *\n     * Ignoring &amp; as it could be part of a query string -- handling it separately.\n     */\n    htmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,\n\n    /**\n     * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes}\n     * to represent the HTML structure of the input string.\n     *\n     * @param {String} html The HTML to parse.\n     * @return {Autolinker.htmlParser.HtmlNode[]}\n     */\n    parse: function parse(html) {\n      var htmlRegex = this.htmlRegex,\n          currentResult,\n          lastIndex = 0,\n          textAndEntityNodes,\n          nodes = []; // will be the result of the method\n\n      while ((currentResult = htmlRegex.exec(html)) !== null) {\n        var tagText = currentResult[0],\n            commentText = currentResult[3],\n            // if we've matched a comment\n        tagName = currentResult[1] || currentResult[4],\n            // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\")\n        isClosingTag = !!currentResult[2],\n            offset = currentResult.index,\n            inBetweenTagsText = html.substring(lastIndex, offset); // Push TextNodes and EntityNodes for any text found between tags\n\n        if (inBetweenTagsText) {\n          textAndEntityNodes = this.parseTextAndEntityNodes(lastIndex, inBetweenTagsText);\n          nodes.push.apply(nodes, textAndEntityNodes);\n        } // Push the CommentNode or ElementNode\n\n\n        if (commentText) {\n          nodes.push(this.createCommentNode(offset, tagText, commentText));\n        } else {\n          nodes.push(this.createElementNode(offset, tagText, tagName, isClosingTag));\n        }\n\n        lastIndex = offset + tagText.length;\n      } // Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.\n\n\n      if (lastIndex < html.length) {\n        var text = html.substring(lastIndex); // Push TextNodes and EntityNodes for any text found between tags\n\n        if (text) {\n          textAndEntityNodes = this.parseTextAndEntityNodes(lastIndex, text);\n          nodes.push.apply(nodes, textAndEntityNodes);\n        }\n      }\n\n      return nodes;\n    },\n\n    /**\n     * Parses text and HTML entity nodes from a given string. The input string\n     * should not have any HTML tags (elements) within it.\n     *\n     * @private\n     * @param {Number} offset The offset of the text node match within the\n     *   original HTML string.\n     * @param {String} text The string of text to parse. This is from an HTML\n     *   text node.\n     * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to\n     *   represent the {@link Autolinker.htmlParser.TextNode TextNodes} and\n     *   {@link Autolinker.htmlParser.EntityNode EntityNodes} found.\n     */\n    parseTextAndEntityNodes: function parseTextAndEntityNodes(offset, text) {\n      var nodes = [],\n          textAndEntityTokens = Autolinker.Util.splitAndCapture(text, this.htmlCharacterEntitiesRegex); // split at HTML entities, but include the HTML entities in the results array\n      // Every even numbered token is a TextNode, and every odd numbered token is an EntityNode\n      // For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the\n      //   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]\n\n      for (var i = 0, len = textAndEntityTokens.length; i < len; i += 2) {\n        var textToken = textAndEntityTokens[i],\n            entityToken = textAndEntityTokens[i + 1];\n\n        if (textToken) {\n          nodes.push(this.createTextNode(offset, textToken));\n          offset += textToken.length;\n        }\n\n        if (entityToken) {\n          nodes.push(this.createEntityNode(offset, entityToken));\n          offset += entityToken.length;\n        }\n      }\n\n      return nodes;\n    },\n\n    /**\n     * Factory method to create an {@link Autolinker.htmlParser.CommentNode CommentNode}.\n     *\n     * @private\n     * @param {Number} offset The offset of the match within the original HTML\n     *   string.\n     * @param {String} tagText The full text of the tag (comment) that was\n     *   matched, including its &lt;!-- and --&gt;.\n     * @param {String} commentText The full text of the comment that was matched.\n     */\n    createCommentNode: function createCommentNode(offset, tagText, commentText) {\n      return new Autolinker.htmlParser.CommentNode({\n        offset: offset,\n        text: tagText,\n        comment: Autolinker.Util.trim(commentText)\n      });\n    },\n\n    /**\n     * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.\n     *\n     * @private\n     * @param {Number} offset The offset of the match within the original HTML\n     *   string.\n     * @param {String} tagText The full text of the tag (element) that was\n     *   matched, including its attributes.\n     * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would\n     *   be passed to this method as \"img\".\n     * @param {Boolean} isClosingTag `true` if it's a closing tag, false\n     *   otherwise.\n     * @return {Autolinker.htmlParser.ElementNode}\n     */\n    createElementNode: function createElementNode(offset, tagText, tagName, isClosingTag) {\n      return new Autolinker.htmlParser.ElementNode({\n        offset: offset,\n        text: tagText,\n        tagName: tagName.toLowerCase(),\n        closing: isClosingTag\n      });\n    },\n\n    /**\n     * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.\n     *\n     * @private\n     * @param {Number} offset The offset of the match within the original HTML\n     *   string.\n     * @param {String} text The text that was matched for the HTML entity (such\n     *   as '&amp;nbsp;').\n     * @return {Autolinker.htmlParser.EntityNode}\n     */\n    createEntityNode: function createEntityNode(offset, text) {\n      return new Autolinker.htmlParser.EntityNode({\n        offset: offset,\n        text: text\n      });\n    },\n\n    /**\n     * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.\n     *\n     * @private\n     * @param {Number} offset The offset of the match within the original HTML\n     *   string.\n     * @param {String} text The text that was matched.\n     * @return {Autolinker.htmlParser.TextNode}\n     */\n    createTextNode: function createTextNode(offset, text) {\n      return new Autolinker.htmlParser.TextNode({\n        offset: offset,\n        text: text\n      });\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @abstract\n   * @class Autolinker.htmlParser.HtmlNode\n   *\n   * Represents an HTML node found in an input string. An HTML node is one of the\n   * following:\n   *\n   * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents\n   *    HTML tags.\n   * 2. A {@link Autolinker.htmlParser.CommentNode CommentNode}, which represents\n   *    HTML comments.\n   * 3. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text\n   *    outside or within HTML tags.\n   * 4. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents\n   *    one of the known HTML entities that Autolinker looks for. This includes\n   *    common ones such as &amp;quot; and &amp;nbsp;\n   */\n\n  Autolinker.htmlParser.HtmlNode = Autolinker.Util.extend(Object, {\n    /**\n     * @cfg {Number} offset (required)\n     *\n     * The offset of the HTML node in the original text that was parsed.\n     */\n    offset: undefined,\n\n    /**\n     * @cfg {String} text (required)\n     *\n     * The text that was matched for the HtmlNode.\n     *\n     * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode},\n     *   this will be the tag's text.\n     * - In the case of an {@link Autolinker.htmlParser.CommentNode CommentNode},\n     *   this will be the comment's text.\n     * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this\n     *   will be the text itself.\n     * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode},\n     *   this will be the text of the HTML entity.\n     */\n    text: undefined,\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     * specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.Util.assign(this, cfg);\n      if (this.offset == null) throw new Error('`offset` cfg required');\n      if (this.text == null) throw new Error('`text` cfg required');\n    },\n\n    /**\n     * Returns a string name for the type of node that this class represents.\n     *\n     * @abstract\n     * @return {String}\n     */\n    getType: Autolinker.Util.abstractMethod,\n\n    /**\n     * Retrieves the {@link #offset} of the HtmlNode. This is the offset of the\n     * HTML node in the original string that was parsed.\n     *\n     * @return {Number}\n     */\n    getOffset: function getOffset() {\n      return this.offset;\n    },\n\n    /**\n     * Retrieves the {@link #text} for the HtmlNode.\n     *\n     * @return {String}\n     */\n    getText: function getText() {\n      return this.text;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.htmlParser.CommentNode\n   * @extends Autolinker.htmlParser.HtmlNode\n   *\n   * Represents an HTML comment node that has been parsed by the\n   * {@link Autolinker.htmlParser.HtmlParser}.\n   *\n   * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n   * details.\n   */\n\n  Autolinker.htmlParser.CommentNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n    /**\n     * @cfg {String} comment (required)\n     *\n     * The text inside the comment tag. This text is stripped of any leading or\n     * trailing whitespace.\n     */\n    comment: '',\n\n    /**\n     * Returns a string name for the type of node that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'comment';\n    },\n\n    /**\n     * Returns the comment inside the comment tag.\n     *\n     * @return {String}\n     */\n    getComment: function getComment() {\n      return this.comment;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.htmlParser.ElementNode\n   * @extends Autolinker.htmlParser.HtmlNode\n   *\n   * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n   *\n   * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n   * details.\n   */\n\n  Autolinker.htmlParser.ElementNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n    /**\n     * @cfg {String} tagName (required)\n     *\n     * The name of the tag that was matched.\n     */\n    tagName: '',\n\n    /**\n     * @cfg {Boolean} closing (required)\n     *\n     * `true` if the element (tag) is a closing tag, `false` if its an opening\n     * tag.\n     */\n    closing: false,\n\n    /**\n     * Returns a string name for the type of node that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'element';\n    },\n\n    /**\n     * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag,\n     * returns \"img\".\n     *\n     * @return {String}\n     */\n    getTagName: function getTagName() {\n      return this.tagName;\n    },\n\n    /**\n     * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt;\n     * returns `false`, while &lt;/div&gt; returns `true`.\n     *\n     * @return {Boolean}\n     */\n    isClosing: function isClosing() {\n      return this.closing;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.htmlParser.EntityNode\n   * @extends Autolinker.htmlParser.HtmlNode\n   *\n   * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n   * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText}\n   * method.\n   *\n   * Note that this class will only be returned from the HtmlParser for the set of\n   * checked HTML entity nodes  defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.\n   *\n   * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n   * details.\n   */\n\n  Autolinker.htmlParser.EntityNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n    /**\n     * Returns a string name for the type of node that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'entity';\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.htmlParser.TextNode\n   * @extends Autolinker.htmlParser.HtmlNode\n   *\n   * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n   *\n   * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n   * details.\n   */\n\n  Autolinker.htmlParser.TextNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n    /**\n     * Returns a string name for the type of node that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'text';\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @abstract\n   * @class Autolinker.match.Match\n   *\n   * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a\n   * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n   *\n   * For example:\n   *\n   *     var input = \"...\";  // string with URLs, Email Addresses, and Twitter Handles\n   *\n   *     var linkedText = Autolinker.link( input, {\n   *         replaceFn : function( autolinker, match ) {\n   *             console.log( \"href = \", match.getAnchorHref() );\n   *             console.log( \"text = \", match.getAnchorText() );\n   *\n   *             switch( match.getType() ) {\n   *                 case 'url' :\n   *                     console.log( \"url: \", match.getUrl() );\n   *\n   *                 case 'email' :\n   *                     console.log( \"email: \", match.getEmail() );\n   *\n   *                 case 'twitter' :\n   *                     console.log( \"twitter: \", match.getTwitterHandle() );\n   *             }\n   *         }\n   *     } );\n   *\n   * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n   */\n\n  Autolinker.match.Match = Autolinker.Util.extend(Object, {\n    /**\n     * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n     *\n     * Reference to the AnchorTagBuilder instance to use to generate an anchor\n     * tag for the Match.\n     */\n\n    /**\n     * @cfg {String} matchedText (required)\n     *\n     * The original text that was matched by the {@link Autolinker.matcher.Matcher}.\n     */\n\n    /**\n     * @cfg {Number} offset (required)\n     *\n     * The offset of where the match was made in the input string.\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      if (cfg.tagBuilder == null) throw new Error('`tagBuilder` cfg required');\n      if (cfg.matchedText == null) throw new Error('`matchedText` cfg required');\n      if (cfg.offset == null) throw new Error('`offset` cfg required');\n      this.tagBuilder = cfg.tagBuilder;\n      this.matchedText = cfg.matchedText;\n      this.offset = cfg.offset;\n    },\n\n    /**\n     * Returns a string name for the type of match that this class represents.\n     *\n     * @abstract\n     * @return {String}\n     */\n    getType: Autolinker.Util.abstractMethod,\n\n    /**\n     * Returns the original text that was matched.\n     *\n     * @return {String}\n     */\n    getMatchedText: function getMatchedText() {\n      return this.matchedText;\n    },\n\n    /**\n     * Sets the {@link #offset} of where the match was made in the input string.\n     *\n     * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,\n     * and will therefore set an original offset that is relative to the HTML\n     * text node itself. However, we want this offset to be relative to the full\n     * HTML input string, and thus if using {@link Autolinker#parse} (rather\n     * than calling a {@link Autolinker.matcher.Matcher} directly), then this\n     * offset is corrected after the Matcher itself has done its job.\n     *\n     * @param {Number} offset\n     */\n    setOffset: function setOffset(offset) {\n      this.offset = offset;\n    },\n\n    /**\n     * Returns the offset of where the match was made in the input string. This\n     * is the 0-based index of the match.\n     *\n     * @return {Number}\n     */\n    getOffset: function getOffset() {\n      return this.offset;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @abstract\n     * @return {String}\n     */\n    getAnchorHref: Autolinker.Util.abstractMethod,\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @abstract\n     * @return {String}\n     */\n    getAnchorText: Autolinker.Util.abstractMethod,\n\n    /**\n     * Builds and returns an {@link Autolinker.HtmlTag} instance based on the\n     * Match.\n     *\n     * This can be used to easily generate anchor tags from matches, and either\n     * return their HTML string, or modify them before doing so.\n     *\n     * Example Usage:\n     *\n     *     var tag = match.buildTag();\n     *     tag.addClass( 'cordova-link' );\n     *     tag.setAttr( 'target', '_system' );\n     *\n     *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"cordova-link\" target=\"_system\">Google</a>\n     */\n    buildTag: function buildTag() {\n      return this.tagBuilder.build(this);\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.match.Email\n   * @extends Autolinker.match.Match\n   *\n   * Represents a Email match found in an input string which should be Autolinked.\n   *\n   * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n   */\n\n  Autolinker.match.Email = Autolinker.Util.extend(Autolinker.match.Match, {\n    /**\n     * @cfg {String} email (required)\n     *\n     * The email address that was matched.\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.match.Match.prototype.constructor.call(this, cfg);\n      if (!cfg.email) throw new Error('`email` cfg required');\n      this.email = cfg.email;\n    },\n\n    /**\n     * Returns a string name for the type of match that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'email';\n    },\n\n    /**\n     * Returns the email address that was matched.\n     *\n     * @return {String}\n     */\n    getEmail: function getEmail() {\n      return this.email;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorHref: function getAnchorHref() {\n      return 'mailto:' + this.email;\n    },\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorText: function getAnchorText() {\n      return this.email;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.match.Hashtag\n   * @extends Autolinker.match.Match\n   *\n   * Represents a Hashtag match found in an input string which should be\n   * Autolinked.\n   *\n   * See this class's superclass ({@link Autolinker.match.Match}) for more\n   * details.\n   */\n\n  Autolinker.match.Hashtag = Autolinker.Util.extend(Autolinker.match.Match, {\n    /**\n     * @cfg {String} serviceName\n     *\n     * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n     * for available values.\n     */\n\n    /**\n     * @cfg {String} hashtag (required)\n     *\n     * The Hashtag that was matched, without the '#'.\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.match.Match.prototype.constructor.call(this, cfg); // TODO: if( !serviceName ) throw new Error( '`serviceName` cfg required' );\n\n      if (!cfg.hashtag) throw new Error('`hashtag` cfg required');\n      this.serviceName = cfg.serviceName;\n      this.hashtag = cfg.hashtag;\n    },\n\n    /**\n     * Returns the type of match that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'hashtag';\n    },\n\n    /**\n     * Returns the configured {@link #serviceName} to point the Hashtag to.\n     * Ex: 'facebook', 'twitter'.\n     *\n     * @return {String}\n     */\n    getServiceName: function getServiceName() {\n      return this.serviceName;\n    },\n\n    /**\n     * Returns the matched hashtag, without the '#' character.\n     *\n     * @return {String}\n     */\n    getHashtag: function getHashtag() {\n      return this.hashtag;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorHref: function getAnchorHref() {\n      var serviceName = this.serviceName,\n          hashtag = this.hashtag;\n\n      switch (serviceName) {\n        case 'twitter':\n          return 'https://twitter.com/hashtag/' + hashtag;\n\n        case 'facebook':\n          return 'https://www.facebook.com/hashtag/' + hashtag;\n\n        case 'instagram':\n          return 'https://instagram.com/explore/tags/' + hashtag;\n\n        default:\n          // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n          throw new Error('Unknown service name to point hashtag to: ', serviceName);\n      }\n    },\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorText: function getAnchorText() {\n      return '#' + this.hashtag;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.match.Phone\n   * @extends Autolinker.match.Match\n   *\n   * Represents a Phone number match found in an input string which should be\n   * Autolinked.\n   *\n   * See this class's superclass ({@link Autolinker.match.Match}) for more\n   * details.\n   */\n\n  Autolinker.match.Phone = Autolinker.Util.extend(Autolinker.match.Match, {\n    /**\n     * @protected\n     * @property {String} number (required)\n     *\n     * The phone number that was matched, without any delimiter characters.\n     *\n     * Note: This is a string to allow for prefixed 0's.\n     */\n\n    /**\n     * @protected\n     * @property  {Boolean} plusSign (required)\n     *\n     * `true` if the matched phone number started with a '+' sign. We'll include\n     * it in the `tel:` URL if so, as this is needed for international numbers.\n     *\n     * Ex: '+1 (123) 456 7879'\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.match.Match.prototype.constructor.call(this, cfg);\n      if (!cfg.number) throw new Error('`number` cfg required');\n      if (cfg.plusSign == null) throw new Error('`plusSign` cfg required');\n      this.number = cfg.number;\n      this.plusSign = cfg.plusSign;\n    },\n\n    /**\n     * Returns a string name for the type of match that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'phone';\n    },\n\n    /**\n     * Returns the phone number that was matched as a string, without any\n     * delimiter characters.\n     *\n     * Note: This is a string to allow for prefixed 0's.\n     *\n     * @return {String}\n     */\n    getNumber: function getNumber() {\n      return this.number;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorHref: function getAnchorHref() {\n      return 'tel:' + (this.plusSign ? '+' : '') + this.number;\n    },\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorText: function getAnchorText() {\n      return this.matchedText;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.match.Twitter\n   * @extends Autolinker.match.Match\n   *\n   * Represents a Twitter match found in an input string which should be Autolinked.\n   *\n   * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n   */\n\n  Autolinker.match.Twitter = Autolinker.Util.extend(Autolinker.match.Match, {\n    /**\n     * @cfg {String} twitterHandle (required)\n     *\n     * The Twitter handle that was matched, without the '@' character.\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.match.Match.prototype.constructor.call(this, cfg);\n      if (!cfg.twitterHandle) throw new Error('`twitterHandle` cfg required');\n      this.twitterHandle = cfg.twitterHandle;\n    },\n\n    /**\n     * Returns the type of match that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'twitter';\n    },\n\n    /**\n     * Returns the twitter handle, without the '@' character.\n     *\n     * @return {String}\n     */\n    getTwitterHandle: function getTwitterHandle() {\n      return this.twitterHandle;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorHref: function getAnchorHref() {\n      return 'https://twitter.com/' + this.twitterHandle;\n    },\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorText: function getAnchorText() {\n      return '@' + this.twitterHandle;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.match.Url\n   * @extends Autolinker.match.Match\n   *\n   * Represents a Url match found in an input string which should be Autolinked.\n   *\n   * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n   */\n\n  Autolinker.match.Url = Autolinker.Util.extend(Autolinker.match.Match, {\n    /**\n     * @cfg {String} url (required)\n     *\n     * The url that was matched.\n     */\n\n    /**\n     * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)\n     *\n     * The type of URL match that this class represents. This helps to determine\n     * if the match was made in the original text with a prefixed scheme (ex:\n     * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\n     * was matched by a known top-level domain (ex: 'google.com').\n     */\n\n    /**\n     * @cfg {Boolean} protocolUrlMatch (required)\n     *\n     * `true` if the URL is a match which already has a protocol (i.e.\n     * 'http://'), `false` if the match was from a 'www' or known TLD match.\n     */\n\n    /**\n     * @cfg {Boolean} protocolRelativeMatch (required)\n     *\n     * `true` if the URL is a protocol-relative match. A protocol-relative match\n     * is a URL that starts with '//', and will be either http:// or https://\n     * based on the protocol that the site is loaded under.\n     */\n\n    /**\n     * @cfg {Boolean} stripPrefix (required)\n     * @inheritdoc Autolinker#cfg-stripPrefix\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.match.Match.prototype.constructor.call(this, cfg);\n      if (cfg.urlMatchType !== 'scheme' && cfg.urlMatchType !== 'www' && cfg.urlMatchType !== 'tld') throw new Error('`urlMatchType` cfg must be one of: \"scheme\", \"www\", or \"tld\"');\n      if (!cfg.url) throw new Error('`url` cfg required');\n      if (cfg.protocolUrlMatch == null) throw new Error('`protocolUrlMatch` cfg required');\n      if (cfg.protocolRelativeMatch == null) throw new Error('`protocolRelativeMatch` cfg required');\n      if (cfg.stripPrefix == null) throw new Error('`stripPrefix` cfg required');\n      this.urlMatchType = cfg.urlMatchType;\n      this.url = cfg.url;\n      this.protocolUrlMatch = cfg.protocolUrlMatch;\n      this.protocolRelativeMatch = cfg.protocolRelativeMatch;\n      this.stripPrefix = cfg.stripPrefix;\n    },\n\n    /**\n     * @private\n     * @property {RegExp} urlPrefixRegex\n     *\n     * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.\n     */\n    urlPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,\n\n    /**\n     * @private\n     * @property {RegExp} protocolRelativeRegex\n     *\n     * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n     * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n     */\n    protocolRelativeRegex: /^\\/\\//,\n\n    /**\n     * @private\n     * @property {Boolean} protocolPrepended\n     *\n     * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n     * {@link #url} did not have a protocol)\n     */\n    protocolPrepended: false,\n\n    /**\n     * Returns a string name for the type of match that this class represents.\n     *\n     * @return {String}\n     */\n    getType: function getType() {\n      return 'url';\n    },\n\n    /**\n     * Returns a string name for the type of URL match that this class\n     * represents.\n     *\n     * This helps to determine if the match was made in the original text with a\n     * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:\n     * 'www.google.com'), or was matched by a known top-level domain (ex:\n     * 'google.com').\n     *\n     * @return {\"scheme\"/\"www\"/\"tld\"}\n     */\n    getUrlMatchType: function getUrlMatchType() {\n      return this.urlMatchType;\n    },\n\n    /**\n     * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n     * match was missing a protocol.\n     *\n     * @return {String}\n     */\n    getUrl: function getUrl() {\n      var url = this.url; // if the url string doesn't begin with a protocol, assume 'http://'\n\n      if (!this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended) {\n        url = this.url = 'http://' + url;\n        this.protocolPrepended = true;\n      }\n\n      return url;\n    },\n\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorHref: function getAnchorHref() {\n      var url = this.getUrl();\n      return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n    },\n\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    getAnchorText: function getAnchorText() {\n      var anchorText = this.getMatchedText();\n\n      if (this.protocolRelativeMatch) {\n        // Strip off any protocol-relative '//' from the anchor text\n        anchorText = this.stripProtocolRelativePrefix(anchorText);\n      }\n\n      if (this.stripPrefix) {\n        anchorText = this.stripUrlPrefix(anchorText);\n      }\n\n      anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n\n      return anchorText;\n    },\n    // ---------------------------------------\n    // Utility Functionality\n\n    /**\n     * Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   url prefix (such as stripping off \"http://\")\n     * @return {String} The `anchorText`, with the prefix stripped.\n     */\n    stripUrlPrefix: function stripUrlPrefix(text) {\n      return text.replace(this.urlPrefixRegex, '');\n    },\n\n    /**\n     * Strips any protocol-relative '//' from the anchor text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   protocol-relative prefix (such as stripping off \"//\")\n     * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n     */\n    stripProtocolRelativePrefix: function stripProtocolRelativePrefix(text) {\n      return text.replace(this.protocolRelativeRegex, '');\n    },\n\n    /**\n     * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n     *\n     * @private\n     * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n     *   slash ('/') that may exist.\n     * @return {String} The `anchorText`, with the trailing slash removed.\n     */\n    removeTrailingSlash: function removeTrailingSlash(anchorText) {\n      if (anchorText.charAt(anchorText.length - 1) === '/') {\n        anchorText = anchorText.slice(0, -1);\n      }\n\n      return anchorText;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @abstract\n   * @class Autolinker.matcher.Matcher\n   *\n   * An abstract class and interface for individual matchers to find matches in\n   * an input string with linkified versions of them.\n   *\n   * Note that Matchers do not take HTML into account - they must be fed the text\n   * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n   */\n\n  Autolinker.matcher.Matcher = Autolinker.Util.extend(Object, {\n    /**\n     * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n     *\n     * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n     * for {@link Autolinker.match.Match Matches}.\n     */\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Matcher\n     *   instance, specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      if (!cfg.tagBuilder) throw new Error('`tagBuilder` cfg required');\n      this.tagBuilder = cfg.tagBuilder;\n    },\n\n    /**\n     * Parses the input `text` and returns the array of {@link Autolinker.match.Match Matches}\n     * for the matcher.\n     *\n     * @abstract\n     * @param {String} text The text to scan and replace matches in.\n     * @return {Autolinker.match.Match[]}\n     */\n    parseMatches: Autolinker.Util.abstractMethod\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.matcher.Email\n   * @extends Autolinker.matcher.Matcher\n   *\n   * Matcher to find email matches in an input string.\n   *\n   * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n   */\n\n  Autolinker.matcher.Email = Autolinker.Util.extend(Autolinker.matcher.Matcher, {\n    /**\n     * The regular expression to match email addresses. Example match:\n     *\n     *     person@place.com\n     *\n     * @private\n     * @property {RegExp} matcherRegex\n     */\n    matcherRegex: function () {\n      var alphaNumericChars = Autolinker.RegexLib.alphaNumericCharsStr,\n          emailRegex = new RegExp('[' + alphaNumericChars + '\\\\-_\\';:&=+$.,]+@'),\n          // something@ for email addresses (a.k.a. local-part)\n      domainNameRegex = Autolinker.RegexLib.domainNameRegex,\n          tldRegex = Autolinker.RegexLib.tldRegex; // match our known top level domains (TLDs)\n\n      return new RegExp([emailRegex.source, domainNameRegex.source, '\\\\.', tldRegex.source // '.com', '.net', etc\n      ].join(\"\"), 'gi');\n    }(),\n\n    /**\n     * @inheritdoc\n     */\n    parseMatches: function parseMatches(text) {\n      var matcherRegex = this.matcherRegex,\n          tagBuilder = this.tagBuilder,\n          matches = [],\n          match;\n\n      while ((match = matcherRegex.exec(text)) !== null) {\n        var matchedText = match[0];\n        matches.push(new Autolinker.match.Email({\n          tagBuilder: tagBuilder,\n          matchedText: matchedText,\n          offset: match.index,\n          email: matchedText\n        }));\n      }\n\n      return matches;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.matcher.Hashtag\n   * @extends Autolinker.matcher.Matcher\n   *\n   * Matcher to find Hashtag matches in an input string.\n   */\n\n  Autolinker.matcher.Hashtag = Autolinker.Util.extend(Autolinker.matcher.Matcher, {\n    /**\n     * @cfg {String} serviceName\n     *\n     * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n     * for available values.\n     */\n\n    /**\n     * The regular expression to match Hashtags. Example match:\n     *\n     *     #asdf\n     *\n     * @private\n     * @property {RegExp} matcherRegex\n     */\n    matcherRegex: new RegExp('#[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,139}', 'g'),\n\n    /**\n     * The regular expression to use to check the character before a username match to\n     * make sure we didn't accidentally match an email address.\n     *\n     * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n     *\n     * @private\n     * @property {RegExp} nonWordCharRegex\n     */\n    nonWordCharRegex: new RegExp('[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']'),\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     *   specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.matcher.Matcher.prototype.constructor.call(this, cfg);\n      this.serviceName = cfg.serviceName;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    parseMatches: function parseMatches(text) {\n      var matcherRegex = this.matcherRegex,\n          nonWordCharRegex = this.nonWordCharRegex,\n          serviceName = this.serviceName,\n          tagBuilder = this.tagBuilder,\n          matches = [],\n          match;\n\n      while ((match = matcherRegex.exec(text)) !== null) {\n        var offset = match.index,\n            prevChar = text.charAt(offset - 1); // If we found the match at the beginning of the string, or we found the match\n        // and there is a whitespace char in front of it (meaning it is not a '#' char\n        // in the middle of a word), then it is a hashtag match.\n\n        if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n          var matchedText = match[0],\n              hashtag = match[0].slice(1); // strip off the '#' character at the beginning\n\n          matches.push(new Autolinker.match.Hashtag({\n            tagBuilder: tagBuilder,\n            matchedText: matchedText,\n            offset: offset,\n            serviceName: serviceName,\n            hashtag: hashtag\n          }));\n        }\n      }\n\n      return matches;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.matcher.Phone\n   * @extends Autolinker.matcher.Matcher\n   *\n   * Matcher to find Phone number matches in an input string.\n   *\n   * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more\n   * details.\n   */\n\n  Autolinker.matcher.Phone = Autolinker.Util.extend(Autolinker.matcher.Matcher, {\n    /**\n     * The regular expression to match Phone numbers. Example match:\n     *\n     *     (123) 456-7890\n     *\n     * This regular expression has the following capturing groups:\n     *\n     * 1. The prefixed '+' sign, if there is one.\n     *\n     * @private\n     * @property {RegExp} matcherRegex\n     */\n    matcherRegex: /(?:(\\+)?\\d{1,3}[-\\040.])?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]\\d{4}/g,\n    // ex: (123) 456-7890, 123 456 7890, 123-456-7890, etc.\n\n    /**\n     * @inheritdoc\n     */\n    parseMatches: function parseMatches(text) {\n      var matcherRegex = this.matcherRegex,\n          tagBuilder = this.tagBuilder,\n          matches = [],\n          match;\n\n      while ((match = matcherRegex.exec(text)) !== null) {\n        // Remove non-numeric values from phone number string\n        var matchedText = match[0],\n            cleanNumber = matchedText.replace(/\\D/g, ''),\n            // strip out non-digit characters\n        plusSign = !!match[1]; // match[ 1 ] is the prefixed plus sign, if there is one\n\n        matches.push(new Autolinker.match.Phone({\n          tagBuilder: tagBuilder,\n          matchedText: matchedText,\n          offset: match.index,\n          number: cleanNumber,\n          plusSign: plusSign\n        }));\n      }\n\n      return matches;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.matcher.Twitter\n   * @extends Autolinker.matcher.Matcher\n   *\n   * Matcher to find/replace username matches in an input string.\n   */\n\n  Autolinker.matcher.Twitter = Autolinker.Util.extend(Autolinker.matcher.Matcher, {\n    /**\n     * The regular expression to match username handles. Example match:\n     *\n     *     @asdf\n     *\n     * @private\n     * @property {RegExp} matcherRegex\n     */\n    matcherRegex: new RegExp('@[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,20}', 'g'),\n\n    /**\n     * The regular expression to use to check the character before a username match to\n     * make sure we didn't accidentally match an email address.\n     *\n     * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n     *\n     * @private\n     * @property {RegExp} nonWordCharRegex\n     */\n    nonWordCharRegex: new RegExp('[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']'),\n\n    /**\n     * @inheritdoc\n     */\n    parseMatches: function parseMatches(text) {\n      var matcherRegex = this.matcherRegex,\n          nonWordCharRegex = this.nonWordCharRegex,\n          tagBuilder = this.tagBuilder,\n          matches = [],\n          match;\n\n      while ((match = matcherRegex.exec(text)) !== null) {\n        var offset = match.index,\n            prevChar = text.charAt(offset - 1); // If we found the match at the beginning of the string, or we found the match\n        // and there is a whitespace char in front of it (meaning it is not an email\n        // address), then it is a username match.\n\n        if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n          var matchedText = match[0],\n              twitterHandle = match[0].slice(1); // strip off the '@' character at the beginning\n\n          matches.push(new Autolinker.match.Twitter({\n            tagBuilder: tagBuilder,\n            matchedText: matchedText,\n            offset: offset,\n            twitterHandle: twitterHandle\n          }));\n        }\n      }\n\n      return matches;\n    }\n  });\n  /*global Autolinker */\n\n  /**\n   * @class Autolinker.matcher.Url\n   * @extends Autolinker.matcher.Matcher\n   *\n   * Matcher to find URL matches in an input string.\n   *\n   * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n   */\n\n  Autolinker.matcher.Url = Autolinker.Util.extend(Autolinker.matcher.Matcher, {\n    /**\n     * @cfg {Boolean} stripPrefix (required)\n     * @inheritdoc Autolinker#stripPrefix\n     */\n\n    /**\n     * @private\n     * @property {RegExp} matcherRegex\n     *\n     * The regular expression to match URLs with an optional scheme, port\n     * number, path, query string, and hash anchor.\n     *\n     * Example matches:\n     *\n     *     http://google.com\n     *     www.google.com\n     *     google.com/path/to/file?q1=1&q2=2#myAnchor\n     *\n     *\n     * This regular expression will have the following capturing groups:\n     *\n     * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').\n     *     This is used to match scheme URLs with just a single word, such as\n     *     'http://localhost', where we won't double check that the domain name\n     *     has at least one dot ('.') in it.\n     * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the\n     *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by\n     *     'http://', 'ftp:', etc.)\n     * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n     *     URL. Will be an empty string if it is not a protocol-relative match.\n     *     We need to know the character before the '//' in order to determine\n     *     if it is a valid match or the // was in a string we don't want to\n     *     auto-link.\n     * 4.  Group that matches a known TLD (top level domain), when a scheme\n     *     or 'www.'-prefixed domain is not matched.\n     * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed\n     *     URL. Will be an empty string if it is not a protocol-relative match.\n     *     See #3 for more info.\n     */\n    matcherRegex: function () {\n      var schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]*:(?![A-Za-z][-.+A-Za-z0-9]*:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,\n          // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n      wwwRegex = /(?:www\\.)/,\n          // starting with 'www.'\n      domainNameRegex = Autolinker.RegexLib.domainNameRegex,\n          tldRegex = Autolinker.RegexLib.tldRegex,\n          // match our known top level domains (TLDs)\n      alphaNumericCharsStr = Autolinker.RegexLib.alphaNumericCharsStr,\n          // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n      // http://blog.codinghorror.com/the-problem-with-urls/\n      urlSuffixRegex = new RegExp('[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]?!:,.;]*[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]]');\n      return new RegExp(['(?:', // parens to cover match for scheme (optional), and domain\n      '(', // *** Capturing group $1, for a scheme-prefixed url (ex: http://google.com)\n      schemeRegex.source, domainNameRegex.source, ')', '|', '(', // *** Capturing group $2, for a 'www.' prefixed url (ex: www.google.com)\n      '(//)?', // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n      wwwRegex.source, domainNameRegex.source, ')', '|', '(', // *** Capturing group $4, for known a TLD url (ex: google.com)\n      '(//)?', // *** Capturing group $5 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n      domainNameRegex.source + '\\\\.', tldRegex.source, ')', ')', '(?:' + urlSuffixRegex.source + ')?' // match for path, query string, and/or hash anchor - optional\n      ].join(\"\"), 'gi');\n    }(),\n\n    /**\n     * A regular expression to use to check the character before a protocol-relative\n     * URL match. We don't want to match a protocol-relative URL if it is part\n     * of another word.\n     *\n     * For example, we want to match something like \"Go to: //google.com\",\n     * but we don't want to match something like \"abc//google.com\"\n     *\n     * This regular expression is used to test the character before the '//'.\n     *\n     * @private\n     * @type {RegExp} wordCharRegExp\n     */\n    wordCharRegExp: /\\w/,\n\n    /**\n     * The regular expression to match opening parenthesis in a URL match.\n     *\n     * This is to determine if we have unbalanced parenthesis in the URL, and to\n     * drop the final parenthesis that was matched if so.\n     *\n     * Ex: The text \"(check out: wikipedia.com/something_(disambiguation))\"\n     * should only autolink the inner \"wikipedia.com/something_(disambiguation)\"\n     * part, so if we find that we have unbalanced parenthesis, we will drop the\n     * last one for the match.\n     *\n     * @private\n     * @property {RegExp}\n     */\n    openParensRe: /\\(/g,\n\n    /**\n     * The regular expression to match closing parenthesis in a URL match. See\n     * {@link #openParensRe} for more information.\n     *\n     * @private\n     * @property {RegExp}\n     */\n    closeParensRe: /\\)/g,\n\n    /**\n     * @constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     *   specified in an Object (map).\n     */\n    constructor: function constructor(cfg) {\n      Autolinker.matcher.Matcher.prototype.constructor.call(this, cfg);\n      this.stripPrefix = cfg.stripPrefix;\n      if (this.stripPrefix == null) throw new Error('`stripPrefix` cfg required');\n    },\n\n    /**\n     * @inheritdoc\n     */\n    parseMatches: function parseMatches(text) {\n      var matcherRegex = this.matcherRegex,\n          stripPrefix = this.stripPrefix,\n          tagBuilder = this.tagBuilder,\n          matches = [],\n          match;\n\n      while ((match = matcherRegex.exec(text)) !== null) {\n        var matchStr = match[0],\n            schemeUrlMatch = match[1],\n            wwwUrlMatch = match[2],\n            wwwProtocolRelativeMatch = match[3],\n            //tldUrlMatch = match[ 4 ],  -- not needed at the moment\n        tldProtocolRelativeMatch = match[5],\n            offset = match.index,\n            protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,\n            prevChar = text.charAt(offset - 1);\n\n        if (!Autolinker.matcher.UrlMatchValidator.isValid(matchStr, schemeUrlMatch)) {\n          continue;\n        } // If the match is preceded by an '@' character, then it is either\n        // an email address or a username. Skip these types of matches.\n\n\n        if (offset > 0 && prevChar === '@') {\n          continue;\n        } // If it's a protocol-relative '//' match, but the character before the '//'\n        // was a word character (i.e. a letter/number), then we found the '//' in the\n        // middle of another word (such as \"asdf//asdf.com\"). In this case, skip the\n        // match.\n\n\n        if (offset > 0 && protocolRelativeMatch && this.wordCharRegExp.test(prevChar)) {\n          continue;\n        } // Handle a closing parenthesis at the end of the match, and exclude\n        // it if there is not a matching open parenthesis in the match\n        // itself.\n\n\n        if (this.matchHasUnbalancedClosingParen(matchStr)) {\n          matchStr = matchStr.substr(0, matchStr.length - 1); // remove the trailing \")\"\n        } else {\n          // Handle an invalid character after the TLD\n          var pos = this.matchHasInvalidCharAfterTld(matchStr, schemeUrlMatch);\n\n          if (pos > -1) {\n            matchStr = matchStr.substr(0, pos); // remove the trailing invalid chars\n          }\n        }\n\n        var urlMatchType = schemeUrlMatch ? 'scheme' : wwwUrlMatch ? 'www' : 'tld',\n            protocolUrlMatch = !!schemeUrlMatch;\n        matches.push(new Autolinker.match.Url({\n          tagBuilder: tagBuilder,\n          matchedText: matchStr,\n          offset: offset,\n          urlMatchType: urlMatchType,\n          url: matchStr,\n          protocolUrlMatch: protocolUrlMatch,\n          protocolRelativeMatch: !!protocolRelativeMatch,\n          stripPrefix: stripPrefix\n        }));\n      }\n\n      return matches;\n    },\n\n    /**\n     * Determines if a match found has an unmatched closing parenthesis. If so,\n     * this parenthesis will be removed from the match itself, and appended\n     * after the generated anchor tag.\n     *\n     * A match may have an extra closing parenthesis at the end of the match\n     * because the regular expression must include parenthesis for URLs such as\n     * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n     *\n     * However, an extra parenthesis *will* be included when the URL itself is\n     * wrapped in parenthesis, such as in the case of \"(wikipedia.com/something_(disambiguation))\".\n     * In this case, the last closing parenthesis should *not* be part of the\n     * URL itself, and this method will return `true`.\n     *\n     * @private\n     * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n     * @return {Boolean} `true` if there is an unbalanced closing parenthesis at\n     *   the end of the `matchStr`, `false` otherwise.\n     */\n    matchHasUnbalancedClosingParen: function matchHasUnbalancedClosingParen(matchStr) {\n      var lastChar = matchStr.charAt(matchStr.length - 1);\n\n      if (lastChar === ')') {\n        var openParensMatch = matchStr.match(this.openParensRe),\n            closeParensMatch = matchStr.match(this.closeParensRe),\n            numOpenParens = openParensMatch && openParensMatch.length || 0,\n            numCloseParens = closeParensMatch && closeParensMatch.length || 0;\n\n        if (numOpenParens < numCloseParens) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Determine if there's an invalid character after the TLD in a URL. Valid\n     * characters after TLD are ':/?#'. Exclude scheme matched URLs from this\n     * check.\n     *\n     * @private\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} schemeUrlMatch The match URL string for a scheme\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Number} the position where the invalid character was found. If\n     *   no such character was found, returns -1\n     */\n    matchHasInvalidCharAfterTld: function matchHasInvalidCharAfterTld(urlMatch, schemeUrlMatch) {\n      if (!urlMatch) {\n        return -1;\n      }\n\n      var offset = 0;\n\n      if (schemeUrlMatch) {\n        offset = urlMatch.indexOf(':');\n        urlMatch = urlMatch.slice(offset);\n      }\n\n      var re = /^((.?\\/\\/)?[A-Za-z0-9\\u00C0-\\u017F\\.\\-]*[A-Za-z0-9\\u00C0-\\u017F\\-]\\.[A-Za-z]+)/;\n      var res = re.exec(urlMatch);\n\n      if (res === null) {\n        return -1;\n      }\n\n      offset += res[1].length;\n      urlMatch = urlMatch.slice(res[1].length);\n\n      if (/^[^.A-Za-z:\\/?#]/.test(urlMatch)) {\n        return offset;\n      }\n\n      return -1;\n    }\n  });\n  /*global Autolinker */\n\n  /*jshint scripturl:true */\n\n  /**\n   * @private\n   * @class Autolinker.matcher.UrlMatchValidator\n   * @singleton\n   *\n   * Used by Autolinker to filter out false URL positives from the\n   * {@link Autolinker.matcher.Url UrlMatcher}.\n   *\n   * Due to the limitations of regular expressions (including the missing feature\n   * of look-behinds in JS regular expressions), we cannot always determine the\n   * validity of a given match. This class applies a bit of additional logic to\n   * filter out any false positives that have been matched by the\n   * {@link Autolinker.matcher.Url UrlMatcher}.\n   */\n\n  Autolinker.matcher.UrlMatchValidator = {\n    /**\n     * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'\n     *\n     * @private\n     * @property {RegExp} hasFullProtocolRegex\n     */\n    hasFullProtocolRegex: /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//,\n\n    /**\n     * Regex to find the URI scheme, such as 'mailto:'.\n     *\n     * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n     *\n     * @private\n     * @property {RegExp} uriSchemeRegex\n     */\n    uriSchemeRegex: /^[A-Za-z][-.+A-Za-z0-9]*:/,\n\n    /**\n     * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n     *\n     * @private\n     * @property {RegExp} hasWordCharAfterProtocolRegex\n     */\n    hasWordCharAfterProtocolRegex: /:[^\\s]*?[A-Za-z\\u00C0-\\u017F]/,\n\n    /**\n     * Regex to determine if the string is a valid IP address\n     *\n     * @private\n     * @property {RegExp} ipRegex\n     */\n    ipRegex: /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/,\n\n    /**\n     * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}\n     * is valid. Will return `false` for:\n     *\n     * 1) URL matches which do not have at least have one period ('.') in the\n     *    domain name (effectively skipping over matches like \"abc:def\").\n     *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n     * 2) URL matches which do not have at least one word character in the\n     *    domain name (effectively skipping over matches like \"git:1.0\").\n     * 3) A protocol-relative url match (a URL beginning with '//') whose\n     *    previous character is a word character (effectively skipping over\n     *    strings like \"abc//google.com\")\n     *\n     * Otherwise, returns `true`.\n     *\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Boolean} `true` if the match given is valid and should be\n     *   processed, or `false` if the match is invalid and/or should just not be\n     *   processed.\n     */\n    isValid: function isValid(urlMatch, protocolUrlMatch) {\n      if (protocolUrlMatch && !this.isValidUriScheme(protocolUrlMatch) || this.urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n      this.urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n      !this.isValidIpAddress(urlMatch) // Except if it's an IP address\n      ) {\n        return false;\n      }\n\n      return true;\n    },\n    isValidIpAddress: function isValidIpAddress(uriSchemeMatch) {\n      var newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);\n      var uriScheme = uriSchemeMatch.match(newRegex);\n      return uriScheme !== null;\n    },\n\n    /**\n     * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n     * `false` if the scheme is 'javascript:' or 'vbscript:'\n     *\n     * @private\n     * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n     *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n     * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n     */\n    isValidUriScheme: function isValidUriScheme(uriSchemeMatch) {\n      var uriScheme = uriSchemeMatch.match(this.uriSchemeRegex)[0].toLowerCase();\n      return uriScheme !== 'javascript:' && uriScheme !== 'vbscript:';\n    },\n\n    /**\n     * Determines if a URL match does not have either:\n     *\n     * a) a full protocol (i.e. 'http://'), or\n     * b) at least one dot ('.') in the domain name (for a non-full-protocol\n     *    match).\n     *\n     * Either situation is considered an invalid URL (ex: 'git:d' does not have\n     * either the '://' part, or at least one dot in the domain name. If the\n     * match was 'git:abc.com', we would consider this valid.)\n     *\n     * @private\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Boolean} `true` if the URL match does not have a full protocol,\n     *   or at least one dot ('.') in a non-full-protocol match.\n     */\n    urlMatchDoesNotHaveProtocolOrDot: function urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) {\n      return !!urlMatch && (!protocolUrlMatch || !this.hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1;\n    },\n\n    /**\n     * Determines if a URL match does not have at least one word character after\n     * the protocol (i.e. in the domain name).\n     *\n     * At least one letter character must exist in the domain name after a\n     * protocol match. Ex: skip over something like \"git:1.0\"\n     *\n     * @private\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n     *   have a protocol in the URL string, in order to check for a word\n     *   character after the protocol separator (':').\n     * @return {Boolean} `true` if the URL match does not have at least one word\n     *   character in it after the protocol, `false` otherwise.\n     */\n    urlMatchDoesNotHaveAtLeastOneWordChar: function urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) {\n      if (urlMatch && protocolUrlMatch) {\n        return !this.hasWordCharAfterProtocolRegex.test(urlMatch);\n      } else {\n        return false;\n      }\n    }\n  };\n  /*global Autolinker */\n\n  /**\n   * A truncation feature where the ellipsis will be placed at the end of the URL.\n   *\n   * @param {String} anchorText\n   * @param {Number} truncateLen The maximum length of the truncated output URL string.\n   * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\".\n   * @return {String} The truncated URL.\n   */\n\n  Autolinker.truncate.TruncateEnd = function (anchorText, truncateLen, ellipsisChars) {\n    return Autolinker.Util.ellipsis(anchorText, truncateLen, ellipsisChars);\n  };\n  /*global Autolinker */\n\n  /**\n   * Date: 2015-10-05\n   * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n   *\n   * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.\n   *\n   * @param {String} url             A URL.\n   * @param {Number} truncateLen     The maximum length of the truncated output URL string.\n   * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\".\n   * @return {String} The truncated URL.\n   */\n\n\n  Autolinker.truncate.TruncateMiddle = function (url, truncateLen, ellipsisChars) {\n    if (url.length <= truncateLen) {\n      return url;\n    }\n\n    var availableLength = truncateLen - ellipsisChars.length;\n    var end = \"\";\n\n    if (availableLength > 0) {\n      end = url.substr(-1 * Math.floor(availableLength / 2));\n    }\n\n    return (url.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, truncateLen);\n  };\n  /*global Autolinker */\n\n  /**\n   * Date: 2015-10-05\n   * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n   *\n   * A truncation feature, where the ellipsis will be placed at a section within\n   * the URL making it still somewhat human readable.\n   *\n   * @param {String} url\t\t\t\t\t\t A URL.\n   * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n   * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"..\".\n   * @return {String} The truncated URL.\n   */\n\n\n  Autolinker.truncate.TruncateSmart = function (url, truncateLen, ellipsisChars) {\n    var parse_url = function parse_url(url) {\n      // Functionality inspired by PHP function of same name\n      var urlObj = {};\n      var urlSub = url;\n      var match = urlSub.match(/^([a-z]+):\\/\\//i);\n\n      if (match) {\n        urlObj.scheme = match[1];\n        urlSub = urlSub.substr(match[0].length);\n      }\n\n      match = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n\n      if (match) {\n        urlObj.host = match[1];\n        urlSub = urlSub.substr(match[0].length);\n      }\n\n      match = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n\n      if (match) {\n        urlObj.path = match[1];\n        urlSub = urlSub.substr(match[0].length);\n      }\n\n      match = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n\n      if (match) {\n        urlObj.query = match[1];\n        urlSub = urlSub.substr(match[0].length);\n      }\n\n      match = urlSub.match(/^#(.*?)$/i);\n\n      if (match) {\n        urlObj.fragment = match[1]; //urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n      }\n\n      return urlObj;\n    };\n\n    var buildUrl = function buildUrl(urlObj) {\n      var url = \"\";\n\n      if (urlObj.scheme && urlObj.host) {\n        url += urlObj.scheme + \"://\";\n      }\n\n      if (urlObj.host) {\n        url += urlObj.host;\n      }\n\n      if (urlObj.path) {\n        url += \"/\" + urlObj.path;\n      }\n\n      if (urlObj.query) {\n        url += \"?\" + urlObj.query;\n      }\n\n      if (urlObj.fragment) {\n        url += \"#\" + urlObj.fragment;\n      }\n\n      return url;\n    };\n\n    var buildSegment = function buildSegment(segment, remainingAvailableLength) {\n      var remainingAvailableLengthHalf = remainingAvailableLength / 2,\n          startOffset = Math.ceil(remainingAvailableLengthHalf),\n          endOffset = -1 * Math.floor(remainingAvailableLengthHalf),\n          end = \"\";\n\n      if (endOffset < 0) {\n        end = segment.substr(endOffset);\n      }\n\n      return segment.substr(0, startOffset) + ellipsisChars + end;\n    };\n\n    if (url.length <= truncateLen) {\n      return url;\n    }\n\n    var availableLength = truncateLen - ellipsisChars.length;\n    var urlObj = parse_url(url); // Clean up the URL\n\n    if (urlObj.query) {\n      var matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n\n      if (matchQuery) {\n        // Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n        urlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n        url = buildUrl(urlObj);\n      }\n    }\n\n    if (url.length <= truncateLen) {\n      return url;\n    }\n\n    if (urlObj.host) {\n      urlObj.host = urlObj.host.replace(/^www\\./, \"\");\n      url = buildUrl(urlObj);\n    }\n\n    if (url.length <= truncateLen) {\n      return url;\n    } // Process and build the URL\n\n\n    var str = \"\";\n\n    if (urlObj.host) {\n      str += urlObj.host;\n    }\n\n    if (str.length >= availableLength) {\n      if (urlObj.host.length == truncateLen) {\n        return (urlObj.host.substr(0, truncateLen - ellipsisChars.length) + ellipsisChars).substr(0, truncateLen);\n      }\n\n      return buildSegment(str, availableLength).substr(0, truncateLen);\n    }\n\n    var pathAndQuery = \"\";\n\n    if (urlObj.path) {\n      pathAndQuery += \"/\" + urlObj.path;\n    }\n\n    if (urlObj.query) {\n      pathAndQuery += \"?\" + urlObj.query;\n    }\n\n    if (pathAndQuery) {\n      if ((str + pathAndQuery).length >= availableLength) {\n        if ((str + pathAndQuery).length == truncateLen) {\n          return (str + pathAndQuery).substr(0, truncateLen);\n        }\n\n        var remainingAvailableLength = availableLength - str.length;\n        return (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, truncateLen);\n      } else {\n        str += pathAndQuery;\n      }\n    }\n\n    if (urlObj.fragment) {\n      var fragment = \"#\" + urlObj.fragment;\n\n      if ((str + fragment).length >= availableLength) {\n        if ((str + fragment).length == truncateLen) {\n          return (str + fragment).substr(0, truncateLen);\n        }\n\n        var remainingAvailableLength2 = availableLength - str.length;\n        return (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, truncateLen);\n      } else {\n        str += fragment;\n      }\n    }\n\n    if (urlObj.scheme && urlObj.host) {\n      var scheme = urlObj.scheme + \"://\";\n\n      if ((str + scheme).length < availableLength) {\n        return (scheme + str).substr(0, truncateLen);\n      }\n    }\n\n    if (str.length <= truncateLen) {\n      return str;\n    }\n\n    var end = \"\";\n\n    if (availableLength > 0) {\n      end = str.substr(-1 * Math.floor(availableLength / 2));\n    }\n\n    return (str.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, truncateLen);\n  };\n\n  return Autolinker;\n});","'use strict';\n/**\n * Local dependencies\n */\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar Ruler = require('./ruler');\n\nvar StateBlock = require('./rules_block/state_block');\n/**\n * Parser rules\n */\n\n\nvar _rules = [['code', require('./rules_block/code')], ['fences', require('./rules_block/fences'), ['paragraph', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'blockquote']], ['footnote', require('./rules_block/footnote'), ['paragraph']], ['heading', require('./rules_block/heading'), ['paragraph', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['htmlblock', require('./rules_block/htmlblock'), ['paragraph', 'blockquote']], ['table', require('./rules_block/table'), ['paragraph']], ['deflist', require('./rules_block/deflist'), ['paragraph']], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n}\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        break;\n      }\n    } // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++; // two empty lines should stop the parser in list mode\n\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) {\n        break;\n      }\n\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE = /\\u00a0/g;\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state,\n      lineStart = 0,\n      lastTabPos = 0;\n\n  if (!str) {\n    return [];\n  } // Normalize spaces\n\n\n  str = str.replace(SPACES_RE, ' '); // Normalize newlines\n\n  str = str.replace(NEWLINES_RE, '\\n'); // Replace tabs with proper number of spaces (1..4)\n\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n/**\n * Expose `ParserBlock`\n */\n\n\nmodule.exports = ParserBlock;","// Parser state class\n'use strict';\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n  this.src = src; // Shortcuts to simplify nested calls\n\n  this.parser = parser;\n  this.options = options;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // indent for each line\n  // block parser variables\n\n  this.blkIndent = 0; // required block content indent\n  // (for example, if we are in list)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20\n      /* space */\n      ) {\n          indent++;\n          continue;\n        } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20\n    /* space */\n    ) {\n        break;\n      }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      first,\n      last,\n      queue,\n      shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  } // Opt: don't use push queue for single line;\n\n\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n\n    if (shift > indent) {\n      shift = indent;\n    }\n\n    if (shift < 0) {\n      shift = 0;\n    }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\nmodule.exports = StateBlock;","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  return true;\n};","// fences (``` lang, ~~~ lang)\n'use strict';\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nmodule.exports = function fences(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) {\n    return false;\n  } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.tShift[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  return true;\n};","// Block quotes\n'use strict';\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine,\n      lastLineEmpty,\n      oldTShift,\n      oldBMarks,\n      oldIndent,\n      oldParentType,\n      lines,\n      terminatorRules,\n      i,\n      l,\n      terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos++) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  } // skip one optional space after '>'\n\n\n  if (state.src.charCodeAt(pos) === 0x20) {\n    pos++;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  oldBMarks = [state.bMarks[startLine]];\n  state.bMarks[startLine] = pos; // check if we have an empty blockquote\n\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n  oldTShift = [state.tShift[startLine]];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n  terminatorRules = state.parser.ruler.getRules('blockquote'); // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    ) {\n        // This line is inside the blockquote.\n        // skip one optional space after '>'\n        if (state.src.charCodeAt(pos) === 0x20) {\n          pos++;\n        }\n\n        oldBMarks.push(state.bMarks[nextLine]);\n        state.bMarks[nextLine] = pos;\n        pos = pos < max ? state.skipSpaces(pos) : pos;\n        lastLineEmpty = pos >= max;\n        oldTShift.push(state.tShift[nextLine]);\n        state.tShift[nextLine] = pos - state.bMarks[nextLine];\n        continue;\n      } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]); // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [startLine, 0],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Horizontal rule\n'use strict';\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n  pos += state.tShift[startLine];\n\n  if (pos > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 one\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && ch !== 0x20\n    /* space */\n    ) {\n        return false;\n      }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  return true;\n};","// Lists\n'use strict'; // Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) {\n    return -1;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20\n  /* space */\n  ) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i,\n      l,\n      terminate; // Detect list type and position after marker\n\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n  if (silent) {\n    return true;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [startLine, 0],\n      level: state.level++\n    });\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [startLine, 0],\n      level: state.level++\n    });\n  } //\n  // Iterate list items\n  //\n\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n\n\n    if (indentAfterMarker < 1) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = posAfterMarker - state.bMarks[nextLine] + indentAfterMarker; // Run subparser & write tokens\n\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [startLine, 0],\n      level: state.level++\n    });\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n    state.parser.tokenize(state, startLine, endLine, true); // If any of list item is tight, mark list as tight\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) {\n      break;\n    }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.tShift[nextLine] < state.blkIndent) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finilize list\n\n\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n  state.line = nextLine; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","// Process footnote reference list\n'use strict';\n\nmodule.exports = function footnote(state, startLine, endLine, silent) {\n  var oldBMark,\n      oldTShift,\n      oldParentType,\n      pos,\n      label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // line should be at least 5 chars - \"[^x]:\"\n\n  if (start + 4 > max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(start + 1) !== 0x5E\n  /* ^ */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    ) {\n        break;\n      }\n  }\n\n  if (pos === start + 2) {\n    return false;\n  } // no empty footnote labels\n\n\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return true;\n  }\n\n  pos++;\n\n  if (!state.env.footnotes) {\n    state.env.footnotes = {};\n  }\n\n  if (!state.env.footnotes.refs) {\n    state.env.footnotes.refs = {};\n  }\n\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n  return true;\n};","// heading (#, ##, ...)\n'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && ch !== 0x20\n  /* space */\n  ) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20\n  /* space */\n  ) {\n      max = tmp;\n    }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: level,\n    lines: [startLine, state.line],\n    level: state.level\n  }); // only if header is not empty\n\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [startLine, state.line],\n      children: []\n    });\n  }\n\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: level,\n    level: state.level\n  });\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var marker,\n      pos,\n      max,\n      next = startLine + 1;\n\n  if (next >= endLine) {\n    return false;\n  }\n\n  if (state.tShift[next] < state.blkIndent) {\n    return false;\n  } // Scan next line\n\n\n  if (state.tShift[next] - state.blkIndent > 3) {\n    return false;\n  }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D\n  /* - */\n  && marker !== 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  pos = state.skipChars(pos, marker);\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) {\n    return false;\n  }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D\n    /* = */\n    ? 1 : 2,\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [startLine, state.line - 1],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D\n    /* = */\n    ? 1 : 2,\n    level: state.level\n  });\n  return true;\n};","// HTML block\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function htmlblock(state, startLine, endLine, silent) {\n  var ch,\n      match,\n      nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n  pos += shift;\n\n  if (!state.options.html) {\n    return false;\n  }\n\n  if (shift > 3 || pos + 2 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21\n  /* ! */\n  || ch === 0x3F\n  /* ? */\n  ) {\n      // Directive start / comment start / processing instruction start\n      if (silent) {\n        return true;\n      }\n    } else if (ch === 0x2F\n  /* / */\n  || isLetter(ch)) {\n    // Probably start or end of tag\n    if (ch === 0x2F\n    /* \\ */\n    ) {\n        // closing tag\n        match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n\n        if (!match) {\n          return false;\n        }\n      } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n\n      if (!match) {\n        return false;\n      }\n    } // Make sure tag name is valid\n\n\n    if (block_names[match[1].toLowerCase()] !== true) {\n      return false;\n    }\n\n    if (silent) {\n      return true;\n    }\n  } else {\n    return false;\n  } // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n\n\n  nextLine = startLine + 1;\n\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [startLine, state.line],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nvar html_blocks = {};\n['article', 'aside', 'button', 'blockquote', 'body', 'canvas', 'caption', 'col', 'colgroup', 'dd', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'iframe', 'li', 'map', 'object', 'ol', 'output', 'p', 'pre', 'progress', 'script', 'section', 'style', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'tr', 'thead', 'ul', 'video'].forEach(function (name) {\n  html_blocks[name] = true;\n});\nmodule.exports = html_blocks;","// GFM table, non-standard\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n  return state.src.substr(pos, max - pos);\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell, aligns, t, tableLines, tbodyLines; // should have at least three lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) {\n    return false;\n  } // first character of the second line should be '|' or '-'\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x7C\n  /* | */\n  && ch !== 0x2D\n  /* - */\n  && ch !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  lineText = getLine(state, startLine + 1);\n\n  if (!/^[-:| ]+$/.test(lineText)) {\n    return false;\n  }\n\n  rows = lineText.split('|');\n\n  if (rows <= 2) {\n    return false;\n  }\n\n  aligns = [];\n\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n  if (aligns.length !== rows.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [startLine, 0],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [startLine, startLine + 1],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [startLine, startLine + 1],\n    level: state.level++\n  });\n\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [startLine, startLine + 1],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [startLine, startLine + 1],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({\n      type: 'th_close',\n      level: --state.level\n    });\n  }\n\n  state.tokens.push({\n    type: 'tr_close',\n    level: --state.level\n  });\n  state.tokens.push({\n    type: 'thead_close',\n    level: --state.level\n  });\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [startLine + 2, 0],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (lineText.indexOf('|') === -1) {\n      break;\n    }\n\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n    state.tokens.push({\n      type: 'tr_open',\n      level: state.level++\n    });\n\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({\n        type: 'td_open',\n        align: aligns[i],\n        level: state.level++\n      }); // 0x7c === '|'\n\n      cell = rows[i].substring(rows[i].charCodeAt(0) === 0x7c ? 1 : 0, rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({\n        type: 'td_close',\n        level: --state.level\n      });\n    }\n\n    state.tokens.push({\n      type: 'tr_close',\n      level: --state.level\n    });\n  }\n\n  state.tokens.push({\n    type: 'tbody_close',\n    level: --state.level\n  });\n  state.tokens.push({\n    type: 'table_close',\n    level: --state.level\n  });\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};","// Definition lists\n'use strict'; // Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nfunction skipMarker(state, line) {\n  var pos,\n      marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) {\n    return -1;\n  } // Check bullet\n\n\n  marker = state.src.charCodeAt(start++);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x3A\n  /* : */\n  ) {\n      return -1;\n    }\n\n  pos = state.skipSpaces(start); // require space after \":\"\n\n  if (start === pos) {\n    return -1;\n  } // no empty definitions, e.g. \"  : \"\n\n\n  if (pos >= max) {\n    return -1;\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function deflist(state, startLine, endLine, silent) {\n  var contentStart, ddLine, dtLine, itemLines, listLines, listTokIdx, nextLine, oldIndent, oldDDIndent, oldParentType, oldTShift, oldTight, prevEmptyEnd, tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) {\n      return false;\n    }\n\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) {\n      return false;\n    }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  contentStart = skipMarker(state, nextLine);\n\n  if (contentStart < 0) {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [startLine, 0],\n    level: state.level++\n  }); //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine; // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n\n  /*eslint no-labels:0,block-scoped-var:0*/\n\n  OUTER: for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [dtLine, dtLine],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [dtLine, dtLine],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [nextLine, 0],\n        level: state.level++\n      });\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n      state.parser.tokenize(state, ddLine, endLine, true); // If any of list item is tight, mark list as tight\n\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      } // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n\n\n      prevEmptyEnd = state.line - ddLine > 1 && state.isEmpty(state.line - 1);\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) {\n        break OUTER;\n      }\n\n      if (state.tShift[nextLine] < state.blkIndent) {\n        break OUTER;\n      }\n\n      contentStart = skipMarker(state, nextLine);\n\n      if (contentStart < 0) {\n        break;\n      }\n\n      ddLine = nextLine; // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) {\n      break;\n    }\n\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) {\n      break;\n    }\n\n    if (state.tShift[dtLine] < state.blkIndent) {\n      break;\n    }\n\n    ddLine = dtLine + 1;\n\n    if (ddLine >= endLine) {\n      break;\n    }\n\n    if (state.isEmpty(ddLine)) {\n      ddLine++;\n    }\n\n    if (ddLine >= endLine) {\n      break;\n    }\n\n    if (state.tShift[ddLine] < state.blkIndent) {\n      break;\n    }\n\n    contentStart = skipMarker(state, ddLine);\n\n    if (contentStart < 0) {\n      break;\n    } // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n\n  } // Finilize list\n\n\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n  state.line = nextLine; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","// Paragraph\n'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nmodule.exports = function paragraph(state, startLine\n/*, endLine*/\n) {\n  var endLine,\n      content,\n      terminate,\n      i,\n      l,\n      nextLine = startLine + 1,\n      terminatorRules;\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) {\n        continue;\n      } // Some tags can terminate paragraph without empty line.\n\n\n      terminate = false;\n\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n\n      if (terminate) {\n        break;\n      }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [startLine, state.line],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [startLine, state.line],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n};","'use strict';\n/**\n * Local dependencies\n */\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nvar Ruler = require('./ruler');\n\nvar StateInline = require('./rules_inline/state_inline');\n\nvar utils = require('./common/utils');\n/**\n * Inline Parser `rules`\n */\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['del', require('./rules_inline/del')], ['ins', require('./rules_inline/ins')], ['mark', require('./rules_inline/mark')], ['emphasis', require('./rules_inline/emphasis')], ['sub', require('./rules_inline/sub')], ['sup', require('./rules_inline/sup')], ['links', require('./rules_inline/links')], ['footnote_inline', require('./rules_inline/footnote_inline')], ['footnote_ref', require('./rules_inline/footnote_ref')], ['autolink', require('./rules_inline/autolink')], ['htmltag', require('./rules_inline/htmltag')], ['entity', require('./rules_inline/entity')]];\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  } // Can be overridden with a custom validator\n\n\n  this.validateLink = validateLink;\n}\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = ['vbscript', 'javascript', 'file', 'data'];\n  var str = url.trim().toLowerCase(); // Care about digital entities \"javascript&#x3A;alert(1)\"\n\n  str = utils.replaceEntities(str);\n\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Expose `ParserInline`\n */\n\n\nmodule.exports = ParserInline;","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x7E\n    /* ~ */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3A\n    /* : */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n};","// Proceess '\\n'\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Proceess escaped chars and hardbreaks\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","// Parse backticks\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nmodule.exports = function backticks(state, silent) {\n  var start,\n      max,\n      marker,\n      matchStart,\n      matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart).replace(/[ \\n]+/g, ' ').trim(),\n          block: false,\n          level: state.level\n        });\n      }\n\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += marker;\n  }\n\n  state.pos += marker.length;\n  return true;\n};","// Process ~~deleted text~~\n'use strict';\n\nmodule.exports = function del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 4 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start + 1) !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x20 || nextChar === 0x0A) {\n    return false;\n  }\n\n  pos = start + 2;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E\n  /* ~ */\n  ) {\n    pos++;\n  }\n\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n\n    if (!silent) {\n      state.pending += state.src.slice(start, pos);\n    }\n\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E\n    /* ~ */\n    ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x7E\n        /* ~ */\n        ) {\n            lastChar = state.src.charCodeAt(state.pos - 1);\n            nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n            if (nextChar !== 0x7E\n            /* ~ */\n            && lastChar !== 0x7E\n            /* ~ */\n            ) {\n                if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                  // closing '~~'\n                  stack--;\n                } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                  // opening '~~'\n                  stack++;\n                } // else {\n                //  // standalone ' ~~ ' indented with spaces\n                // }\n\n\n                if (stack <= 0) {\n                  found = true;\n                  break;\n                }\n              }\n          }\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({\n      type: 'del_open',\n      level: state.level++\n    });\n    state.parser.tokenize(state);\n    state.push({\n      type: 'del_close',\n      level: --state.level\n    });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};","// Process ++inserted text++\n'use strict';\n\nmodule.exports = function ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B\n  /* + */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 4 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start + 1) !== 0x2B\n  /* + */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B\n  /* + */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x2B\n  /* + */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x20 || nextChar === 0x0A) {\n    return false;\n  }\n\n  pos = start + 2;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B\n  /* + */\n  ) {\n    pos++;\n  }\n\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n\n    if (!silent) {\n      state.pending += state.src.slice(start, pos);\n    }\n\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B\n    /* + */\n    ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x2B\n        /* + */\n        ) {\n            lastChar = state.src.charCodeAt(state.pos - 1);\n            nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n            if (nextChar !== 0x2B\n            /* + */\n            && lastChar !== 0x2B\n            /* + */\n            ) {\n                if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                  // closing '++'\n                  stack--;\n                } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                  // opening '++'\n                  stack++;\n                } // else {\n                //  // standalone ' ++ ' indented with spaces\n                // }\n\n\n                if (stack <= 0) {\n                  found = true;\n                  break;\n                }\n              }\n          }\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({\n      type: 'ins_open',\n      level: state.level++\n    });\n    state.parser.tokenize(state);\n    state.push({\n      type: 'ins_close',\n      level: --state.level\n    });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};","// Process ==highlighted text==\n'use strict';\n\nmodule.exports = function del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 4 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start + 1) !== 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  if (nextChar === 0x20 || nextChar === 0x0A) {\n    return false;\n  }\n\n  pos = start + 2;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D\n  /* = */\n  ) {\n    pos++;\n  }\n\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n\n    if (!silent) {\n      state.pending += state.src.slice(start, pos);\n    }\n\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D\n    /* = */\n    ) {\n        if (state.src.charCodeAt(state.pos + 1) === 0x3D\n        /* = */\n        ) {\n            lastChar = state.src.charCodeAt(state.pos - 1);\n            nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n\n            if (nextChar !== 0x3D\n            /* = */\n            && lastChar !== 0x3D\n            /* = */\n            ) {\n                if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                  // closing '=='\n                  stack--;\n                } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                  // opening '=='\n                  stack++;\n                } // else {\n                //  // standalone ' == ' indented with spaces\n                // }\n\n\n                if (stack <= 0) {\n                  found = true;\n                  break;\n                }\n              }\n          }\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({\n      type: 'mark_open',\n      level: state.level++\n    });\n    state.parser.tokenize(state);\n    state.push({\n      type: 'mark_close',\n      level: --state.level\n    });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};","// Process *this* and _that_\n'use strict';\n\nfunction isAlphaNum(code) {\n  return code >= 0x30\n  /* 0 */\n  && code <= 0x39\n  /* 9 */\n  || code >= 0x41\n  /* A */\n  && code <= 0x5A\n  /* Z */\n  || code >= 0x61\n  /* a */\n  && code <= 0x7A\n  /* z */\n  ;\n} // parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\n\n\nfunction scanDelims(state, start) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  if (pos >= max) {\n    can_open = false;\n  }\n\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1; // check whitespace conditions\n\n    if (nextChar === 0x20 || nextChar === 0x0A) {\n      can_open = false;\n    }\n\n    if (lastChar === 0x20 || lastChar === 0x0A) {\n      can_close = false;\n    }\n\n    if (marker === 0x5F\n    /* _ */\n    ) {\n        // check if we aren't inside the word\n        if (isAlphaNum(lastChar)) {\n          can_open = false;\n        }\n\n        if (isAlphaNum(nextChar)) {\n          can_close = false;\n        }\n      }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nmodule.exports = function emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n\n  if (!res.can_open) {\n    state.pos += startCount;\n\n    if (!silent) {\n      state.pending += state.src.slice(start, state.pos);\n    }\n\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  state.pos = start + startCount;\n  stack = [startCount];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          } // assert(newCount > oldCount)\n\n\n          newCount -= oldCount;\n\n          if (stack.length === 0) {\n            break;\n          }\n\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) {\n        stack.push(count);\n      }\n\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({\n        type: 'strong_open',\n        level: state.level++\n      });\n    }\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({\n        type: 'em_open',\n        level: state.level++\n      });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({\n        type: 'em_close',\n        level: --state.level\n      });\n    }\n\n    if (startCount === 2 || startCount === 3) {\n      state.push({\n        type: 'strong_close',\n        level: --state.level\n      });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n};","// Process ~subscript~\n'use strict'; // same as UNESCAPE_MD_RE plus a space\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nmodule.exports = function sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 2 >= max) {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E\n    /* ~ */\n    ) {\n        found = true;\n        break;\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside\n\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n};","// Process ^superscript^\n'use strict'; // same as UNESCAPE_MD_RE plus a space\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nmodule.exports = function sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E\n  /* ^ */\n  ) {\n      return false;\n    }\n\n  if (silent) {\n    return false;\n  } // don't run any pairs in validation mode\n\n\n  if (start + 2 >= max) {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E\n    /* ^ */\n    ) {\n        found = true;\n        break;\n      }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside\n\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  } // found!\n\n\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n};","// Process [links](<to> \"stuff\")\n'use strict';\n\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\nvar parseLinkDestination = require('../helpers/parse_link_destination');\n\nvar parseLinkTitle = require('../helpers/parse_link_title');\n\nvar normalizeReference = require('../helpers/normalize_reference');\n\nmodule.exports = function links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21\n  /* ! */\n  ) {\n      isImage = true;\n      marker = state.src.charCodeAt(++start);\n    }\n\n  if (marker !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n\n      if (parseLinkDestination(state, pos)) {\n        href = state.linkContent;\n        pos = state.pos;\n      } else {\n        href = '';\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n        title = state.linkContent;\n        pos = state.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (code !== 0x20 && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    // do not allow nested reference links\n    if (state.linkLevel > 0) {\n      return false;\n    } // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n\n\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n\n      if (code !== 0x20 && code !== 0x0A) {\n        break;\n      }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = start - 1;\n        }\n      } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({\n        type: 'link_close',\n        level: --state.level\n      });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process inline footnotes (^[...])\n'use strict';\n\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\nmodule.exports = function footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start) !== 0x5E\n  /* ^ */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(start + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1); // parser failed to find ']', so it's not a valid note\n\n  if (labelEnd < 0) {\n    return false;\n  } // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    if (!state.env.footnotes) {\n      state.env.footnotes = {};\n    }\n\n    if (!state.env.footnotes.list) {\n      state.env.footnotes.list = [];\n    }\n\n    footnoteId = state.env.footnotes.list.length;\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = {\n      tokens: state.tokens.splice(oldLength)\n    };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n};","// Process footnote references ([^...])\n'use strict';\n\nmodule.exports = function footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos; // should be at least 4 chars - \"[^x]\"\n\n  if (start + 3 > max) {\n    return false;\n  }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(start) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(start + 1) !== 0x5E\n  /* ^ */\n  ) {\n      return false;\n    }\n\n  if (state.level >= state.options.maxNesting) {\n    return false;\n  }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos) === 0x0A) {\n      return false;\n    }\n\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    ) {\n        break;\n      }\n  }\n\n  if (pos === start + 2) {\n    return false;\n  } // no empty footnote labels\n\n\n  if (pos >= max) {\n    return false;\n  }\n\n  pos++;\n  label = state.src.slice(start + 2, pos - 1);\n\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') {\n    return false;\n  }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) {\n      state.env.footnotes.list = [];\n    }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = {\n        label: label,\n        count: 0\n      };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process autolinks '<protocol:...>'\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nvar url_schemas = require('../common/url_schemas');\n\nvar normalizeLink = require('../helpers/normalize_link');\n/*eslint max-len:0*/\n\n\nvar EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\nmodule.exports = function autolink(state, silent) {\n  var tail,\n      linkMatch,\n      emailMatch,\n      url,\n      fullUrl,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) {\n    return false;\n  }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) {\n      return false;\n    }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n\n    if (!state.parser.validateLink(url)) {\n      return false;\n    }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({\n        type: 'link_close',\n        level: state.level\n      });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = normalizeLink('mailto:' + url);\n\n    if (!state.parser.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({\n        type: 'link_close',\n        level: state.level\n      });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};","// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n'use strict';\n\nmodule.exports = ['coap', 'doi', 'javascript', 'aaa', 'aaas', 'about', 'acap', 'cap', 'cid', 'crid', 'data', 'dav', 'dict', 'dns', 'file', 'ftp', 'geo', 'go', 'gopher', 'h323', 'http', 'https', 'iax', 'icap', 'im', 'imap', 'info', 'ipp', 'iris', 'iris.beep', 'iris.xpc', 'iris.xpcs', 'iris.lwz', 'ldap', 'mailto', 'mid', 'msrp', 'msrps', 'mtqp', 'mupdate', 'news', 'nfs', 'ni', 'nih', 'nntp', 'opaquelocktoken', 'pop', 'pres', 'rtsp', 'service', 'session', 'shttp', 'sieve', 'sip', 'sips', 'sms', 'snmp', 'soap.beep', 'soap.beeps', 'tag', 'tel', 'telnet', 'tftp', 'thismessage', 'tn3270', 'tip', 'tv', 'urn', 'vemmi', 'ws', 'wss', 'xcon', 'xcon-userid', 'xmlrpc.beep', 'xmlrpc.beeps', 'xmpp', 'z39.50r', 'z39.50s', 'adiumxtra', 'afp', 'afs', 'aim', 'apt', 'attachment', 'aw', 'beshare', 'bitcoin', 'bolo', 'callto', 'chrome', 'chrome-extension', 'com-eventbrite-attendee', 'content', 'cvs', 'dlna-playsingle', 'dlna-playcontainer', 'dtn', 'dvb', 'ed2k', 'facetime', 'feed', 'finger', 'fish', 'gg', 'git', 'gizmoproject', 'gtalk', 'hcp', 'icon', 'ipn', 'irc', 'irc6', 'ircs', 'itms', 'jar', 'jms', 'keyparc', 'lastfm', 'ldaps', 'magnet', 'maps', 'market', 'message', 'mms', 'ms-help', 'msnim', 'mumble', 'mvn', 'notes', 'oid', 'palm', 'paparazzi', 'platform', 'proxy', 'psyc', 'query', 'res', 'resource', 'rmi', 'rsync', 'rtmp', 'secondlife', 'sftp', 'sgn', 'skype', 'smb', 'soldat', 'spotify', 'ssh', 'steam', 'svn', 'teamspeak', 'things', 'udp', 'unreal', 'ut2004', 'ventrilo', 'view-source', 'webcal', 'wtai', 'wyciwyg', 'xfire', 'xri', 'ymsgr'];","// Process html tags\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function htmltag(state, silent) {\n  var ch,\n      match,\n      max,\n      pos = state.pos;\n\n  if (!state.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// Regexps to match html elements\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nfunction replace(regex, options) {\n  regex = regex.source;\n  options = options || '';\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nvar attr_name = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\nvar unquoted = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n/*eslint no-spaced-func:0*/\n\nvar attr_value = replace(/(?:unquoted|single_quoted|double_quoted)/)('unquoted', unquoted)('single_quoted', single_quoted)('double_quoted', double_quoted)();\nvar attribute = replace(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)('attr_name', attr_name)('attr_value', attr_value)();\nvar open_tag = replace(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)('attribute', attribute)();\nvar close_tag = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\nvar HTML_TAG_RE = replace(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)('open_tag', open_tag)('close_tag', close_tag)('comment', comment)('processing', processing)('declaration', declaration)('cdata', cdata)();\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) {\n      return false;\n    }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) {\n            state.pending += entities[match[1]];\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) {\n    state.pending += '&';\n  }\n\n  state.pos++;\n  return true;\n};","// Remarkable default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    linkTarget: '',\n    // set target to open link in\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['block', 'inline', 'references', 'replacements', 'linkify', 'smartquotes', 'references', 'abbr2', 'footnote_tail']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fences', 'footnote', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph', 'table']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'del', 'emphasis', 'entity', 'escape', 'footnote_ref', 'htmltag', 'links', 'newline', 'text']\n    }\n  }\n};","// Remarkable default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    linkTarget: '',\n    // set target to open link in\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    linkTarget: '',\n    // set target to open link in\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['block', 'inline', 'references', 'abbr2']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fences', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'htmltag', 'links', 'newline', 'text']\n    }\n  }\n};"],"sourceRoot":""}